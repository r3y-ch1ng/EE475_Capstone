

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Feb 25 01:56:23 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 2.05
    34                           ; Generated 20/12/2018 GMT
    35                           ; 
    36                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F452 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  00124C                     __pidataCOMRAM:
    70                           	opt callstack 0
    71                           
    72                           ;initializer for stoa@F1152
    73  00124C  28                 	db	40
    74  00124D  6E                 	db	110
    75  00124E  75                 	db	117
    76  00124F  6C                 	db	108
    77  001250  6C                 	db	108
    78  001251  29                 	db	41
    79  001252  00                 	db	0
    80  0000                     _CCP1CON	set	4029
    81  0000                     _CCPR1L	set	4030
    82  0000                     _PR2	set	4043
    83  0000                     _T2CON	set	4042
    84  0000                     _ADRESL	set	4035
    85  0000                     _ADRESH	set	4036
    86  0000                     _ADCON0	set	4034
    87  0000                     _SSPBUF	set	4041
    88  0000                     _SSPCON1	set	4038
    89  0000                     _SSPSTATbits	set	4039
    90  0000                     _T0CON	set	4053
    91  0000                     _TMR0L	set	4054
    92  0000                     _TMR0H	set	4055
    93  0000                     _T0CONbits	set	4053
    94  0000                     _ADCON1	set	4033
    95  0000                     _RCREG1	set	4014
    96  0000                     _TXREG	set	4013
    97  0000                     _RCSTAbits	set	4011
    98  0000                     _RCSTA	set	4011
    99  0000                     _SPBRG	set	4015
   100  0000                     _TXSTAbits	set	4012
   101  0000                     _INTCON2bits	set	4081
   102  0000                     _INTCONbits	set	4082
   103  0000                     _RCONbits	set	4048
   104  0000                     _TRISC	set	3988
   105  0000                     _TRISA	set	3986
   106  0000                     _PORTA	set	3968
   107  0000                     _PORTD	set	3971
   108  0000                     _PORTB	set	3969
   109  0000                     _PORTCbits	set	3970
   110  0000                     _TRISCbits	set	3988
   111  0000                     _TRISB	set	3987
   112  0000                     _TRISD	set	3989
   113  0000                     _GO_nDONE	set	32274
   114  0000                     _TMR0IE	set	32661
   115  0000                     _TMR0IF	set	32658
   116  0000                     _RCIF	set	31989
   117  0000                     _TMR2IP	set	31993
   118  0000                     _TMR2IE	set	31977
   119                           
   120                           	psect	smallconst
   121  000600                     __psmallconst:
   122                           	opt callstack 0
   123  000600  00                 	db	0
   124  000601                     STR_103:
   125  000601  68                 	db	104	;'h'
   126  000602  68                 	db	104	;'h'
   127  000603  58                 	db	88	;'X'
   128  000604  00                 	db	0
   129  000605                     STR_3:
   130  000605  68                 	db	104	;'h'
   131  000606  68                 	db	104	;'h'
   132  000607  64                 	db	100	;'d'
   133  000608  00                 	db	0
   134  000609                     STR_7:
   135  000609  68                 	db	104	;'h'
   136  00060A  68                 	db	104	;'h'
   137  00060B  69                 	db	105	;'i'
   138  00060C  00                 	db	0
   139  00060D                     STR_59:
   140  00060D  68                 	db	104	;'h'
   141  00060E  68                 	db	104	;'h'
   142  00060F  6E                 	db	110	;'n'
   143  000610  00                 	db	0
   144  000611                     STR_39:
   145  000611  68                 	db	104	;'h'
   146  000612  68                 	db	104	;'h'
   147  000613  6F                 	db	111	;'o'
   148  000614  00                 	db	0
   149  000615                     STR_79:
   150  000615  68                 	db	104	;'h'
   151  000616  68                 	db	104	;'h'
   152  000617  75                 	db	117	;'u'
   153  000618  00                 	db	0
   154  000619                     STR_99:
   155  000619  68                 	db	104	;'h'
   156  00061A  68                 	db	104	;'h'
   157  00061B  78                 	db	120	;'x'
   158  00061C  00                 	db	0
   159  00061D                     STR_1:
   160  00061D  25                 	db	37
   161  00061E  6C                 	db	108	;'l'
   162  00061F  75                 	db	117	;'u'
   163  000620  00                 	db	0
   164  000621                     STR_121:
   165  000621  6C                 	db	108	;'l'
   166  000622  58                 	db	88	;'X'
   167  000623  00                 	db	0
   168  000624                     STR_130:
   169  000624  7A                 	db	122	;'z'
   170  000625  58                 	db	88	;'X'
   171  000626  00                 	db	0
   172  000627                     STR_21:
   173  000627  6C                 	db	108	;'l'
   174  000628  64                 	db	100	;'d'
   175  000629  00                 	db	0
   176  00062A                     STR_30:
   177  00062A  7A                 	db	122	;'z'
   178  00062B  64                 	db	100	;'d'
   179  00062C  00                 	db	0
   180  00062D                     STR_25:
   181  00062D  6C                 	db	108	;'l'
   182  00062E  69                 	db	105	;'i'
   183  00062F  00                 	db	0
   184  000630                     STR_34:
   185  000630  7A                 	db	122	;'z'
   186  000631  69                 	db	105	;'i'
   187  000632  00                 	db	0
   188  000633                     STR_69:
   189  000633  6C                 	db	108	;'l'
   190  000634  6E                 	db	110	;'n'
   191  000635  00                 	db	0
   192  000636                     STR_74:
   193  000636  7A                 	db	122	;'z'
   194  000637  6E                 	db	110	;'n'
   195  000638  00                 	db	0
   196  000639                     STR_49:
   197  000639  6C                 	db	108	;'l'
   198  00063A  6F                 	db	111	;'o'
   199  00063B  00                 	db	0
   200  00063C                     STR_54:
   201  00063C  7A                 	db	122	;'z'
   202  00063D  6F                 	db	111	;'o'
   203  00063E  00                 	db	0
   204  00063F                     STR_94:
   205  00063F  7A                 	db	122	;'z'
   206  000640  75                 	db	117	;'u'
   207  000641  00                 	db	0
   208  000642                     STR_117:
   209  000642  6C                 	db	108	;'l'
   210  000643  78                 	db	120	;'x'
   211  000644  00                 	db	0
   212  000645                     STR_126:
   213  000645  7A                 	db	122	;'z'
   214  000646  78                 	db	120	;'x'
   215  000647  00                 	db	0
   216  000648  25                 	db	37
   217  000649  64                 	db	100	;'d'
   218  00064A  00                 	db	0
   219  0000                     
   220                           ; #config settings
   221  00064B  00                 	db	0	; dummy byte at the end
   222  0000                     
   223                           	psect	cinit
   224  001114                     __pcinit:
   225                           	opt callstack 0
   226  001114                     start_initialization:
   227                           	opt callstack 0
   228  001114                     __initialization:
   229                           	opt callstack 0
   230                           
   231                           ; Initialize objects allocated to COMRAM (7 bytes)
   232                           ; load TBLPTR registers with __pidataCOMRAM
   233  001114  0E4C               	movlw	low __pidataCOMRAM
   234  001116  6EF6               	movwf	tblptrl,c
   235  001118  0E12               	movlw	high __pidataCOMRAM
   236  00111A  6EF7               	movwf	tblptrh,c
   237  00111C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   238  00111E  6EF8               	movwf	tblptru,c
   239  001120  EE00  F06A         	lfsr	0,__pdataCOMRAM
   240  001124  EE10 F007          	lfsr	1,7
   241  001128                     copy_data0:
   242  001128  0009               	tblrd		*+
   243  00112A  CFF5 FFEE          	movff	tablat,postinc0
   244  00112E  50E5               	movf	postdec1,w,c
   245  001130  50E1               	movf	fsr1l,w,c
   246  001132  E1FA               	bnz	copy_data0
   247                           
   248                           ; Clear objects allocated to BANK0 (32 bytes)
   249  001134  EE00  F080         	lfsr	0,__pbssBANK0
   250  001138  0E20               	movlw	32
   251  00113A                     clear_0:
   252  00113A  6AEE               	clrf	postinc0,c
   253  00113C  06E8               	decf	wreg,f,c
   254  00113E  E1FD               	bnz	clear_0
   255                           
   256                           ; Clear objects allocated to COMRAM (28 bytes)
   257  001140  EE00  F04E         	lfsr	0,__pbssCOMRAM
   258  001144  0E1C               	movlw	28
   259  001146                     clear_1:
   260  001146  6AEE               	clrf	postinc0,c
   261  001148  06E8               	decf	wreg,f,c
   262  00114A  E1FD               	bnz	clear_1
   263  00114C                     end_of_initialization:
   264                           	opt callstack 0
   265  00114C                     __end_of__initialization:
   266                           	opt callstack 0
   267  00114C  9071               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   268  00114E  9271               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   269  001150  0E00               	movlw	low (__Lsmallconst shr (0+16))
   270  001152  6EF8               	movwf	tblptru,c
   271  001154  0E06               	movlw	high __Lsmallconst
   272  001156  6EF7               	movwf	tblptrh,c
   273  001158  0100               	movlb	0
   274  00115A  EF06  F008         	goto	_main	;jump to C main() function
   275                           
   276                           	psect	bssCOMRAM
   277  00004E                     __pbssCOMRAM:
   278                           	opt callstack 0
   279  00004E                     _lcd:
   280                           	opt callstack 0
   281  00004E                     	ds	5
   282  000053                     _time_ms_2:
   283                           	opt callstack 0
   284  000053                     	ds	4
   285  000057                     _time_ms:
   286                           	opt callstack 0
   287  000057                     	ds	4
   288  00005B                     _errno:
   289                           	opt callstack 0
   290  00005B                     	ds	2
   291  00005D                     	ds	2
   292  00005F                     	ds	2
   293  000061                     	ds	2
   294  000063                     	ds	2
   295  000065                     _interval_events:
   296                           	opt callstack 0
   297  000065                     	ds	2
   298  000067                     	ds	1
   299  000068                     	ds	1
   300  000069                     _flag:
   301                           	opt callstack 0
   302  000069                     	ds	1
   303                           
   304                           	psect	dataCOMRAM
   305  00006A                     __pdataCOMRAM:
   306                           	opt callstack 0
   307  00006A                     	ds	7
   308                           
   309                           	psect	bssBANK0
   310  000080                     __pbssBANK0:
   311                           	opt callstack 0
   312  000080                     	ds	32
   313                           
   314                           	psect	cstackCOMRAM
   315  000001                     __pcstackCOMRAM:
   316                           	opt callstack 0
   317  000001                     ?_ADC_Read:
   318                           	opt callstack 0
   319  000001                     ?___fladd:
   320                           	opt callstack 0
   321  000001                     ?___xxtofl:
   322                           	opt callstack 0
   323  000001                     set_duty_cycle@lower_2:
   324                           	opt callstack 0
   325  000001                     initialize_PWM@freq:
   326                           	opt callstack 0
   327  000001                     ___fladd@b:
   328                           	opt callstack 0
   329  000001                     ___xxtofl@val:
   330                           	opt callstack 0
   331                           
   332                           ; 4 bytes @ 0x0
   333  000001                     	ds	1
   334  000002                     set_duty_cycle@upper_8:
   335                           	opt callstack 0
   336                           
   337                           ; 1 bytes @ 0x1
   338  000002                     	ds	1
   339  000003                     ??_ADC_Read:
   340  000003                     set_duty_cycle@mask:
   341                           	opt callstack 0
   342                           
   343                           ; 1 bytes @ 0x2
   344  000003                     	ds	2
   345  000005                     ??___xxtofl:
   346  000005                     ADC_Read@channel:
   347                           	opt callstack 0
   348  000005                     ___fladd@a:
   349                           	opt callstack 0
   350                           
   351                           ; 4 bytes @ 0x4
   352  000005                     	ds	4
   353  000009                     ??___fladd:
   354  000009                     ___xxtofl@sign:
   355                           	opt callstack 0
   356                           
   357                           ; 1 bytes @ 0x8
   358  000009                     	ds	1
   359  00000A                     ___xxtofl@exp:
   360                           	opt callstack 0
   361                           
   362                           ; 1 bytes @ 0x9
   363  00000A                     	ds	1
   364  00000B                     ___xxtofl@arg:
   365                           	opt callstack 0
   366                           
   367                           ; 4 bytes @ 0xA
   368  00000B                     	ds	2
   369  00000D                     ___fladd@signs:
   370                           	opt callstack 0
   371                           
   372                           ; 1 bytes @ 0xC
   373  00000D                     	ds	1
   374  00000E                     ___fladd@aexp:
   375                           	opt callstack 0
   376                           
   377                           ; 1 bytes @ 0xD
   378  00000E                     	ds	1
   379  00000F                     ?___flmul:
   380                           	opt callstack 0
   381  00000F                     ___fladd@bexp:
   382                           	opt callstack 0
   383  00000F                     ___flmul@b:
   384                           	opt callstack 0
   385                           
   386                           ; 4 bytes @ 0xE
   387  00000F                     	ds	1
   388  000010                     ___fladd@grs:
   389                           	opt callstack 0
   390                           
   391                           ; 1 bytes @ 0xF
   392  000010                     	ds	3
   393  000013                     ___flmul@a:
   394                           	opt callstack 0
   395                           
   396                           ; 4 bytes @ 0x12
   397  000013                     	ds	4
   398  000017                     ??___flmul:
   399                           
   400                           ; 1 bytes @ 0x16
   401  000017                     	ds	4
   402  00001B                     ___flmul@sign:
   403                           	opt callstack 0
   404                           
   405                           ; 1 bytes @ 0x1A
   406  00001B                     	ds	1
   407  00001C                     ___flmul@grs:
   408                           	opt callstack 0
   409                           
   410                           ; 4 bytes @ 0x1B
   411  00001C                     	ds	4
   412  000020                     ___flmul@aexp:
   413                           	opt callstack 0
   414                           
   415                           ; 1 bytes @ 0x1F
   416  000020                     	ds	1
   417  000021                     ___flmul@bexp:
   418                           	opt callstack 0
   419                           
   420                           ; 1 bytes @ 0x20
   421  000021                     	ds	1
   422  000022                     ___flmul@prod:
   423                           	opt callstack 0
   424                           
   425                           ; 4 bytes @ 0x21
   426  000022                     	ds	4
   427  000026                     ___flmul@temp:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0x25
   431  000026                     	ds	2
   432  000028                     ?___flsub:
   433                           	opt callstack 0
   434  000028                     ___flsub@b:
   435                           	opt callstack 0
   436                           
   437                           ; 4 bytes @ 0x27
   438  000028                     	ds	4
   439  00002C                     ___flsub@a:
   440                           	opt callstack 0
   441                           
   442                           ; 4 bytes @ 0x2B
   443  00002C                     	ds	4
   444  000030                     ?_get_temp:
   445                           	opt callstack 0
   446                           
   447                           ; 4 bytes @ 0x2F
   448  000030                     	ds	4
   449  000034                     get_temp@real_voltage:
   450                           	opt callstack 0
   451                           
   452                           ; 4 bytes @ 0x33
   453  000034                     	ds	4
   454  000038                     get_temp@temp:
   455                           	opt callstack 0
   456                           
   457                           ; 4 bytes @ 0x37
   458  000038                     	ds	4
   459  00003C                     get_temp@adc_voltage:
   460                           	opt callstack 0
   461                           
   462                           ; 2 bytes @ 0x3B
   463  00003C                     	ds	2
   464  00003E                     ?___fltol:
   465                           	opt callstack 0
   466  00003E                     ___fltol@f1:
   467                           	opt callstack 0
   468                           
   469                           ; 4 bytes @ 0x3D
   470  00003E                     	ds	4
   471  000042                     ??___fltol:
   472                           
   473                           ; 1 bytes @ 0x41
   474  000042                     	ds	4
   475  000046                     ___fltol@sign1:
   476                           	opt callstack 0
   477                           
   478                           ; 1 bytes @ 0x45
   479  000046                     	ds	1
   480  000047                     ___fltol@exp1:
   481                           	opt callstack 0
   482                           
   483                           ; 1 bytes @ 0x46
   484  000047                     	ds	1
   485  000048                     ??_main:
   486                           
   487                           ; 1 bytes @ 0x47
   488  000048                     	ds	4
   489  00004C                     main@address:
   490                           	opt callstack 0
   491                           
   492                           ; 2 bytes @ 0x4B
   493  00004C                     	ds	2
   494                           
   495 ;;
   496 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   497 ;;
   498 ;; *************** function _main *****************
   499 ;; Defined at:
   500 ;;		line 26 in file "main.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  address         2   75[COMRAM] int 
   505 ;;  temp            2    0        int 
   506 ;; Return value:  Size  Location     Type
   507 ;;                  1    wreg      void 
   508 ;; Registers used:
   509 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   515 ;;      Params:         0       0       0       0       0       0       0
   516 ;;      Locals:         4       0       0       0       0       0       0
   517 ;;      Temps:          2       0       0       0       0       0       0
   518 ;;      Totals:         6       0       0       0       0       0       0
   519 ;;Total ram usage:        6 bytes
   520 ;; Hardware stack levels required when called:    5
   521 ;; This function calls:
   522 ;;		_Timer0_Init
   523 ;;		_Timer0_StartTimer
   524 ;;		___fltol
   525 ;;		_get_temp
   526 ;;		_initialize_PWM
   527 ;;		_initialize_RX
   528 ;;		_initialize_TX
   529 ;;		_set_duty_cycle
   530 ;; This function is called by:
   531 ;;		Startup code after reset
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           	psect	text0
   536  00100C                     __ptext0:
   537                           	opt callstack 0
   538  00100C                     _main:
   539                           	opt callstack 0
   540  00100C  FFFF               	dw	65535	; assembler added errata NOP
   541                           
   542                           ;main.c: 27:   TRISCbits.TRISC2 = 0;
   543                           
   544                           ;incstack = 0
   545  00100E  9494               	bcf	3988,2,c	;volatile
   546                           
   547                           ;main.c: 28:   TMR2IE = 1;
   548  001010  829D               	bsf	3997,1,c	;volatile
   549                           
   550                           ;main.c: 29:   TMR2IP = 1;
   551  001012  829F               	bsf	3999,1,c	;volatile
   552                           
   553                           ;main.c: 30:   RCONbits.IPEN = 1;
   554  001014  8ED0               	bsf	4048,7,c	;volatile
   555                           
   556                           ;main.c: 31:   initialize_PWM(0xFF);
   557  001016  0E00               	movlw	0
   558  001018  6E02               	movwf	initialize_PWM@freq+1,c
   559  00101A  6801               	setf	initialize_PWM@freq,c
   560  00101C  ECF7  F008         	call	_initialize_PWM	;wreg free
   561  001020                     l2706:
   562  001020  FFFF               	dw	65535	; assembler added errata NOP
   563                           
   564                           ;main.c: 33:     int address = 0;
   565  001022  0E00               	movlw	0
   566  001024  6E4D               	movwf	main@address+1,c
   567  001026  0E00               	movlw	0
   568  001028  6E4C               	movwf	main@address,c
   569                           
   570                           ;main.c: 34:     Timer0_Init();
   571  00102A  ECD4  F008         	call	_Timer0_Init	;wreg free
   572                           
   573                           ;main.c: 35:     Timer0_StartTimer();
   574  00102E  EC1E  F009         	call	_Timer0_StartTimer	;wreg free
   575                           
   576                           ;main.c: 36:     initialize_TX();
   577  001032  EC03  F009         	call	_initialize_TX	;wreg free
   578                           
   579                           ;main.c: 37:     initialize_RX();
   580  001036  EC0D  F009         	call	_initialize_RX	;wreg free
   581                           
   582                           ;main.c: 38:     TRISCbits.TRISC7 = 1;
   583  00103A  8E94               	bsf	3988,7,c	;volatile
   584                           
   585                           ;main.c: 39:     TRISCbits.TRISC6 = 0;
   586  00103C  9C94               	bcf	3988,6,c	;volatile
   587  00103E  ECA1  F007         	call	_get_temp	;wreg free
   588  001042  C030  F03E         	movff	?_get_temp,___fltol@f1
   589  001046  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
   590  00104A  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
   591  00104E  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
   592  001052  EC37  F007         	call	___fltol	;wreg free
   593                           
   594                           ;main.c: 42:     address++;
   595  001056  4A4C               	infsnz	main@address,f,c
   596  001058  2A4D               	incf	main@address+1,f,c
   597                           
   598                           ;main.c: 43:     TRISCbits.TRISC7 = 0;
   599  00105A  9E94               	bcf	3988,7,c	;volatile
   600                           
   601                           ;main.c: 44:     _delay((unsigned long)((5000)*(16000000/4000.0)));
   602  00105C  0E4D               	movlw	77
   603  00105E  6E49               	movwf	(??_main+1)& (0+255),c
   604  001060  0E26               	movlw	38
   605  001062  6E48               	movwf	??_main& (0+255),c
   606  001064  0E05               	movlw	5
   607  001066                     u1727:
   608  001066  FFFF               	dw	65535	; errata NOP
   609  001068  2EE8               	decfsz	wreg,f,c
   610  00106A  D7FD               	bra	u1727
   611  00106C  2E48               	decfsz	??_main& (0+255),f,c
   612  00106E  D7FB               	bra	u1727
   613  001070  2E49               	decfsz	(??_main+1)& (0+255),f,c
   614  001072  D7F9               	bra	u1727
   615  001074  D000               	nop2	
   616                           
   617                           ;main.c: 45:     set_duty_cycle(0xAB, 0x03);
   618  001076  0E03               	movlw	3
   619  001078  6E01               	movwf	set_duty_cycle@lower_2,c
   620  00107A  0EAB               	movlw	171
   621  00107C  ECE6  F008         	call	_set_duty_cycle
   622                           
   623                           ;main.c: 46:     _delay((unsigned long)((5000)*(16000000/4000.0)));
   624  001080  0E4D               	movlw	77
   625  001082  6E49               	movwf	(??_main+1)& (0+255),c
   626  001084  0E26               	movlw	38
   627  001086  6E48               	movwf	??_main& (0+255),c
   628  001088  0E05               	movlw	5
   629  00108A                     u1737:
   630  00108A  FFFF               	dw	65535	; errata NOP
   631  00108C  2EE8               	decfsz	wreg,f,c
   632  00108E  D7FD               	bra	u1737
   633  001090  2E48               	decfsz	??_main& (0+255),f,c
   634  001092  D7FB               	bra	u1737
   635  001094  2E49               	decfsz	(??_main+1)& (0+255),f,c
   636  001096  D7F9               	bra	u1737
   637  001098  D000               	nop2	
   638                           
   639                           ;main.c: 47:     set_duty_cycle(0xFF, 0x03);
   640  00109A  0E03               	movlw	3
   641  00109C  6E01               	movwf	set_duty_cycle@lower_2,c
   642  00109E  0EFF               	movlw	255
   643  0010A0  ECE6  F008         	call	_set_duty_cycle
   644                           
   645                           ;main.c: 48:     _delay((unsigned long)((5000)*(16000000/4000.0)));
   646  0010A4  0E4D               	movlw	77
   647  0010A6  6E49               	movwf	(??_main+1)& (0+255),c
   648  0010A8  0E26               	movlw	38
   649  0010AA  6E48               	movwf	??_main& (0+255),c
   650  0010AC  0E05               	movlw	5
   651  0010AE                     u1747:
   652  0010AE  FFFF               	dw	65535	; errata NOP
   653  0010B0  2EE8               	decfsz	wreg,f,c
   654  0010B2  D7FD               	bra	u1747
   655  0010B4  2E48               	decfsz	??_main& (0+255),f,c
   656  0010B6  D7FB               	bra	u1747
   657  0010B8  2E49               	decfsz	(??_main+1)& (0+255),f,c
   658  0010BA  D7F9               	bra	u1747
   659  0010BC  D000               	nop2	
   660  0010BE  D7B0               	goto	l2706
   661  0010C0                     __end_of_main:
   662                           	opt callstack 0
   663                           
   664 ;; *************** function _set_duty_cycle *****************
   665 ;; Defined at:
   666 ;;		line 18 in file "pwm.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;  upper_8         1    wreg     unsigned char 
   669 ;;  lower_2         1    0[COMRAM] unsigned char 
   670 ;; Auto vars:     Size  Location     Type
   671 ;;  upper_8         1    1[COMRAM] unsigned char 
   672 ;;  mask            1    2[COMRAM] unsigned char 
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg, status,2, status,0
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   682 ;;      Params:         1       0       0       0       0       0       0
   683 ;;      Locals:         2       0       0       0       0       0       0
   684 ;;      Temps:          0       0       0       0       0       0       0
   685 ;;      Totals:         3       0       0       0       0       0       0
   686 ;;Total ram usage:        3 bytes
   687 ;; Hardware stack levels used:    1
   688 ;; Hardware stack levels required when called:    2
   689 ;; This function calls:
   690 ;;		Nothing
   691 ;; This function is called by:
   692 ;;		_main
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           	psect	text1
   697  0011CC                     __ptext1:
   698                           	opt callstack 0
   699  0011CC                     _set_duty_cycle:
   700                           	opt callstack 0
   701  0011CC  FFFF               	dw	65535	; assembler added errata NOP
   702                           
   703                           ;incstack = 0
   704                           ;set_duty_cycle@upper_8 stored from wreg
   705  0011CE  6E02               	movwf	set_duty_cycle@upper_8,c
   706                           
   707                           ;pwm.c: 19:   CCPR1L = upper_8;
   708  0011D0  C002  FFBE         	movff	set_duty_cycle@upper_8,4030	;volatile
   709                           
   710                           ;pwm.c: 20:   char mask = 0;
   711  0011D4  0E00               	movlw	0
   712  0011D6  6E03               	movwf	set_duty_cycle@mask,c
   713                           
   714                           ;pwm.c: 21:   mask |= lower_2;
   715  0011D8  5001               	movf	set_duty_cycle@lower_2,w,c
   716  0011DA  1203               	iorwf	set_duty_cycle@mask,f,c
   717                           
   718                           ;pwm.c: 22:   mask = mask << 4;
   719  0011DC  3803               	swapf	set_duty_cycle@mask,w,c
   720  0011DE  0BF0               	andlw	240
   721  0011E0  6E03               	movwf	set_duty_cycle@mask,c
   722                           
   723                           ;pwm.c: 23:   CCP1CON = (CCP1CON & ~(0x30)) | mask;
   724  0011E2  50BD               	movf	4029,w,c	;volatile
   725  0011E4  0BCF               	andlw	207
   726  0011E6  1003               	iorwf	set_duty_cycle@mask,w,c
   727  0011E8  6EBD               	movwf	4029,c	;volatile
   728  0011EA  0012               	return		;funcret
   729  0011EC  FFFF               	dw	65535	; errata NOP
   730  0011EE                     __end_of_set_duty_cycle:
   731                           	opt callstack 0
   732                           
   733 ;; *************** function _initialize_TX *****************
   734 ;; Defined at:
   735 ;;		line 23 in file "serial.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, status,2
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   749 ;;      Params:         0       0       0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0       0       0
   752 ;;      Totals:         0       0       0       0       0       0       0
   753 ;;Total ram usage:        0 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:    2
   756 ;; This function calls:
   757 ;;		Nothing
   758 ;; This function is called by:
   759 ;;		_main
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text2
   764  001206                     __ptext2:
   765                           	opt callstack 0
   766  001206                     _initialize_TX:
   767                           	opt callstack 0
   768  001206  FFFF               	dw	65535	; assembler added errata NOP
   769                           
   770                           ;serial.c: 24:   TXSTAbits.TX9 = 1;
   771                           
   772                           ;incstack = 0
   773  001208  8CAC               	bsf	4012,6,c	;volatile
   774                           
   775                           ;serial.c: 25:   TXSTAbits.TXEN = 1;
   776  00120A  8AAC               	bsf	4012,5,c	;volatile
   777                           
   778                           ;serial.c: 26:   TXSTAbits.SYNC = 0;
   779  00120C  98AC               	bcf	4012,4,c	;volatile
   780                           
   781                           ;serial.c: 27:   TXSTAbits.BRGH = 0;
   782  00120E  94AC               	bcf	4012,2,c	;volatile
   783                           
   784                           ;serial.c: 28:   TXSTAbits.TX9D = 1;
   785  001210  80AC               	bsf	4012,0,c	;volatile
   786                           
   787                           ;serial.c: 29:   SPBRG = 25;
   788  001212  0E19               	movlw	25
   789  001214  6EAF               	movwf	4015,c	;volatile
   790  001216  0012               	return		;funcret
   791  001218  FFFF               	dw	65535	; errata NOP
   792  00121A                     __end_of_initialize_TX:
   793                           	opt callstack 0
   794                           
   795 ;; *************** function _initialize_RX *****************
   796 ;; Defined at:
   797 ;;		line 32 in file "serial.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, status,2
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   811 ;;      Params:         0       0       0       0       0       0       0
   812 ;;      Locals:         0       0       0       0       0       0       0
   813 ;;      Temps:          0       0       0       0       0       0       0
   814 ;;      Totals:         0       0       0       0       0       0       0
   815 ;;Total ram usage:        0 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; Hardware stack levels required when called:    2
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_main
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           	psect	text3
   826  00121A                     __ptext3:
   827                           	opt callstack 0
   828  00121A                     _initialize_RX:
   829                           	opt callstack 0
   830  00121A  FFFF               	dw	65535	; assembler added errata NOP
   831                           
   832                           ;serial.c: 33:   RCSTA = 0x00;
   833                           
   834                           ;incstack = 0
   835  00121C  0E00               	movlw	0
   836  00121E  6EAB               	movwf	4011,c	;volatile
   837                           
   838                           ;serial.c: 34:   RCSTAbits.SPEN = 1;
   839  001220  8EAB               	bsf	4011,7,c	;volatile
   840                           
   841                           ;serial.c: 35:   RCSTAbits.RX9 = 1;
   842  001222  8CAB               	bsf	4011,6,c	;volatile
   843                           
   844                           ;serial.c: 36:   RCSTAbits.CREN = 1;
   845  001224  88AB               	bsf	4011,4,c	;volatile
   846                           
   847                           ;serial.c: 37:   RCSTAbits.ADDEN = 0;
   848  001226  96AB               	bcf	4011,3,c	;volatile
   849                           
   850                           ;serial.c: 38:   RCSTAbits.RX9D = 1;
   851  001228  80AB               	bsf	4011,0,c	;volatile
   852  00122A  0012               	return		;funcret
   853  00122C  FFFF               	dw	65535	; errata NOP
   854  00122E                     __end_of_initialize_RX:
   855                           	opt callstack 0
   856                           
   857 ;; *************** function _initialize_PWM *****************
   858 ;; Defined at:
   859 ;;		line 5 in file "pwm.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;  freq            2    0[COMRAM] int 
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2, status,0
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   873 ;;      Params:         2       0       0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0       0       0
   876 ;;      Totals:         2       0       0       0       0       0       0
   877 ;;Total ram usage:        2 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; Hardware stack levels required when called:    2
   880 ;; This function calls:
   881 ;;		Nothing
   882 ;; This function is called by:
   883 ;;		_main
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text4
   888  0011EE                     __ptext4:
   889                           	opt callstack 0
   890  0011EE                     _initialize_PWM:
   891                           	opt callstack 0
   892  0011EE  FFFF               	dw	65535	; assembler added errata NOP
   893                           
   894                           ;pwm.c: 6:   T2CON &= ~(0x40);
   895                           
   896                           ;incstack = 0
   897  0011F0  9CCA               	bcf	4042,6,c	;volatile
   898                           
   899                           ;pwm.c: 7:   PR2 = 0xFF;
   900  0011F2  68CB               	setf	4043,c	;volatile
   901                           
   902                           ;pwm.c: 8:   CCPR1L = 0xAA;
   903  0011F4  0EAA               	movlw	170
   904  0011F6  6EBE               	movwf	4030,c	;volatile
   905                           
   906                           ;pwm.c: 9:   CCP1CON |= 0x00;
   907  0011F8  50BD               	movf	4029,w,c	;volatile
   908                           
   909                           ;pwm.c: 10:   T2CON = 0x07;
   910  0011FA  0E07               	movlw	7
   911  0011FC  6ECA               	movwf	4042,c	;volatile
   912                           
   913                           ;pwm.c: 11:   CCP1CON |= 0x0C;
   914  0011FE  0E0C               	movlw	12
   915  001200  12BD               	iorwf	4029,f,c	;volatile
   916  001202  0012               	return		;funcret
   917  001204  FFFF               	dw	65535	; errata NOP
   918  001206                     __end_of_initialize_PWM:
   919                           	opt callstack 0
   920                           
   921 ;; *************** function _get_temp *****************
   922 ;; Defined at:
   923 ;;		line 10 in file "temp_adc.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  temp            4   55[COMRAM] float 
   928 ;;  real_voltage    4   51[COMRAM] float 
   929 ;;  adc_voltage     2   59[COMRAM] unsigned int 
   930 ;; Return value:  Size  Location     Type
   931 ;;                  4   47[COMRAM] float 
   932 ;; Registers used:
   933 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   939 ;;      Params:         4       0       0       0       0       0       0
   940 ;;      Locals:        10       0       0       0       0       0       0
   941 ;;      Temps:          0       0       0       0       0       0       0
   942 ;;      Totals:        14       0       0       0       0       0       0
   943 ;;Total ram usage:       14 bytes
   944 ;; Hardware stack levels used:    1
   945 ;; Hardware stack levels required when called:    4
   946 ;; This function calls:
   947 ;;		_ADC_Init
   948 ;;		_ADC_Read
   949 ;;		___flmul
   950 ;;		___flsub
   951 ;;		___xxtofl
   952 ;; This function is called by:
   953 ;;		_main
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text5
   958  000F42                     __ptext5:
   959                           	opt callstack 0
   960  000F42                     _get_temp:
   961                           	opt callstack 0
   962  000F42  FFFF               	dw	65535	; assembler added errata NOP
   963                           
   964                           ;temp_adc.c: 11:   ADC_Init();
   965                           
   966                           ;incstack = 0
   967  000F44  EC17  F009         	call	_ADC_Init	;wreg free
   968                           
   969                           ;temp_adc.c: 12:   ADCON1 &= ~(0x01);
   970  000F48  90C1               	bcf	4033,0,c	;volatile
   971                           
   972                           ;temp_adc.c: 13:   TRISA |= 0x01;
   973  000F4A  8092               	bsf	3986,0,c	;volatile
   974                           
   975                           ;temp_adc.c: 14:   unsigned int adc_voltage = ADC_Read((unsigned char) 0);
   976  000F4C  0E00               	movlw	0
   977  000F4E  EC60  F008         	call	_ADC_Read
   978  000F52  C001  F03C         	movff	?_ADC_Read,get_temp@adc_voltage
   979  000F56  C002  F03D         	movff	?_ADC_Read+1,get_temp@adc_voltage+1
   980                           
   981                           ;temp_adc.c: 15:   float real_voltage = (adc_voltage * 0.0053);
   982  000F5A  C03C  F001         	movff	get_temp@adc_voltage,___xxtofl@val
   983  000F5E  C03D  F002         	movff	get_temp@adc_voltage+1,___xxtofl@val+1
   984  000F62  6A03               	clrf	___xxtofl@val+2,c
   985  000F64  6A04               	clrf	___xxtofl@val+3,c
   986  000F66  0E00               	movlw	0
   987  000F68  EC89  F006         	call	___xxtofl
   988  000F6C  C001  F00F         	movff	?___xxtofl,___flmul@b
   989  000F70  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   990  000F74  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   991  000F78  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   992  000F7C  0E9F               	movlw	159
   993  000F7E  6E13               	movwf	___flmul@a,c
   994  000F80  0EAB               	movlw	171
   995  000F82  6E14               	movwf	___flmul@a+1,c
   996  000F84  0EAD               	movlw	173
   997  000F86  6E15               	movwf	___flmul@a+2,c
   998  000F88  0E3B               	movlw	59
   999  000F8A  6E16               	movwf	___flmul@a+3,c
  1000  000F8C  EC26  F003         	call	___flmul	;wreg free
  1001  000F90  C00F  F034         	movff	?___flmul,get_temp@real_voltage
  1002  000F94  C010  F035         	movff	?___flmul+1,get_temp@real_voltage+1
  1003  000F98  C011  F036         	movff	?___flmul+2,get_temp@real_voltage+2
  1004  000F9C  C012  F037         	movff	?___flmul+3,get_temp@real_voltage+3
  1005                           
  1006                           ;temp_adc.c: 17:   float temp = 200 - 175.0 / 5.0 * real_voltage;
  1007  000FA0  0E00               	movlw	0
  1008  000FA2  6E28               	movwf	___flsub@b,c
  1009  000FA4  0E00               	movlw	0
  1010  000FA6  6E29               	movwf	___flsub@b+1,c
  1011  000FA8  0E48               	movlw	72
  1012  000FAA  6E2A               	movwf	___flsub@b+2,c
  1013  000FAC  0E43               	movlw	67
  1014  000FAE  6E2B               	movwf	___flsub@b+3,c
  1015  000FB0  0E00               	movlw	0
  1016  000FB2  6E13               	movwf	___flmul@a,c
  1017  000FB4  0E00               	movlw	0
  1018  000FB6  6E14               	movwf	___flmul@a+1,c
  1019  000FB8  0E0C               	movlw	12
  1020  000FBA  6E15               	movwf	___flmul@a+2,c
  1021  000FBC  0E42               	movlw	66
  1022  000FBE  6E16               	movwf	___flmul@a+3,c
  1023  000FC0  C034  F00F         	movff	get_temp@real_voltage,___flmul@b
  1024  000FC4  C035  F010         	movff	get_temp@real_voltage+1,___flmul@b+1
  1025  000FC8  C036  F011         	movff	get_temp@real_voltage+2,___flmul@b+2
  1026  000FCC  C037  F012         	movff	get_temp@real_voltage+3,___flmul@b+3
  1027  000FD0  EC26  F003         	call	___flmul	;wreg free
  1028  000FD4  C00F  F02C         	movff	?___flmul,___flsub@a
  1029  000FD8  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  1030  000FDC  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  1031  000FE0  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  1032  000FE4  ECAF  F008         	call	___flsub	;wreg free
  1033  000FE8  C028  F038         	movff	?___flsub,get_temp@temp
  1034  000FEC  C029  F039         	movff	?___flsub+1,get_temp@temp+1
  1035  000FF0  C02A  F03A         	movff	?___flsub+2,get_temp@temp+2
  1036  000FF4  C02B  F03B         	movff	?___flsub+3,get_temp@temp+3
  1037                           
  1038                           ;temp_adc.c: 18:   return temp;
  1039  000FF8  C038  F030         	movff	get_temp@temp,?_get_temp
  1040  000FFC  C039  F031         	movff	get_temp@temp+1,?_get_temp+1
  1041  001000  C03A  F032         	movff	get_temp@temp+2,?_get_temp+2
  1042  001004  C03B  F033         	movff	get_temp@temp+3,?_get_temp+3
  1043  001008  0012               	return		;funcret
  1044  00100A  FFFF               	dw	65535	; errata NOP
  1045  00100C                     __end_of_get_temp:
  1046                           	opt callstack 0
  1047                           
  1048 ;; *************** function ___xxtofl *****************
  1049 ;; Defined at:
  1050 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;  sign            1    wreg     unsigned char 
  1053 ;;  val             4    0[COMRAM] long 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  sign            1    8[COMRAM] unsigned char 
  1056 ;;  arg             4   10[COMRAM] unsigned long 
  1057 ;;  exp             1    9[COMRAM] unsigned char 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  4    0[COMRAM] unsigned char 
  1060 ;; Registers used:
  1061 ;;		wreg, status,2, status,0
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1067 ;;      Params:         4       0       0       0       0       0       0
  1068 ;;      Locals:         6       0       0       0       0       0       0
  1069 ;;      Temps:          4       0       0       0       0       0       0
  1070 ;;      Totals:        14       0       0       0       0       0       0
  1071 ;;Total ram usage:       14 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    2
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_get_temp
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text6
  1082  000D12                     __ptext6:
  1083                           	opt callstack 0
  1084  000D12                     ___xxtofl:
  1085                           	opt callstack 0
  1086  000D12  FFFF               	dw	65535	; assembler added errata NOP
  1087                           
  1088                           ;incstack = 0
  1089                           ;___xxtofl@sign stored from wreg
  1090  000D14  6E09               	movwf	___xxtofl@sign,c
  1091  000D16  5009               	movf	___xxtofl@sign,w,c
  1092  000D18  A4D8               	btfss	status,2,c
  1093  000D1A  AE04               	btfss	___xxtofl@val+3,7,c
  1094  000D1C  D01A               	goto	l1217
  1095  000D1E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1096  000D22  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1097  000D26  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1098  000D2A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1099  000D2E  1E05               	comf	??___xxtofl,f,c
  1100  000D30  1E06               	comf	??___xxtofl+1,f,c
  1101  000D32  1E07               	comf	??___xxtofl+2,f,c
  1102  000D34  1E08               	comf	??___xxtofl+3,f,c
  1103  000D36  2A05               	incf	??___xxtofl,f,c
  1104  000D38  0E00               	movlw	0
  1105  000D3A  2206               	addwfc	??___xxtofl+1,f,c
  1106  000D3C  2207               	addwfc	??___xxtofl+2,f,c
  1107  000D3E  2208               	addwfc	??___xxtofl+3,f,c
  1108  000D40  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1109  000D44  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1110  000D48  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1111  000D4C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1112  000D50  D009               	goto	l2582
  1113  000D52                     l1217:
  1114  000D52  FFFF               	dw	65535	; assembler added errata NOP
  1115  000D54  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1116  000D58  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1117  000D5C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1118  000D60  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1119  000D64                     l2582:
  1120  000D64  FFFF               	dw	65535	; assembler added errata NOP
  1121  000D66  5001               	movf	___xxtofl@val,w,c
  1122  000D68  1002               	iorwf	___xxtofl@val+1,w,c
  1123  000D6A  1003               	iorwf	___xxtofl@val+2,w,c
  1124  000D6C  1004               	iorwf	___xxtofl@val+3,w,c
  1125  000D6E  A4D8               	btfss	status,2,c
  1126  000D70  D009               	goto	l2588
  1127  000D72  0E00               	movlw	0
  1128  000D74  6E01               	movwf	?___xxtofl,c
  1129  000D76  0E00               	movlw	0
  1130  000D78  6E02               	movwf	?___xxtofl+1,c
  1131  000D7A  0E00               	movlw	0
  1132  000D7C  6E03               	movwf	?___xxtofl+2,c
  1133  000D7E  0E00               	movlw	0
  1134  000D80  6E04               	movwf	?___xxtofl+3,c
  1135  000D82  D072               	goto	l1220
  1136  000D84                     l2588:
  1137  000D84  FFFF               	dw	65535	; assembler added errata NOP
  1138  000D86  0E96               	movlw	150
  1139  000D88  6E0A               	movwf	___xxtofl@exp,c
  1140  000D8A  D007               	goto	l2592
  1141  000D8C                     l2590:
  1142  000D8C  FFFF               	dw	65535	; assembler added errata NOP
  1143  000D8E  2A0A               	incf	___xxtofl@exp,f,c
  1144  000D90  90D8               	bcf	status,0,c
  1145  000D92  320E               	rrcf	___xxtofl@arg+3,f,c
  1146  000D94  320D               	rrcf	___xxtofl@arg+2,f,c
  1147  000D96  320C               	rrcf	___xxtofl@arg+1,f,c
  1148  000D98  320B               	rrcf	___xxtofl@arg,f,c
  1149  000D9A                     l2592:
  1150  000D9A  FFFF               	dw	65535	; assembler added errata NOP
  1151  000D9C  0E00               	movlw	0
  1152  000D9E  140B               	andwf	___xxtofl@arg,w,c
  1153  000DA0  6E05               	movwf	??___xxtofl& (0+255),c
  1154  000DA2  0E00               	movlw	0
  1155  000DA4  140C               	andwf	___xxtofl@arg+1,w,c
  1156  000DA6  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1157  000DA8  0E00               	movlw	0
  1158  000DAA  140D               	andwf	___xxtofl@arg+2,w,c
  1159  000DAC  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1160  000DAE  0EFE               	movlw	254
  1161  000DB0  140E               	andwf	___xxtofl@arg+3,w,c
  1162  000DB2  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1163  000DB4  5005               	movf	??___xxtofl,w,c
  1164  000DB6  1006               	iorwf	??___xxtofl+1,w,c
  1165  000DB8  1007               	iorwf	??___xxtofl+2,w,c
  1166  000DBA  1008               	iorwf	??___xxtofl+3,w,c
  1167  000DBC  B4D8               	btfsc	status,2,c
  1168  000DBE  D00E               	goto	l1224
  1169  000DC0  D7E5               	goto	l2590
  1170  000DC2                     l2594:
  1171  000DC2  FFFF               	dw	65535	; assembler added errata NOP
  1172  000DC4  2A0A               	incf	___xxtofl@exp,f,c
  1173  000DC6  0E01               	movlw	1
  1174  000DC8  260B               	addwf	___xxtofl@arg,f,c
  1175  000DCA  0E00               	movlw	0
  1176  000DCC  220C               	addwfc	___xxtofl@arg+1,f,c
  1177  000DCE  220D               	addwfc	___xxtofl@arg+2,f,c
  1178  000DD0  220E               	addwfc	___xxtofl@arg+3,f,c
  1179  000DD2  90D8               	bcf	status,0,c
  1180  000DD4  320E               	rrcf	___xxtofl@arg+3,f,c
  1181  000DD6  320D               	rrcf	___xxtofl@arg+2,f,c
  1182  000DD8  320C               	rrcf	___xxtofl@arg+1,f,c
  1183  000DDA  320B               	rrcf	___xxtofl@arg,f,c
  1184  000DDC                     l1224:
  1185  000DDC  FFFF               	dw	65535	; assembler added errata NOP
  1186  000DDE  0E00               	movlw	0
  1187  000DE0  140B               	andwf	___xxtofl@arg,w,c
  1188  000DE2  6E05               	movwf	??___xxtofl& (0+255),c
  1189  000DE4  0E00               	movlw	0
  1190  000DE6  140C               	andwf	___xxtofl@arg+1,w,c
  1191  000DE8  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1192  000DEA  0E00               	movlw	0
  1193  000DEC  140D               	andwf	___xxtofl@arg+2,w,c
  1194  000DEE  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1195  000DF0  0EFF               	movlw	255
  1196  000DF2  140E               	andwf	___xxtofl@arg+3,w,c
  1197  000DF4  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1198  000DF6  5005               	movf	??___xxtofl,w,c
  1199  000DF8  1006               	iorwf	??___xxtofl+1,w,c
  1200  000DFA  1007               	iorwf	??___xxtofl+2,w,c
  1201  000DFC  1008               	iorwf	??___xxtofl+3,w,c
  1202  000DFE  B4D8               	btfsc	status,2,c
  1203  000E00  D008               	goto	l2602
  1204  000E02  D7DF               	goto	l2594
  1205  000E04                     l2600:
  1206  000E04  FFFF               	dw	65535	; assembler added errata NOP
  1207  000E06  060A               	decf	___xxtofl@exp,f,c
  1208  000E08  90D8               	bcf	status,0,c
  1209  000E0A  360B               	rlcf	___xxtofl@arg,f,c
  1210  000E0C  360C               	rlcf	___xxtofl@arg+1,f,c
  1211  000E0E  360D               	rlcf	___xxtofl@arg+2,f,c
  1212  000E10  360E               	rlcf	___xxtofl@arg+3,f,c
  1213  000E12                     l2602:
  1214  000E12  FFFF               	dw	65535	; assembler added errata NOP
  1215  000E14  BE0D               	btfsc	___xxtofl@arg+2,7,c
  1216  000E16  D003               	goto	u1610
  1217  000E18  0E02               	movlw	2
  1218  000E1A  600A               	cpfslt	___xxtofl@exp,c
  1219  000E1C  D7F3               	goto	l2600
  1220  000E1E                     u1610:
  1221  000E1E  FFFF               	dw	65535	; assembler added errata NOP
  1222  000E20  A00A               	btfss	___xxtofl@exp,0,c
  1223  000E22  9E0D               	bcf	___xxtofl@arg+2,7,c
  1224  000E24  90D8               	bcf	status,0,c
  1225  000E26  320A               	rrcf	___xxtofl@exp,f,c
  1226  000E28  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1227  000E2C  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  1228  000E2E  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  1229  000E30  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  1230  000E32  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1231  000E36  6A07               	clrf	??___xxtofl+2,c
  1232  000E38  6A06               	clrf	??___xxtofl+1,c
  1233  000E3A  6A05               	clrf	??___xxtofl,c
  1234  000E3C  5005               	movf	??___xxtofl,w,c
  1235  000E3E  120B               	iorwf	___xxtofl@arg,f,c
  1236  000E40  5006               	movf	??___xxtofl+1,w,c
  1237  000E42  120C               	iorwf	___xxtofl@arg+1,f,c
  1238  000E44  5007               	movf	??___xxtofl+2,w,c
  1239  000E46  120D               	iorwf	___xxtofl@arg+2,f,c
  1240  000E48  5008               	movf	??___xxtofl+3,w,c
  1241  000E4A  120E               	iorwf	___xxtofl@arg+3,f,c
  1242  000E4C  5009               	movf	___xxtofl@sign,w,c
  1243  000E4E  A4D8               	btfss	status,2,c
  1244  000E50  AE04               	btfss	___xxtofl@val+3,7,c
  1245  000E52  D001               	goto	l2618
  1246  000E54  8E0E               	bsf	___xxtofl@arg+3,7,c
  1247  000E56                     l2618:
  1248  000E56  FFFF               	dw	65535	; assembler added errata NOP
  1249  000E58  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1250  000E5C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1251  000E60  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1252  000E64  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1253  000E68                     l1220:
  1254  000E68  FFFF               	dw	65535	; assembler added errata NOP
  1255  000E6A  0012               	return		;funcret
  1256  000E6C  FFFF               	dw	65535	; errata NOP
  1257  000E6E                     __end_of___xxtofl:
  1258                           	opt callstack 0
  1259                           
  1260 ;; *************** function ___flsub *****************
  1261 ;; Defined at:
  1262 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  b               4   39[COMRAM] unsigned char 
  1265 ;;  a               4   43[COMRAM] unsigned char 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;		None
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  4   39[COMRAM] unsigned char 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2, status,0, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1277 ;;      Params:         8       0       0       0       0       0       0
  1278 ;;      Locals:         0       0       0       0       0       0       0
  1279 ;;      Temps:          0       0       0       0       0       0       0
  1280 ;;      Totals:         8       0       0       0       0       0       0
  1281 ;;Total ram usage:        8 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    3
  1284 ;; This function calls:
  1285 ;;		___fladd
  1286 ;; This function is called by:
  1287 ;;		_get_temp
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text7
  1292  00115E                     __ptext7:
  1293                           	opt callstack 0
  1294  00115E                     ___flsub:
  1295                           	opt callstack 0
  1296  00115E  FFFF               	dw	65535	; assembler added errata NOP
  1297                           
  1298                           ;incstack = 0
  1299  001160  0E00               	movlw	0
  1300  001162  1A2C               	xorwf	___flsub@a,f,c
  1301  001164  0E00               	movlw	0
  1302  001166  1A2D               	xorwf	___flsub@a+1,f,c
  1303  001168  0E00               	movlw	0
  1304  00116A  1A2E               	xorwf	___flsub@a+2,f,c
  1305  00116C  0E80               	movlw	128
  1306  00116E  1A2F               	xorwf	___flsub@a+3,f,c
  1307  001170  C028  F001         	movff	___flsub@b,___fladd@b
  1308  001174  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  1309  001178  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  1310  00117C  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  1311  001180  C02C  F005         	movff	___flsub@a,___fladd@a
  1312  001184  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  1313  001188  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  1314  00118C  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  1315  001190  ECE7  F004         	call	___fladd	;wreg free
  1316  001194  C001  F028         	movff	?___fladd,?___flsub
  1317  001198  C002  F029         	movff	?___fladd+1,?___flsub+1
  1318  00119C  C003  F02A         	movff	?___fladd+2,?___flsub+2
  1319  0011A0  C004  F02B         	movff	?___fladd+3,?___flsub+3
  1320  0011A4  0012               	return		;funcret
  1321  0011A6  FFFF               	dw	65535	; errata NOP
  1322  0011A8                     __end_of___flsub:
  1323                           	opt callstack 0
  1324                           
  1325 ;; *************** function ___fladd *****************
  1326 ;; Defined at:
  1327 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  b               4    0[COMRAM] unsigned char 
  1330 ;;  a               4    4[COMRAM] unsigned char 
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;  grs             1   15[COMRAM] unsigned char 
  1333 ;;  bexp            1   14[COMRAM] unsigned char 
  1334 ;;  aexp            1   13[COMRAM] unsigned char 
  1335 ;;  signs           1   12[COMRAM] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  4    0[COMRAM] unsigned char 
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, status,0
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1345 ;;      Params:         8       0       0       0       0       0       0
  1346 ;;      Locals:         4       0       0       0       0       0       0
  1347 ;;      Temps:          4       0       0       0       0       0       0
  1348 ;;      Totals:        16       0       0       0       0       0       0
  1349 ;;Total ram usage:       16 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:    2
  1352 ;; This function calls:
  1353 ;;		Nothing
  1354 ;; This function is called by:
  1355 ;;		___flsub
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text8
  1360  0009CE                     __ptext8:
  1361                           	opt callstack 0
  1362  0009CE                     ___fladd:
  1363                           	opt callstack 0
  1364  0009CE  FFFF               	dw	65535	; assembler added errata NOP
  1365                           
  1366                           ;incstack = 0
  1367  0009D0  5004               	movf	___fladd@b+3,w,c
  1368  0009D2  0B80               	andlw	128
  1369  0009D4  6E0D               	movwf	___fladd@signs,c
  1370  0009D6  5004               	movf	___fladd@b+3,w,c
  1371  0009D8  2404               	addwf	___fladd@b+3,w,c
  1372  0009DA  6E0F               	movwf	___fladd@bexp,c
  1373  0009DC  BE03               	btfsc	___fladd@b+2,7,c
  1374  0009DE  800F               	bsf	___fladd@bexp,0,c
  1375  0009E0  500F               	movf	___fladd@bexp,w,c
  1376  0009E2  B4D8               	btfsc	status,2,c
  1377  0009E4  D00E               	goto	l2238
  1378  0009E6  280F               	incf	___fladd@bexp,w,c
  1379  0009E8  A4D8               	btfss	status,2,c
  1380  0009EA  D008               	goto	l2234
  1381  0009EC  0E00               	movlw	0
  1382  0009EE  6E01               	movwf	___fladd@b,c
  1383  0009F0  0E00               	movlw	0
  1384  0009F2  6E02               	movwf	___fladd@b+1,c
  1385  0009F4  0E00               	movlw	0
  1386  0009F6  6E03               	movwf	___fladd@b+2,c
  1387  0009F8  0E00               	movlw	0
  1388  0009FA  6E04               	movwf	___fladd@b+3,c
  1389  0009FC                     l2234:
  1390  0009FC  FFFF               	dw	65535	; assembler added errata NOP
  1391  0009FE  8E03               	bsf	___fladd@b+2,7,c
  1392  000A00  D007               	goto	L1
  1393  000A02                     l2238:
  1394  000A02  FFFF               	dw	65535	; assembler added errata NOP
  1395  000A04  0E00               	movlw	0
  1396  000A06  6E01               	movwf	___fladd@b,c
  1397  000A08  0E00               	movlw	0
  1398  000A0A  6E02               	movwf	___fladd@b+1,c
  1399  000A0C  0E00               	movlw	0
  1400  000A0E  6E03               	movwf	___fladd@b+2,c
  1401  000A10                     L1:
  1402  000A10  FFFF               	dw	65535	; assembler added errata NOP
  1403  000A12  0E00               	movlw	0
  1404  000A14  6E04               	movwf	___fladd@b+3,c
  1405  000A16  5008               	movf	___fladd@a+3,w,c
  1406  000A18  0B80               	andlw	128
  1407  000A1A  6E0E               	movwf	___fladd@aexp,c
  1408  000A1C  500D               	movf	___fladd@signs,w,c
  1409  000A1E  180E               	xorwf	___fladd@aexp,w,c
  1410  000A20  A4D8               	btfss	status,2,c
  1411  000A22  8C0D               	bsf	___fladd@signs,6,c
  1412  000A24  5008               	movf	___fladd@a+3,w,c
  1413  000A26  2408               	addwf	___fladd@a+3,w,c
  1414  000A28  6E0E               	movwf	___fladd@aexp,c
  1415  000A2A  BE07               	btfsc	___fladd@a+2,7,c
  1416  000A2C  800E               	bsf	___fladd@aexp,0,c
  1417  000A2E  500E               	movf	___fladd@aexp,w,c
  1418  000A30  B4D8               	btfsc	status,2,c
  1419  000A32  D00E               	goto	l2262
  1420  000A34  280E               	incf	___fladd@aexp,w,c
  1421  000A36  A4D8               	btfss	status,2,c
  1422  000A38  D008               	goto	l2258
  1423  000A3A  0E00               	movlw	0
  1424  000A3C  6E05               	movwf	___fladd@a,c
  1425  000A3E  0E00               	movlw	0
  1426  000A40  6E06               	movwf	___fladd@a+1,c
  1427  000A42  0E00               	movlw	0
  1428  000A44  6E07               	movwf	___fladd@a+2,c
  1429  000A46  0E00               	movlw	0
  1430  000A48  6E08               	movwf	___fladd@a+3,c
  1431  000A4A                     l2258:
  1432  000A4A  FFFF               	dw	65535	; assembler added errata NOP
  1433  000A4C  8E07               	bsf	___fladd@a+2,7,c
  1434  000A4E  D007               	goto	L2
  1435  000A50                     l2262:
  1436  000A50  FFFF               	dw	65535	; assembler added errata NOP
  1437  000A52  0E00               	movlw	0
  1438  000A54  6E05               	movwf	___fladd@a,c
  1439  000A56  0E00               	movlw	0
  1440  000A58  6E06               	movwf	___fladd@a+1,c
  1441  000A5A  0E00               	movlw	0
  1442  000A5C  6E07               	movwf	___fladd@a+2,c
  1443  000A5E                     L2:
  1444  000A5E  FFFF               	dw	65535	; assembler added errata NOP
  1445  000A60  0E00               	movlw	0
  1446  000A62  6E08               	movwf	___fladd@a+3,c
  1447  000A64  500F               	movf	___fladd@bexp,w,c
  1448  000A66  5C0E               	subwf	___fladd@aexp,w,c
  1449  000A68  B0D8               	btfsc	status,0,c
  1450  000A6A  D023               	goto	l2300
  1451  000A6C  AC0D               	btfss	___fladd@signs,6,c
  1452  000A6E  D002               	goto	l2270
  1453  000A70  0E80               	movlw	128
  1454  000A72  1A0D               	xorwf	___fladd@signs,f,c
  1455  000A74                     l2270:
  1456  000A74  FFFF               	dw	65535	; assembler added errata NOP
  1457  000A76  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  1458  000A7A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  1459  000A7E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  1460  000A82  C001  F010         	movff	___fladd@b,___fladd@grs
  1461  000A86  C005  F001         	movff	___fladd@a,___fladd@b
  1462  000A8A  C010  F005         	movff	___fladd@grs,___fladd@a
  1463  000A8E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  1464  000A92  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  1465  000A96  C010  F006         	movff	___fladd@grs,___fladd@a+1
  1466  000A9A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  1467  000A9E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  1468  000AA2  C010  F007         	movff	___fladd@grs,___fladd@a+2
  1469  000AA6  C004  F010         	movff	___fladd@b+3,___fladd@grs
  1470  000AAA  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  1471  000AAE  C010  F008         	movff	___fladd@grs,___fladd@a+3
  1472  000AB2                     l2300:
  1473  000AB2  FFFF               	dw	65535	; assembler added errata NOP
  1474  000AB4  0E00               	movlw	0
  1475  000AB6  6E10               	movwf	___fladd@grs,c
  1476  000AB8  500F               	movf	___fladd@bexp,w,c
  1477  000ABA  C00E  F009         	movff	___fladd@aexp,??___fladd
  1478  000ABE  6A0A               	clrf	(??___fladd+1)& (0+255),c
  1479  000AC0  5E09               	subwf	??___fladd,f,c
  1480  000AC2  0E00               	movlw	0
  1481  000AC4  5A0A               	subwfb	??___fladd+1,f,c
  1482  000AC6  BE0A               	btfsc	??___fladd+1,7,c
  1483  000AC8  D031               	goto	l1091
  1484  000ACA  500A               	movf	??___fladd+1,w,c
  1485  000ACC  E104               	bnz	u1040
  1486  000ACE  0E1A               	movlw	26
  1487  000AD0  5C09               	subwf	??___fladd,w,c
  1488  000AD2  A0D8               	btfss	status,0,c
  1489  000AD4  D02B               	goto	l1091
  1490  000AD6                     u1040:
  1491  000AD6  5001               	movf	___fladd@b,w,c
  1492  000AD8  1002               	iorwf	___fladd@b+1,w,c
  1493  000ADA  1003               	iorwf	___fladd@b+2,w,c
  1494  000ADC  1004               	iorwf	___fladd@b+3,w,c
  1495  000ADE  B4D8               	btfsc	status,2,c
  1496  000AE0  D002               	goto	u1050
  1497  000AE2  0E01               	movlw	1
  1498  000AE4  D002               	goto	u1060
  1499  000AE6                     u1050:
  1500  000AE6  FFFF               	dw	65535	; assembler added errata NOP
  1501  000AE8  0E00               	movlw	0
  1502  000AEA                     u1060:
  1503  000AEA  FFFF               	dw	65535	; assembler added errata NOP
  1504  000AEC  6E10               	movwf	___fladd@grs,c
  1505  000AEE  0E00               	movlw	0
  1506  000AF0  6E01               	movwf	___fladd@b,c
  1507  000AF2  0E00               	movlw	0
  1508  000AF4  6E02               	movwf	___fladd@b+1,c
  1509  000AF6  0E00               	movlw	0
  1510  000AF8  6E03               	movwf	___fladd@b+2,c
  1511  000AFA  0E00               	movlw	0
  1512  000AFC  6E04               	movwf	___fladd@b+3,c
  1513  000AFE  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  1514  000B02  D019               	goto	u1090
  1515  000B04                     l1092:
  1516  000B04  FFFF               	dw	65535	; assembler added errata NOP
  1517  000B06  A010               	btfss	___fladd@grs,0,c
  1518  000B08  D005               	goto	l2312
  1519  000B0A  90D8               	bcf	status,0,c
  1520  000B0C  3010               	rrcf	___fladd@grs,w,c
  1521  000B0E  0901               	iorlw	1
  1522  000B10  6E10               	movwf	___fladd@grs,c
  1523  000B12  D003               	goto	l2314
  1524  000B14                     l2312:
  1525  000B14  FFFF               	dw	65535	; assembler added errata NOP
  1526  000B16  90D8               	bcf	status,0,c
  1527  000B18  3210               	rrcf	___fladd@grs,f,c
  1528  000B1A                     l2314:
  1529  000B1A  FFFF               	dw	65535	; assembler added errata NOP
  1530  000B1C  B001               	btfsc	___fladd@b,0,c
  1531  000B1E  8E10               	bsf	___fladd@grs,7,c
  1532  000B20  3404               	rlcf	___fladd@b+3,w,c
  1533  000B22  3204               	rrcf	___fladd@b+3,f,c
  1534  000B24  3203               	rrcf	___fladd@b+2,f,c
  1535  000B26  3202               	rrcf	___fladd@b+1,f,c
  1536  000B28  3201               	rrcf	___fladd@b,f,c
  1537  000B2A  2A0F               	incf	___fladd@bexp,f,c
  1538  000B2C                     l1091:
  1539  000B2C  FFFF               	dw	65535	; assembler added errata NOP
  1540  000B2E  500E               	movf	___fladd@aexp,w,c
  1541  000B30  5C0F               	subwf	___fladd@bexp,w,c
  1542  000B32  A0D8               	btfss	status,0,c
  1543  000B34  D7E7               	goto	l1092
  1544  000B36                     u1090:
  1545  000B36  FFFF               	dw	65535	; assembler added errata NOP
  1546  000B38  BC0D               	btfsc	___fladd@signs,6,c
  1547  000B3A  D021               	goto	l2346
  1548  000B3C  500F               	movf	___fladd@bexp,w,c
  1549  000B3E  B4D8               	btfsc	status,2,c
  1550  000B40  D065               	goto	u1180
  1551  000B42  5005               	movf	___fladd@a,w,c
  1552  000B44  2601               	addwf	___fladd@b,f,c
  1553  000B46  5006               	movf	___fladd@a+1,w,c
  1554  000B48  2202               	addwfc	___fladd@b+1,f,c
  1555  000B4A  5007               	movf	___fladd@a+2,w,c
  1556  000B4C  2203               	addwfc	___fladd@b+2,f,c
  1557  000B4E  5008               	movf	___fladd@a+3,w,c
  1558  000B50  2204               	addwfc	___fladd@b+3,f,c
  1559  000B52  A004               	btfss	___fladd@b+3,0,c
  1560  000B54  D07B               	goto	u1220
  1561  000B56  A010               	btfss	___fladd@grs,0,c
  1562  000B58  D005               	goto	l2336
  1563  000B5A  90D8               	bcf	status,0,c
  1564  000B5C  3010               	rrcf	___fladd@grs,w,c
  1565  000B5E  0901               	iorlw	1
  1566  000B60  6E10               	movwf	___fladd@grs,c
  1567  000B62  D003               	goto	l2338
  1568  000B64                     l2336:
  1569  000B64  FFFF               	dw	65535	; assembler added errata NOP
  1570  000B66  90D8               	bcf	status,0,c
  1571  000B68  3210               	rrcf	___fladd@grs,f,c
  1572  000B6A                     l2338:
  1573  000B6A  FFFF               	dw	65535	; assembler added errata NOP
  1574  000B6C  B001               	btfsc	___fladd@b,0,c
  1575  000B6E  8E10               	bsf	___fladd@grs,7,c
  1576  000B70  3404               	rlcf	___fladd@b+3,w,c
  1577  000B72  3204               	rrcf	___fladd@b+3,f,c
  1578  000B74  3203               	rrcf	___fladd@b+2,f,c
  1579  000B76  3202               	rrcf	___fladd@b+1,f,c
  1580  000B78  3201               	rrcf	___fladd@b,f,c
  1581  000B7A  2A0F               	incf	___fladd@bexp,f,c
  1582  000B7C  D067               	goto	u1220
  1583  000B7E                     l2346:
  1584  000B7E  FFFF               	dw	65535	; assembler added errata NOP
  1585  000B80  5005               	movf	___fladd@a,w,c
  1586  000B82  5C01               	subwf	___fladd@b,w,c
  1587  000B84  5006               	movf	___fladd@a+1,w,c
  1588  000B86  5802               	subwfb	___fladd@b+1,w,c
  1589  000B88  5007               	movf	___fladd@a+2,w,c
  1590  000B8A  5803               	subwfb	___fladd@b+2,w,c
  1591  000B8C  5004               	movf	___fladd@b+3,w,c
  1592  000B8E  0A80               	xorlw	128
  1593  000B90  6E09               	movwf	??___fladd& (0+255),c
  1594  000B92  5008               	movf	___fladd@a+3,w,c
  1595  000B94  0A80               	xorlw	128
  1596  000B96  5809               	subwfb	??___fladd& (0+255),w,c
  1597  000B98  B0D8               	btfsc	status,0,c
  1598  000B9A  D025               	goto	l2356
  1599  000B9C  5001               	movf	___fladd@b,w,c
  1600  000B9E  5C05               	subwf	___fladd@a,w,c
  1601  000BA0  6E09               	movwf	??___fladd& (0+255),c
  1602  000BA2  5002               	movf	___fladd@b+1,w,c
  1603  000BA4  5806               	subwfb	___fladd@a+1,w,c
  1604  000BA6  6E0A               	movwf	(??___fladd+1)& (0+255),c
  1605  000BA8  5003               	movf	___fladd@b+2,w,c
  1606  000BAA  5807               	subwfb	___fladd@a+2,w,c
  1607  000BAC  6E0B               	movwf	(??___fladd+2)& (0+255),c
  1608  000BAE  5004               	movf	___fladd@b+3,w,c
  1609  000BB0  5808               	subwfb	___fladd@a+3,w,c
  1610  000BB2  6E0C               	movwf	(??___fladd+3)& (0+255),c
  1611  000BB4  0EFF               	movlw	255
  1612  000BB6  2409               	addwf	??___fladd,w,c
  1613  000BB8  6E01               	movwf	___fladd@b,c
  1614  000BBA  0EFF               	movlw	255
  1615  000BBC  200A               	addwfc	??___fladd+1,w,c
  1616  000BBE  6E02               	movwf	___fladd@b+1,c
  1617  000BC0  0EFF               	movlw	255
  1618  000BC2  200B               	addwfc	??___fladd+2,w,c
  1619  000BC4  6E03               	movwf	___fladd@b+2,c
  1620  000BC6  0EFF               	movlw	255
  1621  000BC8  200C               	addwfc	??___fladd+3,w,c
  1622  000BCA  6E04               	movwf	___fladd@b+3,c
  1623  000BCC  0E80               	movlw	128
  1624  000BCE  1A0D               	xorwf	___fladd@signs,f,c
  1625  000BD0  6C10               	negf	___fladd@grs,c
  1626  000BD2  5010               	movf	___fladd@grs,w,c
  1627  000BD4  A4D8               	btfss	status,2,c
  1628  000BD6  D010               	goto	l1107
  1629  000BD8  0E01               	movlw	1
  1630  000BDA  2601               	addwf	___fladd@b,f,c
  1631  000BDC  0E00               	movlw	0
  1632  000BDE  2202               	addwfc	___fladd@b+1,f,c
  1633  000BE0  2203               	addwfc	___fladd@b+2,f,c
  1634  000BE2  2204               	addwfc	___fladd@b+3,f,c
  1635  000BE4  D009               	goto	l1107
  1636  000BE6                     l2356:
  1637  000BE6  FFFF               	dw	65535	; assembler added errata NOP
  1638  000BE8  5005               	movf	___fladd@a,w,c
  1639  000BEA  5E01               	subwf	___fladd@b,f,c
  1640  000BEC  5006               	movf	___fladd@a+1,w,c
  1641  000BEE  5A02               	subwfb	___fladd@b+1,f,c
  1642  000BF0  5007               	movf	___fladd@a+2,w,c
  1643  000BF2  5A03               	subwfb	___fladd@b+2,f,c
  1644  000BF4  5008               	movf	___fladd@a+3,w,c
  1645  000BF6  5A04               	subwfb	___fladd@b+3,f,c
  1646  000BF8                     l1107:
  1647  000BF8  FFFF               	dw	65535	; assembler added errata NOP
  1648  000BFA  5001               	movf	___fladd@b,w,c
  1649  000BFC  1002               	iorwf	___fladd@b+1,w,c
  1650  000BFE  1003               	iorwf	___fladd@b+2,w,c
  1651  000C00  1004               	iorwf	___fladd@b+3,w,c
  1652  000C02  A4D8               	btfss	status,2,c
  1653  000C04  D020               	goto	l2380
  1654  000C06  5010               	movf	___fladd@grs,w,c
  1655  000C08  A4D8               	btfss	status,2,c
  1656  000C0A  D01D               	goto	l2380
  1657  000C0C                     u1180:
  1658  000C0C  FFFF               	dw	65535	; assembler added errata NOP
  1659  000C0E  0E00               	movlw	0
  1660  000C10  6E01               	movwf	?___fladd,c
  1661  000C12  0E00               	movlw	0
  1662  000C14  6E02               	movwf	?___fladd+1,c
  1663  000C16  0E00               	movlw	0
  1664  000C18  6E03               	movwf	?___fladd+2,c
  1665  000C1A  0E00               	movlw	0
  1666  000C1C  6E04               	movwf	?___fladd+3,c
  1667  000C1E  D076               	goto	l1099
  1668  000C20                     l2364:
  1669  000C20  FFFF               	dw	65535	; assembler added errata NOP
  1670  000C22  90D8               	bcf	status,0,c
  1671  000C24  3601               	rlcf	___fladd@b,f,c
  1672  000C26  3602               	rlcf	___fladd@b+1,f,c
  1673  000C28  3603               	rlcf	___fladd@b+2,f,c
  1674  000C2A  3604               	rlcf	___fladd@b+3,f,c
  1675  000C2C  BE10               	btfsc	___fladd@grs,7,c
  1676  000C2E  8001               	bsf	___fladd@b,0,c
  1677  000C30  A010               	btfss	___fladd@grs,0,c
  1678  000C32  D002               	goto	l2374
  1679  000C34  80D8               	bsf	status,0,c
  1680  000C36  D002               	goto	L3
  1681  000C38                     l2374:
  1682  000C38  FFFF               	dw	65535	; assembler added errata NOP
  1683  000C3A  90D8               	bcf	status,0,c
  1684  000C3C                     L3:
  1685  000C3C  FFFF               	dw	65535	; assembler added errata NOP
  1686  000C3E  3610               	rlcf	___fladd@grs,f,c
  1687  000C40  500F               	movf	___fladd@bexp,w,c
  1688  000C42  A4D8               	btfss	status,2,c
  1689  000C44  060F               	decf	___fladd@bexp,f,c
  1690  000C46                     l2380:
  1691  000C46  FFFF               	dw	65535	; assembler added errata NOP
  1692  000C48  AE03               	btfss	___fladd@b+2,7,c
  1693  000C4A  D7EA               	goto	l2364
  1694  000C4C                     u1220:
  1695  000C4C  FFFF               	dw	65535	; assembler added errata NOP
  1696  000C4E  0E00               	movlw	0
  1697  000C50  6E0E               	movwf	___fladd@aexp,c
  1698  000C52  AE10               	btfss	___fladd@grs,7,c
  1699  000C54  D00D               	goto	l1116
  1700  000C56  C010  F009         	movff	___fladd@grs,??___fladd
  1701  000C5A  0E7F               	movlw	127
  1702  000C5C  1609               	andwf	??___fladd,f,c
  1703  000C5E  B4D8               	btfsc	status,2,c
  1704  000C60  D004               	goto	l1117
  1705  000C62                     u1240:
  1706  000C62  FFFF               	dw	65535	; assembler added errata NOP
  1707  000C64  0E01               	movlw	1
  1708  000C66  6E0E               	movwf	___fladd@aexp,c
  1709  000C68  D003               	goto	l1116
  1710  000C6A                     l1117:
  1711  000C6A  FFFF               	dw	65535	; assembler added errata NOP
  1712  000C6C  B001               	btfsc	___fladd@b,0,c
  1713  000C6E  D7F9               	goto	u1240
  1714  000C70                     l1116:
  1715  000C70  FFFF               	dw	65535	; assembler added errata NOP
  1716  000C72  500E               	movf	___fladd@aexp,w,c
  1717  000C74  B4D8               	btfsc	status,2,c
  1718  000C76  D020               	goto	l2400
  1719  000C78  0E01               	movlw	1
  1720  000C7A  2601               	addwf	___fladd@b,f,c
  1721  000C7C  0E00               	movlw	0
  1722  000C7E  2202               	addwfc	___fladd@b+1,f,c
  1723  000C80  2203               	addwfc	___fladd@b+2,f,c
  1724  000C82  2204               	addwfc	___fladd@b+3,f,c
  1725  000C84  A004               	btfss	___fladd@b+3,0,c
  1726  000C86  D018               	goto	l2400
  1727  000C88  C001  F009         	movff	___fladd@b,??___fladd
  1728  000C8C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  1729  000C90  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  1730  000C94  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  1731  000C98  340C               	rlcf	??___fladd+3,w,c
  1732  000C9A  320C               	rrcf	??___fladd+3,f,c
  1733  000C9C  320B               	rrcf	??___fladd+2,f,c
  1734  000C9E  320A               	rrcf	??___fladd+1,f,c
  1735  000CA0  3209               	rrcf	??___fladd,f,c
  1736  000CA2  C009  F001         	movff	??___fladd,___fladd@b
  1737  000CA6  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  1738  000CAA  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  1739  000CAE  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  1740  000CB2  280F               	incf	___fladd@bexp,w,c
  1741  000CB4  A4D8               	btfss	status,2,c
  1742  000CB6  2A0F               	incf	___fladd@bexp,f,c
  1743  000CB8                     l2400:
  1744  000CB8  FFFF               	dw	65535	; assembler added errata NOP
  1745  000CBA  280F               	incf	___fladd@bexp,w,c
  1746  000CBC  B4D8               	btfsc	status,2,c
  1747  000CBE  D003               	goto	u1300
  1748  000CC0  500F               	movf	___fladd@bexp,w,c
  1749  000CC2  A4D8               	btfss	status,2,c
  1750  000CC4  D00E               	goto	l2408
  1751  000CC6                     u1300:
  1752  000CC6  FFFF               	dw	65535	; assembler added errata NOP
  1753  000CC8  0E00               	movlw	0
  1754  000CCA  6E01               	movwf	___fladd@b,c
  1755  000CCC  0E00               	movlw	0
  1756  000CCE  6E02               	movwf	___fladd@b+1,c
  1757  000CD0  0E00               	movlw	0
  1758  000CD2  6E03               	movwf	___fladd@b+2,c
  1759  000CD4  0E00               	movlw	0
  1760  000CD6  6E04               	movwf	___fladd@b+3,c
  1761  000CD8  500F               	movf	___fladd@bexp,w,c
  1762  000CDA  A4D8               	btfss	status,2,c
  1763  000CDC  D002               	goto	l2408
  1764  000CDE  0E00               	movlw	0
  1765  000CE0  6E0D               	movwf	___fladd@signs,c
  1766  000CE2                     l2408:
  1767  000CE2  FFFF               	dw	65535	; assembler added errata NOP
  1768  000CE4  A00F               	btfss	___fladd@bexp,0,c
  1769  000CE6  D002               	goto	l2412
  1770  000CE8  8E03               	bsf	___fladd@b+2,7,c
  1771  000CEA  D002               	goto	l2414
  1772  000CEC                     l2412:
  1773  000CEC  FFFF               	dw	65535	; assembler added errata NOP
  1774  000CEE  9E03               	bcf	___fladd@b+2,7,c
  1775  000CF0                     l2414:
  1776  000CF0  FFFF               	dw	65535	; assembler added errata NOP
  1777  000CF2  90D8               	bcf	status,0,c
  1778  000CF4  300F               	rrcf	___fladd@bexp,w,c
  1779  000CF6  6E04               	movwf	___fladd@b+3,c
  1780  000CF8  BE0D               	btfsc	___fladd@signs,7,c
  1781  000CFA  8E04               	bsf	___fladd@b+3,7,c
  1782  000CFC  C001  F001         	movff	___fladd@b,?___fladd
  1783  000D00  C002  F002         	movff	___fladd@b+1,?___fladd+1
  1784  000D04  C003  F003         	movff	___fladd@b+2,?___fladd+2
  1785  000D08  C004  F004         	movff	___fladd@b+3,?___fladd+3
  1786  000D0C                     l1099:
  1787  000D0C  FFFF               	dw	65535	; assembler added errata NOP
  1788  000D0E  0012               	return		;funcret
  1789  000D10  FFFF               	dw	65535	; errata NOP
  1790  000D12                     __end_of___fladd:
  1791                           	opt callstack 0
  1792                           
  1793 ;; *************** function ___flmul *****************
  1794 ;; Defined at:
  1795 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  b               4   14[COMRAM] unsigned char 
  1798 ;;  a               4   18[COMRAM] unsigned char 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;  prod            4   33[COMRAM] struct .
  1801 ;;  grs             4   27[COMRAM] unsigned long 
  1802 ;;  temp            2   37[COMRAM] struct .
  1803 ;;  bexp            1   32[COMRAM] unsigned char 
  1804 ;;  aexp            1   31[COMRAM] unsigned char 
  1805 ;;  sign            1   26[COMRAM] unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  4   14[COMRAM] unsigned char 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0, prodl, prodh
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1815 ;;      Params:         8       0       0       0       0       0       0
  1816 ;;      Locals:        13       0       0       0       0       0       0
  1817 ;;      Temps:          4       0       0       0       0       0       0
  1818 ;;      Totals:        25       0       0       0       0       0       0
  1819 ;;Total ram usage:       25 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    2
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_get_temp
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text9
  1830  00064C                     __ptext9:
  1831                           	opt callstack 0
  1832  00064C                     ___flmul:
  1833                           	opt callstack 0
  1834  00064C  FFFF               	dw	65535	; assembler added errata NOP
  1835                           
  1836                           ;incstack = 0
  1837  00064E  5012               	movf	___flmul@b+3,w,c
  1838  000650  0B80               	andlw	128
  1839  000652  6E1B               	movwf	___flmul@sign,c
  1840  000654  5012               	movf	___flmul@b+3,w,c
  1841  000656  2412               	addwf	___flmul@b+3,w,c
  1842  000658  6E21               	movwf	___flmul@bexp,c
  1843  00065A  BE11               	btfsc	___flmul@b+2,7,c
  1844  00065C  8021               	bsf	___flmul@bexp,0,c
  1845  00065E  5021               	movf	___flmul@bexp,w,c
  1846  000660  B4D8               	btfsc	status,2,c
  1847  000662  D00E               	goto	l2454
  1848  000664  2821               	incf	___flmul@bexp,w,c
  1849  000666  A4D8               	btfss	status,2,c
  1850  000668  D008               	goto	l2452
  1851  00066A  0E00               	movlw	0
  1852  00066C  6E0F               	movwf	___flmul@b,c
  1853  00066E  0E00               	movlw	0
  1854  000670  6E10               	movwf	___flmul@b+1,c
  1855  000672  0E00               	movlw	0
  1856  000674  6E11               	movwf	___flmul@b+2,c
  1857  000676  0E00               	movlw	0
  1858  000678  6E12               	movwf	___flmul@b+3,c
  1859  00067A                     l2452:
  1860  00067A  FFFF               	dw	65535	; assembler added errata NOP
  1861  00067C  8E11               	bsf	___flmul@b+2,7,c
  1862  00067E  D009               	goto	l2456
  1863  000680                     l2454:
  1864  000680  FFFF               	dw	65535	; assembler added errata NOP
  1865  000682  0E00               	movlw	0
  1866  000684  6E0F               	movwf	___flmul@b,c
  1867  000686  0E00               	movlw	0
  1868  000688  6E10               	movwf	___flmul@b+1,c
  1869  00068A  0E00               	movlw	0
  1870  00068C  6E11               	movwf	___flmul@b+2,c
  1871  00068E  0E00               	movlw	0
  1872  000690  6E12               	movwf	___flmul@b+3,c
  1873  000692                     l2456:
  1874  000692  FFFF               	dw	65535	; assembler added errata NOP
  1875  000694  5016               	movf	___flmul@a+3,w,c
  1876  000696  0B80               	andlw	128
  1877  000698  1A1B               	xorwf	___flmul@sign,f,c
  1878  00069A  5016               	movf	___flmul@a+3,w,c
  1879  00069C  2416               	addwf	___flmul@a+3,w,c
  1880  00069E  6E20               	movwf	___flmul@aexp,c
  1881  0006A0  BE15               	btfsc	___flmul@a+2,7,c
  1882  0006A2  8020               	bsf	___flmul@aexp,0,c
  1883  0006A4  5020               	movf	___flmul@aexp,w,c
  1884  0006A6  B4D8               	btfsc	status,2,c
  1885  0006A8  D00E               	goto	l2472
  1886  0006AA  2820               	incf	___flmul@aexp,w,c
  1887  0006AC  A4D8               	btfss	status,2,c
  1888  0006AE  D008               	goto	l2470
  1889  0006B0  0E00               	movlw	0
  1890  0006B2  6E13               	movwf	___flmul@a,c
  1891  0006B4  0E00               	movlw	0
  1892  0006B6  6E14               	movwf	___flmul@a+1,c
  1893  0006B8  0E00               	movlw	0
  1894  0006BA  6E15               	movwf	___flmul@a+2,c
  1895  0006BC  0E00               	movlw	0
  1896  0006BE  6E16               	movwf	___flmul@a+3,c
  1897  0006C0                     l2470:
  1898  0006C0  FFFF               	dw	65535	; assembler added errata NOP
  1899  0006C2  8E15               	bsf	___flmul@a+2,7,c
  1900  0006C4  D009               	goto	l1176
  1901  0006C6                     l2472:
  1902  0006C6  FFFF               	dw	65535	; assembler added errata NOP
  1903  0006C8  0E00               	movlw	0
  1904  0006CA  6E13               	movwf	___flmul@a,c
  1905  0006CC  0E00               	movlw	0
  1906  0006CE  6E14               	movwf	___flmul@a+1,c
  1907  0006D0  0E00               	movlw	0
  1908  0006D2  6E15               	movwf	___flmul@a+2,c
  1909  0006D4  0E00               	movlw	0
  1910  0006D6  6E16               	movwf	___flmul@a+3,c
  1911  0006D8                     l1176:
  1912  0006D8  FFFF               	dw	65535	; assembler added errata NOP
  1913  0006DA  5020               	movf	___flmul@aexp,w,c
  1914  0006DC  B4D8               	btfsc	status,2,c
  1915  0006DE  D003               	goto	u1430
  1916  0006E0  5021               	movf	___flmul@bexp,w,c
  1917  0006E2  A4D8               	btfss	status,2,c
  1918  0006E4  D00A               	goto	l2480
  1919  0006E6                     u1430:
  1920  0006E6  FFFF               	dw	65535	; assembler added errata NOP
  1921  0006E8  0E00               	movlw	0
  1922  0006EA  6E0F               	movwf	?___flmul,c
  1923  0006EC  0E00               	movlw	0
  1924  0006EE  6E10               	movwf	?___flmul+1,c
  1925  0006F0  0E00               	movlw	0
  1926  0006F2  6E11               	movwf	?___flmul+2,c
  1927  0006F4  0E00               	movlw	0
  1928  0006F6  6E12               	movwf	?___flmul+3,c
  1929  0006F8  D167               	goto	l1180
  1930  0006FA                     l2480:
  1931  0006FA  FFFF               	dw	65535	; assembler added errata NOP
  1932  0006FC  5015               	movf	___flmul@a+2,w,c
  1933  0006FE  020F               	mulwf	___flmul@b,c
  1934  000700  CFF3 F026          	movff	prodl,___flmul@temp
  1935  000704  CFF4 F027          	movff	prodh,___flmul@temp+1
  1936  000708  5026               	movf	___flmul@temp,w,c
  1937  00070A  6E1C               	movwf	___flmul@grs,c
  1938  00070C  6A1D               	clrf	___flmul@grs+1,c
  1939  00070E  6A1E               	clrf	___flmul@grs+2,c
  1940  000710  6A1F               	clrf	___flmul@grs+3,c
  1941  000712  5027               	movf	___flmul@temp+1,w,c
  1942  000714  6E22               	movwf	___flmul@prod,c
  1943  000716  6A23               	clrf	___flmul@prod+1,c
  1944  000718  6A24               	clrf	___flmul@prod+2,c
  1945  00071A  6A25               	clrf	___flmul@prod+3,c
  1946  00071C  5014               	movf	___flmul@a+1,w,c
  1947  00071E  0210               	mulwf	___flmul@b+1,c
  1948  000720  CFF3 F026          	movff	prodl,___flmul@temp
  1949  000724  CFF4 F027          	movff	prodh,___flmul@temp+1
  1950  000728  5026               	movf	___flmul@temp,w,c
  1951  00072A  261C               	addwf	___flmul@grs,f,c
  1952  00072C  0E00               	movlw	0
  1953  00072E  221D               	addwfc	___flmul@grs+1,f,c
  1954  000730  221E               	addwfc	___flmul@grs+2,f,c
  1955  000732  221F               	addwfc	___flmul@grs+3,f,c
  1956  000734  5027               	movf	___flmul@temp+1,w,c
  1957  000736  2622               	addwf	___flmul@prod,f,c
  1958  000738  0E00               	movlw	0
  1959  00073A  2223               	addwfc	___flmul@prod+1,f,c
  1960  00073C  2224               	addwfc	___flmul@prod+2,f,c
  1961  00073E  2225               	addwfc	___flmul@prod+3,f,c
  1962  000740  5013               	movf	___flmul@a,w,c
  1963  000742  0211               	mulwf	___flmul@b+2,c
  1964  000744  CFF3 F026          	movff	prodl,___flmul@temp
  1965  000748  CFF4 F027          	movff	prodh,___flmul@temp+1
  1966  00074C  5026               	movf	___flmul@temp,w,c
  1967  00074E  261C               	addwf	___flmul@grs,f,c
  1968  000750  0E00               	movlw	0
  1969  000752  221D               	addwfc	___flmul@grs+1,f,c
  1970  000754  221E               	addwfc	___flmul@grs+2,f,c
  1971  000756  221F               	addwfc	___flmul@grs+3,f,c
  1972  000758  5027               	movf	___flmul@temp+1,w,c
  1973  00075A  2622               	addwf	___flmul@prod,f,c
  1974  00075C  0E00               	movlw	0
  1975  00075E  2223               	addwfc	___flmul@prod+1,f,c
  1976  000760  2224               	addwfc	___flmul@prod+2,f,c
  1977  000762  2225               	addwfc	___flmul@prod+3,f,c
  1978  000764  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1979  000768  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1980  00076C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1981  000770  6A1C               	clrf	___flmul@grs,c
  1982  000772  5013               	movf	___flmul@a,w,c
  1983  000774  0210               	mulwf	___flmul@b+1,c
  1984  000776  CFF3 F026          	movff	prodl,___flmul@temp
  1985  00077A  CFF4 F027          	movff	prodh,___flmul@temp+1
  1986  00077E  5026               	movf	___flmul@temp,w,c
  1987  000780  261C               	addwf	___flmul@grs,f,c
  1988  000782  5027               	movf	___flmul@temp+1,w,c
  1989  000784  221D               	addwfc	___flmul@grs+1,f,c
  1990  000786  0E00               	movlw	0
  1991  000788  221E               	addwfc	___flmul@grs+2,f,c
  1992  00078A  0E00               	movlw	0
  1993  00078C  221F               	addwfc	___flmul@grs+3,f,c
  1994  00078E  5014               	movf	___flmul@a+1,w,c
  1995  000790  020F               	mulwf	___flmul@b,c
  1996  000792  CFF3 F026          	movff	prodl,___flmul@temp
  1997  000796  CFF4 F027          	movff	prodh,___flmul@temp+1
  1998  00079A  5026               	movf	___flmul@temp,w,c
  1999  00079C  261C               	addwf	___flmul@grs,f,c
  2000  00079E  5027               	movf	___flmul@temp+1,w,c
  2001  0007A0  221D               	addwfc	___flmul@grs+1,f,c
  2002  0007A2  0E00               	movlw	0
  2003  0007A4  221E               	addwfc	___flmul@grs+2,f,c
  2004  0007A6  0E00               	movlw	0
  2005  0007A8  221F               	addwfc	___flmul@grs+3,f,c
  2006  0007AA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2007  0007AE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2008  0007B2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2009  0007B6  6A1C               	clrf	___flmul@grs,c
  2010  0007B8  5013               	movf	___flmul@a,w,c
  2011  0007BA  020F               	mulwf	___flmul@b,c
  2012  0007BC  CFF3 F026          	movff	prodl,___flmul@temp
  2013  0007C0  CFF4 F027          	movff	prodh,___flmul@temp+1
  2014  0007C4  5026               	movf	___flmul@temp,w,c
  2015  0007C6  261C               	addwf	___flmul@grs,f,c
  2016  0007C8  5027               	movf	___flmul@temp+1,w,c
  2017  0007CA  221D               	addwfc	___flmul@grs+1,f,c
  2018  0007CC  0E00               	movlw	0
  2019  0007CE  221E               	addwfc	___flmul@grs+2,f,c
  2020  0007D0  0E00               	movlw	0
  2021  0007D2  221F               	addwfc	___flmul@grs+3,f,c
  2022  0007D4  5015               	movf	___flmul@a+2,w,c
  2023  0007D6  0210               	mulwf	___flmul@b+1,c
  2024  0007D8  CFF3 F026          	movff	prodl,___flmul@temp
  2025  0007DC  CFF4 F027          	movff	prodh,___flmul@temp+1
  2026  0007E0  5026               	movf	___flmul@temp,w,c
  2027  0007E2  2622               	addwf	___flmul@prod,f,c
  2028  0007E4  5027               	movf	___flmul@temp+1,w,c
  2029  0007E6  2223               	addwfc	___flmul@prod+1,f,c
  2030  0007E8  0E00               	movlw	0
  2031  0007EA  2224               	addwfc	___flmul@prod+2,f,c
  2032  0007EC  0E00               	movlw	0
  2033  0007EE  2225               	addwfc	___flmul@prod+3,f,c
  2034  0007F0  5014               	movf	___flmul@a+1,w,c
  2035  0007F2  0211               	mulwf	___flmul@b+2,c
  2036  0007F4  CFF3 F026          	movff	prodl,___flmul@temp
  2037  0007F8  CFF4 F027          	movff	prodh,___flmul@temp+1
  2038  0007FC  5026               	movf	___flmul@temp,w,c
  2039  0007FE  2622               	addwf	___flmul@prod,f,c
  2040  000800  5027               	movf	___flmul@temp+1,w,c
  2041  000802  2223               	addwfc	___flmul@prod+1,f,c
  2042  000804  0E00               	movlw	0
  2043  000806  2224               	addwfc	___flmul@prod+2,f,c
  2044  000808  0E00               	movlw	0
  2045  00080A  2225               	addwfc	___flmul@prod+3,f,c
  2046  00080C  5015               	movf	___flmul@a+2,w,c
  2047  00080E  0211               	mulwf	___flmul@b+2,c
  2048  000810  CFF3 F026          	movff	prodl,___flmul@temp
  2049  000814  CFF4 F027          	movff	prodh,___flmul@temp+1
  2050  000818  5026               	movf	___flmul@temp,w,c
  2051  00081A  6E17               	movwf	??___flmul& (0+255),c
  2052  00081C  5027               	movf	___flmul@temp+1,w,c
  2053  00081E  6E18               	movwf	(??___flmul+1)& (0+255),c
  2054  000820  6A19               	clrf	(??___flmul+2)& (0+255),c
  2055  000822  6A1A               	clrf	(??___flmul+3)& (0+255),c
  2056  000824  C019  F01A         	movff	??___flmul+2,??___flmul+3
  2057  000828  C018  F019         	movff	??___flmul+1,??___flmul+2
  2058  00082C  C017  F018         	movff	??___flmul,??___flmul+1
  2059  000830  6A17               	clrf	??___flmul,c
  2060  000832  5017               	movf	??___flmul,w,c
  2061  000834  2622               	addwf	___flmul@prod,f,c
  2062  000836  5018               	movf	??___flmul+1,w,c
  2063  000838  2223               	addwfc	___flmul@prod+1,f,c
  2064  00083A  5019               	movf	??___flmul+2,w,c
  2065  00083C  2224               	addwfc	___flmul@prod+2,f,c
  2066  00083E  501A               	movf	??___flmul+3,w,c
  2067  000840  2225               	addwfc	___flmul@prod+3,f,c
  2068  000842  C01C  F017         	movff	___flmul@grs,??___flmul
  2069  000846  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  2070  00084A  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  2071  00084E  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  2072  000852  0E19               	movlw	25
  2073  000854  D006               	goto	u1440
  2074  000856                     u1445:
  2075  000856  FFFF               	dw	65535	; assembler added errata NOP
  2076  000858  90D8               	bcf	status,0,c
  2077  00085A  321A               	rrcf	??___flmul+3,f,c
  2078  00085C  3219               	rrcf	??___flmul+2,f,c
  2079  00085E  3218               	rrcf	??___flmul+1,f,c
  2080  000860  3217               	rrcf	??___flmul,f,c
  2081  000862                     u1440:
  2082  000862  FFFF               	dw	65535	; assembler added errata NOP
  2083  000864  2EE8               	decfsz	wreg,f,c
  2084  000866  D7F7               	goto	u1445
  2085  000868  5017               	movf	??___flmul,w,c
  2086  00086A  2622               	addwf	___flmul@prod,f,c
  2087  00086C  5018               	movf	??___flmul+1,w,c
  2088  00086E  2223               	addwfc	___flmul@prod+1,f,c
  2089  000870  5019               	movf	??___flmul+2,w,c
  2090  000872  2224               	addwfc	___flmul@prod+2,f,c
  2091  000874  501A               	movf	??___flmul+3,w,c
  2092  000876  2225               	addwfc	___flmul@prod+3,f,c
  2093  000878  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2094  00087C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2095  000880  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2096  000884  6A1C               	clrf	___flmul@grs,c
  2097  000886  5020               	movf	___flmul@aexp,w,c
  2098  000888  C021  F017         	movff	___flmul@bexp,??___flmul
  2099  00088C  6A18               	clrf	(??___flmul+1)& (0+255),c
  2100  00088E  2617               	addwf	??___flmul,f,c
  2101  000890  0E00               	movlw	0
  2102  000892  2218               	addwfc	??___flmul+1,f,c
  2103  000894  0E82               	movlw	130
  2104  000896  2417               	addwf	??___flmul,w,c
  2105  000898  6E26               	movwf	___flmul@temp,c
  2106  00089A  0EFF               	movlw	255
  2107  00089C  2018               	addwfc	??___flmul+1,w,c
  2108  00089E  6E27               	movwf	___flmul@temp+1,c
  2109  0008A0  D010               	goto	l2528
  2110  0008A2                     l2522:
  2111  0008A2  FFFF               	dw	65535	; assembler added errata NOP
  2112  0008A4  90D8               	bcf	status,0,c
  2113  0008A6  3622               	rlcf	___flmul@prod,f,c
  2114  0008A8  3623               	rlcf	___flmul@prod+1,f,c
  2115  0008AA  3624               	rlcf	___flmul@prod+2,f,c
  2116  0008AC  3625               	rlcf	___flmul@prod+3,f,c
  2117  0008AE  BE1F               	btfsc	___flmul@grs+3,7,c
  2118  0008B0  8022               	bsf	___flmul@prod,0,c
  2119  0008B2  90D8               	bcf	status,0,c
  2120  0008B4  361C               	rlcf	___flmul@grs,f,c
  2121  0008B6  361D               	rlcf	___flmul@grs+1,f,c
  2122  0008B8  361E               	rlcf	___flmul@grs+2,f,c
  2123  0008BA  361F               	rlcf	___flmul@grs+3,f,c
  2124  0008BC  0626               	decf	___flmul@temp,f,c
  2125  0008BE  A0D8               	btfss	status,0,c
  2126  0008C0  0627               	decf	___flmul@temp+1,f,c
  2127  0008C2                     l2528:
  2128  0008C2  FFFF               	dw	65535	; assembler added errata NOP
  2129  0008C4  AE24               	btfss	___flmul@prod+2,7,c
  2130  0008C6  D7ED               	goto	l2522
  2131  0008C8  0E00               	movlw	0
  2132  0008CA  6E20               	movwf	___flmul@aexp,c
  2133  0008CC  AE1F               	btfss	___flmul@grs+3,7,c
  2134  0008CE  D019               	goto	l1185
  2135  0008D0  0EFF               	movlw	255
  2136  0008D2  141C               	andwf	___flmul@grs,w,c
  2137  0008D4  6E17               	movwf	??___flmul& (0+255),c
  2138  0008D6  0EFF               	movlw	255
  2139  0008D8  141D               	andwf	___flmul@grs+1,w,c
  2140  0008DA  6E18               	movwf	(??___flmul+1)& (0+255),c
  2141  0008DC  0EFF               	movlw	255
  2142  0008DE  141E               	andwf	___flmul@grs+2,w,c
  2143  0008E0  6E19               	movwf	(??___flmul+2)& (0+255),c
  2144  0008E2  0E7F               	movlw	127
  2145  0008E4  141F               	andwf	___flmul@grs+3,w,c
  2146  0008E6  6E1A               	movwf	(??___flmul+3)& (0+255),c
  2147  0008E8  5017               	movf	??___flmul,w,c
  2148  0008EA  1018               	iorwf	??___flmul+1,w,c
  2149  0008EC  1019               	iorwf	??___flmul+2,w,c
  2150  0008EE  101A               	iorwf	??___flmul+3,w,c
  2151  0008F0  B4D8               	btfsc	status,2,c
  2152  0008F2  D004               	goto	l1186
  2153  0008F4                     u1480:
  2154  0008F4  FFFF               	dw	65535	; assembler added errata NOP
  2155  0008F6  0E01               	movlw	1
  2156  0008F8  6E20               	movwf	___flmul@aexp,c
  2157  0008FA  D003               	goto	l1185
  2158  0008FC                     l1186:
  2159  0008FC  FFFF               	dw	65535	; assembler added errata NOP
  2160  0008FE  B022               	btfsc	___flmul@prod,0,c
  2161  000900  D7F9               	goto	u1480
  2162  000902                     l1185:
  2163  000902  FFFF               	dw	65535	; assembler added errata NOP
  2164  000904  5020               	movf	___flmul@aexp,w,c
  2165  000906  B4D8               	btfsc	status,2,c
  2166  000908  D01F               	goto	l2548
  2167  00090A  0E01               	movlw	1
  2168  00090C  2622               	addwf	___flmul@prod,f,c
  2169  00090E  0E00               	movlw	0
  2170  000910  2223               	addwfc	___flmul@prod+1,f,c
  2171  000912  2224               	addwfc	___flmul@prod+2,f,c
  2172  000914  2225               	addwfc	___flmul@prod+3,f,c
  2173  000916  A025               	btfss	___flmul@prod+3,0,c
  2174  000918  D017               	goto	l2548
  2175  00091A  C022  F017         	movff	___flmul@prod,??___flmul
  2176  00091E  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  2177  000922  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  2178  000926  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  2179  00092A  341A               	rlcf	??___flmul+3,w,c
  2180  00092C  321A               	rrcf	??___flmul+3,f,c
  2181  00092E  3219               	rrcf	??___flmul+2,f,c
  2182  000930  3218               	rrcf	??___flmul+1,f,c
  2183  000932  3217               	rrcf	??___flmul,f,c
  2184  000934  C017  F022         	movff	??___flmul,___flmul@prod
  2185  000938  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  2186  00093C  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  2187  000940  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  2188  000944  4A26               	infsnz	___flmul@temp,f,c
  2189  000946  2A27               	incf	___flmul@temp+1,f,c
  2190  000948                     l2548:
  2191  000948  FFFF               	dw	65535	; assembler added errata NOP
  2192  00094A  BE27               	btfsc	___flmul@temp+1,7,c
  2193  00094C  D00D               	goto	l2552
  2194  00094E  5027               	movf	___flmul@temp+1,w,c
  2195  000950  E103               	bnz	u1520
  2196  000952  2826               	incf	___flmul@temp,w,c
  2197  000954  A0D8               	btfss	status,0,c
  2198  000956  D008               	goto	l2552
  2199  000958                     u1520:
  2200  000958  0E00               	movlw	0
  2201  00095A  6E22               	movwf	___flmul@prod,c
  2202  00095C  0E00               	movlw	0
  2203  00095E  6E23               	movwf	___flmul@prod+1,c
  2204  000960  0E80               	movlw	128
  2205  000962  6E24               	movwf	___flmul@prod+2,c
  2206  000964  0E7F               	movlw	127
  2207  000966  D023               	goto	L4
  2208  000968                     l2552:
  2209  000968  FFFF               	dw	65535	; assembler added errata NOP
  2210  00096A  BE27               	btfsc	___flmul@temp+1,7,c
  2211  00096C  D005               	goto	u1530
  2212  00096E  5027               	movf	___flmul@temp+1,w,c
  2213  000970  E10F               	bnz	l1193
  2214  000972  0426               	decf	___flmul@temp,w,c
  2215  000974  B0D8               	btfsc	status,0,c
  2216  000976  D00C               	goto	l1193
  2217  000978                     u1530:
  2218  000978  FFFF               	dw	65535	; assembler added errata NOP
  2219  00097A  0E00               	movlw	0
  2220  00097C  6E22               	movwf	___flmul@prod,c
  2221  00097E  0E00               	movlw	0
  2222  000980  6E23               	movwf	___flmul@prod+1,c
  2223  000982  0E00               	movlw	0
  2224  000984  6E24               	movwf	___flmul@prod+2,c
  2225  000986  0E00               	movlw	0
  2226  000988  6E25               	movwf	___flmul@prod+3,c
  2227  00098A  0E00               	movlw	0
  2228  00098C  6E1B               	movwf	___flmul@sign,c
  2229  00098E  D011               	goto	l2564
  2230  000990                     l1193:
  2231  000990  FFFF               	dw	65535	; assembler added errata NOP
  2232  000992  C026  F021         	movff	___flmul@temp,___flmul@bexp
  2233  000996  0EFF               	movlw	255
  2234  000998  1622               	andwf	___flmul@prod,f,c
  2235  00099A  0EFF               	movlw	255
  2236  00099C  1623               	andwf	___flmul@prod+1,f,c
  2237  00099E  0E7F               	movlw	127
  2238  0009A0  1624               	andwf	___flmul@prod+2,f,c
  2239  0009A2  0E00               	movlw	0
  2240  0009A4  1625               	andwf	___flmul@prod+3,f,c
  2241  0009A6  B021               	btfsc	___flmul@bexp,0,c
  2242  0009A8  8E24               	bsf	___flmul@prod+2,7,c
  2243  0009AA  90D8               	bcf	status,0,c
  2244  0009AC  3021               	rrcf	___flmul@bexp,w,c
  2245  0009AE                     L4:
  2246  0009AE  FFFF               	dw	65535	; assembler added errata NOP
  2247  0009B0  6E25               	movwf	___flmul@prod+3,c
  2248  0009B2                     l2564:
  2249  0009B2  FFFF               	dw	65535	; assembler added errata NOP
  2250  0009B4  501B               	movf	___flmul@sign,w,c
  2251  0009B6  1225               	iorwf	___flmul@prod+3,f,c
  2252  0009B8  C022  F00F         	movff	___flmul@prod,?___flmul
  2253  0009BC  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  2254  0009C0  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  2255  0009C4  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  2256  0009C8                     l1180:
  2257  0009C8  FFFF               	dw	65535	; assembler added errata NOP
  2258  0009CA  0012               	return		;funcret
  2259  0009CC  FFFF               	dw	65535	; errata NOP
  2260  0009CE                     __end_of___flmul:
  2261                           	opt callstack 0
  2262                           
  2263 ;; *************** function _ADC_Read *****************
  2264 ;; Defined at:
  2265 ;;		line 28 in file "adc.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  channel         1    wreg     unsigned char 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  channel         1    4[COMRAM] unsigned char 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  2    0[COMRAM] unsigned int 
  2272 ;; Registers used:
  2273 ;;		wreg, status,2, status,0
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2279 ;;      Params:         2       0       0       0       0       0       0
  2280 ;;      Locals:         1       0       0       0       0       0       0
  2281 ;;      Temps:          2       0       0       0       0       0       0
  2282 ;;      Totals:         5       0       0       0       0       0       0
  2283 ;;Total ram usage:        5 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; Hardware stack levels required when called:    2
  2286 ;; This function calls:
  2287 ;;		Nothing
  2288 ;; This function is called by:
  2289 ;;		_get_temp
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           	psect	text10
  2294  0010C0                     __ptext10:
  2295                           	opt callstack 0
  2296  0010C0                     _ADC_Read:
  2297                           	opt callstack 0
  2298  0010C0  FFFF               	dw	65535	; assembler added errata NOP
  2299                           
  2300                           ;incstack = 0
  2301                           ;ADC_Read@channel stored from wreg
  2302  0010C2  6E05               	movwf	ADC_Read@channel,c
  2303                           
  2304                           ;adc.c: 29:  if(channel > 7)
  2305  0010C4  0E07               	movlw	7
  2306  0010C6  6405               	cpfsgt	ADC_Read@channel,c
  2307  0010C8  D005               	goto	l2430
  2308                           
  2309                           ;adc.c: 30:  return 0;
  2310  0010CA  0E00               	movlw	0
  2311  0010CC  6E02               	movwf	?_ADC_Read+1,c
  2312  0010CE  0E00               	movlw	0
  2313  0010D0  6E01               	movwf	?_ADC_Read,c
  2314  0010D2  D01D               	goto	l285
  2315  0010D4                     l2430:
  2316  0010D4  FFFF               	dw	65535	; assembler added errata NOP
  2317                           
  2318                           ;adc.c: 31:  ADCON0 &= 0xC5;
  2319  0010D6  0EC5               	movlw	197
  2320  0010D8  16C2               	andwf	4034,f,c	;volatile
  2321                           
  2322                           ;adc.c: 32:  ADCON0 |= channel<<3;
  2323  0010DA  3805               	swapf	ADC_Read@channel,w,c	;volatile
  2324  0010DC  42E8               	rrncf	wreg,f,c
  2325  0010DE  0BF8               	andlw	248
  2326  0010E0  12C2               	iorwf	4034,f,c	;volatile
  2327                           
  2328                           ;adc.c: 33:  _delay((unsigned long)((2)*(16000000/4000.0)));
  2329  0010E2  0E08               	movlw	8
  2330  0010E4  6E03               	movwf	??_ADC_Read& (0+255),c
  2331  0010E6  0ECB               	movlw	203
  2332  0010E8                     u1757:
  2333  0010E8  FFFF               	dw	65535	; errata NOP
  2334  0010EA  2EE8               	decfsz	wreg,f,c
  2335  0010EC  D7FD               	bra	u1757
  2336  0010EE  2E03               	decfsz	??_ADC_Read& (0+255),f,c
  2337  0010F0  D7FB               	bra	u1757
  2338  0010F2  D000               	nop2	
  2339                           
  2340                           ;adc.c: 34:  GO_nDONE = 1;
  2341  0010F4  84C2               	bsf	4034,2,c	;volatile
  2342  0010F6                     l286:
  2343  0010F6  FFFF               	dw	65535	; assembler added errata NOP
  2344  0010F8  B4C2               	btfsc	4034,2,c	;volatile
  2345  0010FA  D7FD               	goto	l286
  2346                           
  2347                           ;adc.c: 36:  return ((ADRESH<<8)+ADRESL);
  2348  0010FC  50C4               	movf	4036,w,c	;volatile
  2349  0010FE  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  2350  001100  6A03               	clrf	??_ADC_Read& (0+255),c
  2351  001102  50C3               	movf	4035,w,c	;volatile
  2352  001104  2403               	addwf	??_ADC_Read,w,c
  2353  001106  6E01               	movwf	?_ADC_Read,c
  2354  001108  0E00               	movlw	0
  2355  00110A  2004               	addwfc	??_ADC_Read+1,w,c
  2356  00110C  6E02               	movwf	?_ADC_Read+1,c
  2357  00110E                     l285:
  2358  00110E  FFFF               	dw	65535	; assembler added errata NOP
  2359  001110  0012               	return		;funcret
  2360  001112  FFFF               	dw	65535	; errata NOP
  2361  001114                     __end_of_ADC_Read:
  2362                           	opt callstack 0
  2363                           
  2364 ;; *************** function _ADC_Init *****************
  2365 ;; Defined at:
  2366 ;;		line 23 in file "adc.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1    wreg      void 
  2373 ;; Registers used:
  2374 ;;		wreg, status,2
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2380 ;;      Params:         0       0       0       0       0       0       0
  2381 ;;      Locals:         0       0       0       0       0       0       0
  2382 ;;      Temps:          0       0       0       0       0       0       0
  2383 ;;      Totals:         0       0       0       0       0       0       0
  2384 ;;Total ram usage:        0 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    2
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_get_temp
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           	psect	text11
  2395  00122E                     __ptext11:
  2396                           	opt callstack 0
  2397  00122E                     _ADC_Init:
  2398                           	opt callstack 0
  2399  00122E  FFFF               	dw	65535	; assembler added errata NOP
  2400                           
  2401                           ;adc.c: 24:  ADCON0 = 0x81;
  2402                           
  2403                           ;incstack = 0
  2404  001230  0E81               	movlw	129
  2405  001232  6EC2               	movwf	4034,c	;volatile
  2406                           
  2407                           ;adc.c: 25:  ADCON1 = 0x80;
  2408  001234  0E80               	movlw	128
  2409  001236  6EC1               	movwf	4033,c	;volatile
  2410  001238  0012               	return		;funcret
  2411  00123A  FFFF               	dw	65535	; errata NOP
  2412  00123C                     __end_of_ADC_Init:
  2413                           	opt callstack 0
  2414                           
  2415 ;; *************** function ___fltol *****************
  2416 ;; Defined at:
  2417 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  f1              4   61[COMRAM] void 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  exp1            1   70[COMRAM] unsigned char 
  2422 ;;  sign1           1   69[COMRAM] unsigned char 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  4   61[COMRAM] long 
  2425 ;; Registers used:
  2426 ;;		wreg, status,2, status,0
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2432 ;;      Params:         4       0       0       0       0       0       0
  2433 ;;      Locals:         2       0       0       0       0       0       0
  2434 ;;      Temps:          4       0       0       0       0       0       0
  2435 ;;      Totals:        10       0       0       0       0       0       0
  2436 ;;Total ram usage:       10 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    2
  2439 ;; This function calls:
  2440 ;;		Nothing
  2441 ;; This function is called by:
  2442 ;;		_main
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text12
  2447  000E6E                     __ptext12:
  2448                           	opt callstack 0
  2449  000E6E                     ___fltol:
  2450                           	opt callstack 0
  2451  000E6E  FFFF               	dw	65535	; assembler added errata NOP
  2452                           
  2453                           ;incstack = 0
  2454  000E70  3440               	rlcf	___fltol@f1+2,w,c
  2455  000E72  3441               	rlcf	___fltol@f1+3,w,c
  2456  000E74  6E47               	movwf	___fltol@exp1,c
  2457  000E76  5047               	movf	___fltol@exp1,w,c
  2458  000E78  A4D8               	btfss	status,2,c
  2459  000E7A  D00A               	goto	l2664
  2460  000E7C                     u1650:
  2461  000E7C  FFFF               	dw	65535	; assembler added errata NOP
  2462  000E7E  0E00               	movlw	0
  2463  000E80  6E3E               	movwf	?___fltol,c
  2464  000E82  0E00               	movlw	0
  2465  000E84  6E3F               	movwf	?___fltol+1,c
  2466  000E86  0E00               	movlw	0
  2467  000E88  6E40               	movwf	?___fltol+2,c
  2468  000E8A  0E00               	movlw	0
  2469  000E8C  6E41               	movwf	?___fltol+3,c
  2470  000E8E  D056               	goto	l859
  2471  000E90                     l2664:
  2472  000E90  FFFF               	dw	65535	; assembler added errata NOP
  2473  000E92  C03E  F042         	movff	___fltol@f1,??___fltol
  2474  000E96  C03F  F043         	movff	___fltol@f1+1,??___fltol+1
  2475  000E9A  C040  F044         	movff	___fltol@f1+2,??___fltol+2
  2476  000E9E  C041  F045         	movff	___fltol@f1+3,??___fltol+3
  2477  000EA2  0E20               	movlw	32
  2478  000EA4  D006               	goto	u1660
  2479  000EA6                     u1665:
  2480  000EA6  FFFF               	dw	65535	; assembler added errata NOP
  2481  000EA8  90D8               	bcf	status,0,c
  2482  000EAA  3245               	rrcf	??___fltol+3,f,c
  2483  000EAC  3244               	rrcf	??___fltol+2,f,c
  2484  000EAE  3243               	rrcf	??___fltol+1,f,c
  2485  000EB0  3242               	rrcf	??___fltol,f,c
  2486  000EB2                     u1660:
  2487  000EB2  FFFF               	dw	65535	; assembler added errata NOP
  2488  000EB4  2EE8               	decfsz	wreg,f,c
  2489  000EB6  D7F7               	goto	u1665
  2490  000EB8  5042               	movf	??___fltol,w,c
  2491  000EBA  6E46               	movwf	___fltol@sign1,c
  2492  000EBC  8E40               	bsf	___fltol@f1+2,7,c
  2493  000EBE  0EFF               	movlw	255
  2494  000EC0  163E               	andwf	___fltol@f1,f,c
  2495  000EC2  0EFF               	movlw	255
  2496  000EC4  163F               	andwf	___fltol@f1+1,f,c
  2497  000EC6  0EFF               	movlw	255
  2498  000EC8  1640               	andwf	___fltol@f1+2,f,c
  2499  000ECA  0E00               	movlw	0
  2500  000ECC  1641               	andwf	___fltol@f1+3,f,c
  2501  000ECE  0E96               	movlw	150
  2502  000ED0  5E47               	subwf	___fltol@exp1,f,c
  2503  000ED2  AE47               	btfss	___fltol@exp1,7,c
  2504  000ED4  D00E               	goto	l2684
  2505  000ED6  5047               	movf	___fltol@exp1,w,c
  2506  000ED8  0A80               	xorlw	128
  2507  000EDA  0F97               	addlw	151
  2508  000EDC  A0D8               	btfss	status,0,c
  2509  000EDE  D7CE               	goto	u1650
  2510  000EE0                     l2680:
  2511  000EE0  FFFF               	dw	65535	; assembler added errata NOP
  2512  000EE2  90D8               	bcf	status,0,c
  2513  000EE4  3241               	rrcf	___fltol@f1+3,f,c
  2514  000EE6  3240               	rrcf	___fltol@f1+2,f,c
  2515  000EE8  323F               	rrcf	___fltol@f1+1,f,c
  2516  000EEA  323E               	rrcf	___fltol@f1,f,c
  2517  000EEC  3E47               	incfsz	___fltol@exp1,f,c
  2518  000EEE  D7F8               	goto	l2680
  2519  000EF0  D010               	goto	u1700
  2520  000EF2                     l2684:
  2521  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  2522  000EF4  0E1F               	movlw	31
  2523  000EF6  6447               	cpfsgt	___fltol@exp1,c
  2524  000EF8  D008               	goto	l2692
  2525  000EFA  D7C0               	goto	u1650
  2526  000EFC                     l2690:
  2527  000EFC  FFFF               	dw	65535	; assembler added errata NOP
  2528  000EFE  90D8               	bcf	status,0,c
  2529  000F00  363E               	rlcf	___fltol@f1,f,c
  2530  000F02  363F               	rlcf	___fltol@f1+1,f,c
  2531  000F04  3640               	rlcf	___fltol@f1+2,f,c
  2532  000F06  3641               	rlcf	___fltol@f1+3,f,c
  2533  000F08  0647               	decf	___fltol@exp1,f,c
  2534  000F0A                     l2692:
  2535  000F0A  FFFF               	dw	65535	; assembler added errata NOP
  2536  000F0C  5047               	movf	___fltol@exp1,w,c
  2537  000F0E  A4D8               	btfss	status,2,c
  2538  000F10  D7F5               	goto	l2690
  2539  000F12                     u1700:
  2540  000F12  FFFF               	dw	65535	; assembler added errata NOP
  2541  000F14  5046               	movf	___fltol@sign1,w,c
  2542  000F16  B4D8               	btfsc	status,2,c
  2543  000F18  D008               	goto	l2698
  2544  000F1A  1E41               	comf	___fltol@f1+3,f,c
  2545  000F1C  1E40               	comf	___fltol@f1+2,f,c
  2546  000F1E  1E3F               	comf	___fltol@f1+1,f,c
  2547  000F20  6C3E               	negf	___fltol@f1,c
  2548  000F22  0E00               	movlw	0
  2549  000F24  223F               	addwfc	___fltol@f1+1,f,c
  2550  000F26  2240               	addwfc	___fltol@f1+2,f,c
  2551  000F28  2241               	addwfc	___fltol@f1+3,f,c
  2552  000F2A                     l2698:
  2553  000F2A  FFFF               	dw	65535	; assembler added errata NOP
  2554  000F2C  C03E  F03E         	movff	___fltol@f1,?___fltol
  2555  000F30  C03F  F03F         	movff	___fltol@f1+1,?___fltol+1
  2556  000F34  C040  F040         	movff	___fltol@f1+2,?___fltol+2
  2557  000F38  C041  F041         	movff	___fltol@f1+3,?___fltol+3
  2558  000F3C                     l859:
  2559  000F3C  FFFF               	dw	65535	; assembler added errata NOP
  2560  000F3E  0012               	return		;funcret
  2561  000F40  FFFF               	dw	65535	; errata NOP
  2562  000F42                     __end_of___fltol:
  2563                           	opt callstack 0
  2564                           
  2565 ;; *************** function _Timer0_StartTimer *****************
  2566 ;; Defined at:
  2567 ;;		line 21 in file "timer.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;		None
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;		None
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  2  117[None  ] int 
  2574 ;; Registers used:
  2575 ;;		None
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2581 ;;      Params:         0       0       0       0       0       0       0
  2582 ;;      Locals:         0       0       0       0       0       0       0
  2583 ;;      Temps:          0       0       0       0       0       0       0
  2584 ;;      Totals:         0       0       0       0       0       0       0
  2585 ;;Total ram usage:        0 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:    2
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text13
  2596  00123C                     __ptext13:
  2597                           	opt callstack 0
  2598  00123C                     _Timer0_StartTimer:
  2599                           	opt callstack 0
  2600  00123C  FFFF               	dw	65535	; assembler added errata NOP
  2601                           
  2602                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  2603                           
  2604                           ;incstack = 0
  2605  00123E  8ED5               	bsf	4053,7,c	;volatile
  2606                           
  2607                           ;timer.c: 23:  return 0;;	Return value of _Timer0_StartTimer is never used
  2608  001240  0012               	return		;funcret
  2609  001242  FFFF               	dw	65535	; errata NOP
  2610  001244                     __end_of_Timer0_StartTimer:
  2611                           	opt callstack 0
  2612                           
  2613 ;; *************** function _Timer0_Init *****************
  2614 ;; Defined at:
  2615 ;;		line 8 in file "timer.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;		None
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2629 ;;      Params:         0       0       0       0       0       0       0
  2630 ;;      Locals:         0       0       0       0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0       0       0
  2632 ;;      Totals:         0       0       0       0       0       0       0
  2633 ;;Total ram usage:        0 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; Hardware stack levels required when called:    2
  2636 ;; This function calls:
  2637 ;;		Nothing
  2638 ;; This function is called by:
  2639 ;;		_main
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text14
  2644  0011A8                     __ptext14:
  2645                           	opt callstack 0
  2646  0011A8                     _Timer0_Init:
  2647                           	opt callstack 0
  2648  0011A8  FFFF               	dw	65535	; assembler added errata NOP
  2649                           
  2650                           ;timer.c: 9:  time_ms = 0;
  2651                           
  2652                           ;incstack = 0
  2653  0011AA  0E00               	movlw	0
  2654  0011AC  6E57               	movwf	_time_ms,c	;volatile
  2655  0011AE  0E00               	movlw	0
  2656  0011B0  6E58               	movwf	_time_ms+1,c	;volatile
  2657  0011B2  0E00               	movlw	0
  2658  0011B4  6E59               	movwf	_time_ms+2,c	;volatile
  2659  0011B6  0E00               	movlw	0
  2660  0011B8  6E5A               	movwf	_time_ms+3,c	;volatile
  2661                           
  2662                           ;timer.c: 10:  T0CONbits.T08BIT = 0;
  2663  0011BA  9CD5               	bcf	4053,6,c	;volatile
  2664                           
  2665                           ;timer.c: 11:  TMR0H = 0xFF;
  2666  0011BC  68D7               	setf	4055,c	;volatile
  2667                           
  2668                           ;timer.c: 12:  TMR0L = 0x34;
  2669  0011BE  0E34               	movlw	52
  2670  0011C0  6ED6               	movwf	4054,c	;volatile
  2671                           
  2672                           ;timer.c: 13:  INTCONbits.TMR0IF = 0;
  2673  0011C2  94F2               	bcf	4082,2,c	;volatile
  2674                           
  2675                           ;timer.c: 14:  T0CON = 0x00;
  2676  0011C4  0E00               	movlw	0
  2677  0011C6  6ED5               	movwf	4053,c	;volatile
  2678  0011C8  0012               	return		;funcret
  2679  0011CA  FFFF               	dw	65535	; errata NOP
  2680  0011CC                     __end_of_Timer0_Init:
  2681                           	opt callstack 0
  2682                           
  2683 ;; *************** function _timingISR *****************
  2684 ;; Defined at:
  2685 ;;		line 31 in file "timer.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;		None
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		wreg, status,2, status,0, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2699 ;;      Params:         0       0       0       0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0       0       0
  2702 ;;      Totals:         0       0       0       0       0       0       0
  2703 ;;Total ram usage:        0 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    1
  2706 ;; This function calls:
  2707 ;;		i2_Timer0_StartTimer
  2708 ;; This function is called by:
  2709 ;;		Interrupt level 2
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           	psect	intcode
  2714  000008                     __pintcode:
  2715                           	opt callstack 0
  2716  000008                     _timingISR:
  2717                           	opt callstack 0
  2718  000008  FFFF               	dw	65535	; assembler added errata NOP
  2719                           
  2720                           ;incstack = 0
  2721  00000A  8271               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2722                           
  2723                           ;timer.c: 32:  if (TMR0IF && TMR0IE) {
  2724  00000C  B4F2               	btfsc	4082,2,c	;volatile
  2725  00000E  AAF2               	btfss	4082,5,c	;volatile
  2726  000010  D00C               	goto	i2l247
  2727                           
  2728                           ;timer.c: 33:   TMR0IF = 0;
  2729  000012  94F2               	bcf	4082,2,c	;volatile
  2730                           
  2731                           ;timer.c: 34:   time_ms++;
  2732  000014  0E01               	movlw	1
  2733  000016  2657               	addwf	_time_ms,f,c	;volatile
  2734  000018  0E00               	movlw	0
  2735  00001A  2258               	addwfc	_time_ms+1,f,c	;volatile
  2736  00001C  2259               	addwfc	_time_ms+2,f,c	;volatile
  2737  00001E  225A               	addwfc	_time_ms+3,f,c	;volatile
  2738                           
  2739                           ;timer.c: 35:   TMR0H = 0xFF;
  2740  000020  68D7               	setf	4055,c	;volatile
  2741                           
  2742                           ;timer.c: 36:   TMR0L = 0x34;
  2743  000022  0E34               	movlw	52
  2744  000024  6ED6               	movwf	4054,c	;volatile
  2745                           
  2746                           ;timer.c: 37:   Timer0_StartTimer();
  2747  000026  EC22  F009         	call	i2_Timer0_StartTimer	;wreg free
  2748  00002A                     i2l247:
  2749  00002A  FFFF               	dw	65535	; assembler added errata NOP
  2750  00002C  9271               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2751  00002E  0011               	retfie		f
  2752  000030  FFFF               	dw	65535	; errata NOP
  2753  000032                     __end_of_timingISR:
  2754                           	opt callstack 0
  2755                           
  2756 ;; *************** function i2_Timer0_StartTimer *****************
  2757 ;; Defined at:
  2758 ;;		line 21 in file "timer.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;		None
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;		None
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  2    0[None  ] int 
  2765 ;; Registers used:
  2766 ;;		None
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2772 ;;      Params:         0       0       0       0       0       0       0
  2773 ;;      Locals:         0       0       0       0       0       0       0
  2774 ;;      Temps:          0       0       0       0       0       0       0
  2775 ;;      Totals:         0       0       0       0       0       0       0
  2776 ;;Total ram usage:        0 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_timingISR
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text16
  2786  001244                     __ptext16:
  2787                           	opt callstack 0
  2788  001244                     i2_Timer0_StartTimer:
  2789                           	opt callstack 0
  2790  001244  FFFF               	dw	65535	; assembler added errata NOP
  2791                           
  2792                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  2793                           
  2794                           ;incstack = 0
  2795  001246  8ED5               	bsf	4053,7,c	;volatile
  2796                           
  2797                           ;timer.c: 23:  return 0;;	Return value of i2_Timer0_StartTimer is never used
  2798  001248  0012               	return		;funcret
  2799  00124A  FFFF               	dw	65535	; errata NOP
  2800  00124C                     __end_ofi2_Timer0_StartTimer:
  2801                           	opt callstack 0
  2802                           
  2803                           	psect	rparam
  2804  0000                     
  2805                           	psect	temp
  2806  000071                     btemp:
  2807                           	opt callstack 0
  2808  000071                     	ds	1
  2809  0000                     int$flags	set	btemp
  2810  0000                     wtemp8	set	btemp+1
  2811  0000                     ttemp5	set	btemp+1
  2812  0000                     ttemp6	set	btemp+4
  2813  0000                     ttemp7	set	btemp+8
  2814                           tosu	equ	0xFFF
  2815                           tosh	equ	0xFFE
  2816                           tosl	equ	0xFFD
  2817                           stkptr	equ	0xFFC
  2818                           pclatu	equ	0xFFB
  2819                           pclath	equ	0xFFA
  2820                           pcl	equ	0xFF9
  2821                           tblptru	equ	0xFF8
  2822                           tblptrh	equ	0xFF7
  2823                           tblptrl	equ	0xFF6
  2824                           tablat	equ	0xFF5
  2825                           prodh	equ	0xFF4
  2826                           prodl	equ	0xFF3
  2827                           indf0	equ	0xFEF
  2828                           postinc0	equ	0xFEE
  2829                           postdec0	equ	0xFED
  2830                           preinc0	equ	0xFEC
  2831                           plusw0	equ	0xFEB
  2832                           fsr0h	equ	0xFEA
  2833                           fsr0l	equ	0xFE9
  2834                           wreg	equ	0xFE8
  2835                           indf1	equ	0xFE7
  2836                           postinc1	equ	0xFE6
  2837                           postdec1	equ	0xFE5
  2838                           preinc1	equ	0xFE4
  2839                           plusw1	equ	0xFE3
  2840                           fsr1h	equ	0xFE2
  2841                           fsr1l	equ	0xFE1
  2842                           bsr	equ	0xFE0
  2843                           indf2	equ	0xFDF
  2844                           postinc2	equ	0xFDE
  2845                           postdec2	equ	0xFDD
  2846                           preinc2	equ	0xFDC
  2847                           plusw2	equ	0xFDB
  2848                           fsr2h	equ	0xFDA
  2849                           fsr2l	equ	0xFD9
  2850                           status	equ	0xFD8


Data Sizes:
    Strings     74
    Constant    0
    Data        7
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     77     112
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(COMRAM[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(COMRAM[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(COMRAM[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(COMRAM[10]), 

    S1813_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(COMRAM[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(COMRAM[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    S187$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _get_temp->___flsub
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___fltol->_get_temp

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    5619
                                             71 COMRAM     6     6      0
                        _Timer0_Init
                  _Timer0_StartTimer
                            ___fltol
                           _get_temp
                     _initialize_PWM
                      _initialize_RX
                      _initialize_TX
                     _set_duty_cycle
 ---------------------------------------------------------------------------------
 (1) _set_duty_cycle                                       3     2      1     243
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_PWM                                       2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    10      4    4992
                                             47 COMRAM    14    10      4
                           _ADC_Init
                           _ADC_Read
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2585
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             61 COMRAM    10     6      4
                           _get_temp (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _timingISR                                            0     0      0       0
                i2_Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (5) i2_Timer0_StartTimer                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_Init
   _Timer0_StartTimer
   ___fltol
     _get_temp (ARG)
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
   _get_temp
     _ADC_Init
     _ADC_Read
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___xxtofl
   _initialize_PWM
   _initialize_RX
   _initialize_TX
   _set_duty_cycle

 _timingISR (ROOT)
   i2_Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      20       5       25.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     4D      70       1       88.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      90      15        0.0%
DATA                 0      0      90       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Feb 25 01:56:23 2019

                                                        _SSPSTATbits 000FC7  
                                                        __CFG_BOR$ON 000000  
                                                       __CFG_CP0$OFF 000000  
                                                       __CFG_CP1$OFF 000000  
                                                       __CFG_CP2$OFF 000000  
                                                       __CFG_CP3$OFF 000000  
                                                        __CFG_OSC$HS 000000  
                                                                l285 110E  
                                                                l286 10F6  
                                                                l859 0F3C  
                                                       __CFG_CPB$OFF 000000  
                                                                _PR2 000FCB  
                                                       __CFG_CPD$OFF 000000  
                                                                _lcd 004E  
                                                       __CFG_BORV$20 000000  
                                                                wreg 000FE8  
                                                       ___flmul@aexp 0020  
                                                       ___flmul@bexp 0021  
                                                        main@address 004C  
                                                       ___flmul@sign 001B  
                                                       ___flmul@temp 0026  
                                                       ___flmul@prod 0022  
                                                       __CFG_LVP$OFF 000000  
                                                       ___fltol@exp1 0047  
                                                       __CFG_WDT$OFF 000000  
                                                               l1107 0BF8  
                                                               l1116 0C70  
                                                               l1220 0E68  
                                                               l1117 0C6A  
                                                               l1224 0DDC  
                                                               l1217 0D52  
                                                               l1091 0B2C  
                                                               l1180 09C8  
                                                               l1092 0B04  
                                                               l2300 0AB2  
                                                               l1176 06D8  
                                                               l2400 0CB8  
                                                               l2312 0B14  
                                                               l1193 0990  
                                                               l1185 0902  
                                                               l1186 08FC  
                                                               l2314 0B1A  
                                                               l2234 09FC  
                                                               l1099 0D0C  
                                                               l2412 0CEC  
                                                               l2430 10D4  
                                                               l2414 0CF0  
                                                               l2270 0A74  
                                                               l2262 0A50  
                                                               l2238 0A02  
                                                               l2408 0CE2  
                                                               l2336 0B64  
                                                               l2600 0E04  
                                                               l2522 08A2  
                                                               l2338 0B6A  
                                                               l2346 0B7E  
                                                               l2258 0A4A  
                                                               l2602 0E12  
                                                               l2452 067A  
                                                               l2364 0C20  
                                                               l2380 0C46  
                                                               l2356 0BE6  
                                                               l2470 06C0  
                                                               l2454 0680  
                                                               l2374 0C38  
                                                               l2552 0968  
                                                               l2528 08C2  
                                                               l2480 06FA  
                                                               l2472 06C6  
                                                               l2456 0692  
                                                               l2618 0E56  
                                                               l2706 1020  
                                                               l2564 09B2  
                                                               l2548 0948  
                                                               l2590 0D8C  
                                                               l2582 0D64  
                                                               l2680 0EE0  
                                                               l2664 0E90  
                                                               l2592 0D9A  
                                                               l2690 0EFC  
                                                               l2594 0DC2  
                                                               l2692 0F0A  
                                                               l2684 0EF2  
                                                               l2588 0D84  
                                                               l2698 0F2A  
                                                               STR_1 061D  
                                                               STR_2 0648  
                                                               STR_3 0605  
                                                               STR_7 0609  
                                                               u1040 0AD6  
                                                               u1050 0AE6  
                                                               u1300 0CC6  
                                                               u1220 0C4C  
                                                               u1060 0AEA  
                                                               u1240 0C62  
                                                               u1090 0B36  
                                                               u1180 0C0C  
                                                               u1430 06E6  
                                                               u1520 0958  
                                                               u1440 0862  
                                                               u1530 0978  
                                                               u1610 0E1E  
                                                               u1700 0F12  
                                                               u1445 0856  
                                                               u1480 08F4  
                                                               u1650 0E7C  
                                                               u1660 0EB2  
                                                               u1727 1066  
                                                               u1665 0EA6  
                                                               u1737 108A  
                                                               u1747 10AE  
                                                               u1757 10E8  
                                                               _RCIF 007CF5  
                                                   ??_initialize_PWM 0003  
                                                       __CFG_STVR$ON 000000  
                                                               _dbuf 0080  
                                                               _flag 0069  
                                                 initialize_PWM@freq 0001  
                                                               _main 100C  
                                                               _prec 0061  
                                                               _nout 005D  
                                                               fsr1l 000FE1  
                                                               btemp 0071  
                                                   __end_of_ADC_Init 123C  
                                                   __end_of_ADC_Read 1114  
                                                               prodh 000FF4  
                                                               prodl 000FF3  
                                                               start 0032  
                                                       ___param_bank 000000  
                                                      __CFG_OSCS$OFF 000000  
                                                      ___fltol@sign1 0046  
                                                    __end_of___fladd 0D12  
                                                              ?_main 0001  
                                                       get_temp@temp 0038  
                                                              STR_21 0627  
                                                              STR_30 062A  
                                                              STR_25 062D  
                                                              STR_34 0630  
                                                              STR_54 063C  
                                                              STR_39 0611  
                                                              STR_49 0639  
                                                              STR_74 0636  
                                                              STR_59 060D  
                                                              STR_69 0633  
                                                              STR_94 063F  
                                                              STR_79 0615  
                                                    __end_of___flmul 09CE  
                                                              STR_99 0619  
                                                    __end_of___flsub 11A8  
                                                    __end_of___fltol 0F42  
                                                              _T0CON 000FD5  
                                                              _T2CON 000FCA  
                                                              i2l247 002A  
                                                              _RCSTA 000FAB  
                                                              _TMR0H 000FD7  
                                                              _TMR0L 000FD6  
                                                              _SPBRG 000FAF  
                                                              _PORTA 000F80  
                                                              _PORTB 000F81  
                                                              _PORTD 000F83  
                                                              _TRISA 000F92  
                                                              _TRISB 000F93  
                                                              _TRISC 000F94  
                                                              _TRISD 000F95  
                                                              _TXREG 000FAD  
                                                      __CFG_PWRT$OFF 000000  
                                                      __CFG_WRT0$OFF 000000  
                                                      __CFG_WRT1$OFF 000000  
                                                      __CFG_WRT2$OFF 000000  
                                                      __CFG_WRT3$OFF 000000  
                                                     __CFG_EBTR0$OFF 000000  
                                                     __CFG_EBTR1$OFF 000000  
                                                     __CFG_EBTR2$OFF 000000  
                                                     __CFG_EBTR3$OFF 000000  
                                                      __CFG_WRTB$OFF 000000  
                                                      __CFG_WRTC$OFF 000000  
                                                      __CFG_WRTD$OFF 000000  
                                                     __CFG_EBTRB$OFF 000000  
                                                              _flags 0063  
                                                              _errno 005B  
                                                              _width 005F  
                                                              tablat 000FF5  
                                                              ttemp5 0072  
                                                              ttemp6 0075  
                                                              ttemp7 0079  
                                                              status 000FD8  
                                                              wtemp8 0072  
                                                    __initialization 1114  
                                                       __end_of_main 10C0  
                                                             ??_main 0048  
                                                      __activetblptr 000001  
                                                    __CFG_CCP2MUX$ON 000000  
                                                             _ADCON0 000FC2  
                                                             _ADCON1 000FC1  
                                                             STR_103 0601  
                                                             STR_121 0621  
                                                             STR_130 0624  
                                                             _ADRESH 000FC4  
                                                             STR_117 0642  
                                                             STR_126 0645  
                                                             _ADRESL 000FC3  
                                                             _CCPR1L 000FBE  
                                                             _RCREG1 000FAE  
                                                             _TMR0IE 007F95  
                                                             _TMR0IF 007F92  
                                                             _TMR2IE 007CE9  
                                                     __CFG_WDTPS$128 000000  
                                                             _TMR2IP 007CF9  
                                                             _SSPBUF 000FC9  
                                                   __end_of___xxtofl 0E6E  
                                                      ??_Timer0_Init 0001  
                                                i2_Timer0_StartTimer 1244  
                                                   __end_of_get_temp 100C  
                                                          ??___fladd 0009  
                                                          ??___flmul 0017  
                                                          ??___flsub 0030  
                                                          ??___fltol 0042  
                                                    ADC_Read@channel 0005  
                                                             clear_0 113A  
                                                             clear_1 1146  
                                                       __pdataCOMRAM 006A  
                                                          ?_ADC_Init 0001  
                                                          ?_ADC_Read 0001  
                                                       __mediumconst 0000  
                                               ?i2_Timer0_StartTimer 0001  
                                                             tblptrh 000FF7  
                                                             tblptrl 000FF6  
                                                             tblptru 000FF8  
                                             __size_of_initialize_RX 0014  
                                             __size_of_initialize_TX 0014  
                                                       ___xxtofl@arg 000B  
                                                       ___xxtofl@exp 000A  
                                                       ___xxtofl@val 0001  
                                                         __accesstop 0080  
                                            __end_of__initialization 114C  
                                                      ___rparam_used 000001  
                                                         ___fltol@f1 003E  
                                                     __pcstackCOMRAM 0001  
                                                __end_of_Timer0_Init 11CC  
                                                         ??_ADC_Init 0001  
                                                         ??_ADC_Read 0003  
                                              ??i2_Timer0_StartTimer 0001  
                                            __size_of_set_duty_cycle 0022  
                                                         __pbssBANK0 0080  
                                                      _initialize_RX 121A  
                                                      _initialize_TX 1206  
                                                            _CCP1CON 000FBD  
                                                 __size_of_timingISR 002A  
                                                          ?___xxtofl 0001  
                                                            _SSPCON1 000FC6  
                                                          ?_get_temp 0030  
                                                            __Hparam 0000  
                                                        _Timer0_Init 11A8  
                                                     ?_initialize_RX 0001  
                                                     ?_initialize_TX 0001  
                                                            __Lparam 0000  
                                                            ___fladd 09CE  
                                                            ___flmul 064C  
                                                            ___flsub 115E  
                                                            ___fltol 0E6E  
                                                       __psmallconst 0600  
                                                            __pcinit 1114  
                                                            __ramtop 0600  
                                                            __ptext0 100C  
                                                            __ptext1 11CC  
                                                            __ptext2 1206  
                                                            __ptext3 121A  
                                                            __ptext4 11EE  
                                                            __ptext5 0F42  
                                                            __ptext6 0D12  
                                                            __ptext7 115E  
                                                            __ptext8 09CE  
                                                            __ptext9 064C  
                                                          _T0CONbits 000FD5  
                                                         ??___xxtofl 0005  
                                                            _time_ms 0057  
                                                         ??_get_temp 0034  
                                               end_of_initialization 114C  
                                                  __end_of_timingISR 0032  
                                                          _RCSTAbits 000FAB  
                                                            postdec1 000FE5  
                                            __size_of_initialize_PWM 0018  
                                                            postinc0 000FEE  
                                                          _PORTCbits 000F82  
                                                        ___fladd@grs 0010  
                                                      ___xxtofl@sign 0009  
                                                     _set_duty_cycle 11CC  
                                                          _TRISCbits 000F94  
                                                  _Timer0_StartTimer 123C  
                                                  __size_of_ADC_Init 000E  
                                                  __size_of_ADC_Read 0054  
                                                 ?_Timer0_StartTimer 0001  
                                                        ___flmul@grs 001C  
                                                          _TXSTAbits 000FAC  
                                                    ??_initialize_RX 0001  
                                                    ??_initialize_TX 0001  
                                                ??_Timer0_StartTimer 0001  
                                                      __pidataCOMRAM 124C  
                                             __end_of_set_duty_cycle 11EE  
                                          __end_of_Timer0_StartTimer 1244  
                                                start_initialization 1114  
                                                 set_duty_cycle@mask 0003  
                                        __end_ofi2_Timer0_StartTimer 124C  
                                                          ___fladd@a 0005  
                                                          ___fladd@b 0001  
                                                    ?_set_duty_cycle 0001  
                                              set_duty_cycle@lower_2 0001  
                                                          ___flmul@a 0013  
                                                          ___flmul@b 000F  
                                                        __pbssCOMRAM 004E  
                                                          ___flsub@a 002C  
                                                          ___flsub@b 0028  
                                              set_duty_cycle@upper_8 0002  
                                                  __size_of___xxtofl 015C  
                                                  __size_of_get_temp 00CA  
                                                       ?_Timer0_Init 0001  
                                                     _initialize_PWM 11EE  
                                                          __pintcode 0008  
                                                           ?___fladd 0001  
                                                           ?___flmul 000F  
                                                           ?___flsub 0028  
                                                           ?___fltol 003E  
                                                get_temp@adc_voltage 003C  
                                                        __smallconst 0600  
                                         __size_of_Timer0_StartTimer 0008  
                                                           _ADC_Init 122E  
                                                           _ADC_Read 10C0  
                                             __end_of_initialize_PWM 1206  
                                                           _GO_nDONE 007E12  
                                                           _RCONbits 000FD0  
                                                          _time_ms_2 0053  
                                                          _timingISR 0008  
                                                        _INTCON2bits 000FF1  
                                                          copy_data0 1128  
                                                    ?_initialize_PWM 0001  
                                                           __Hrparam 0000  
                                                           __Lrparam 0000  
                                                       __Lsmallconst 0600  
                                                         ?_timingISR 0001  
                                                   __size_of___fladd 0344  
                                                   __size_of___flmul 0382  
                                                   __size_of___flsub 004A  
                                                   __size_of___fltol 00D4  
                                                           ___xxtofl 0D12  
                                                           __ptext10 10C0  
                                                           __ptext11 122E  
                                                           __ptext12 0E6E  
                                                           __ptext13 123C  
                                                           __ptext14 11A8  
                                                           __ptext16 1244  
                                                           _get_temp 0F42  
                                                    _interval_events 0065  
                                                      __size_of_main 00B4  
                                              __end_of_initialize_RX 122E  
                                              __end_of_initialize_TX 121A  
                                                          stoa@F1152 006A  
                                               __size_of_Timer0_Init 0024  
                                                           int$flags 0071  
                                                   ??_set_duty_cycle 0002  
                                                           _ungetbuf 0068  
                                                           _ungetcnt 0067  
                                                         _INTCONbits 000FF2  
                                                           intlevel2 1254  
                                                        ??_timingISR 0001  
                                               get_temp@real_voltage 0034  
                                       __size_ofi2_Timer0_StartTimer 0008  
                                                      ___fladd@signs 000D  
                                                       ___fladd@aexp 000E  
                                                       ___fladd@bexp 000F  
