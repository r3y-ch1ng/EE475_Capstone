

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Feb 24 05:39:08 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68  0000                     
    69                           ; Version 2.05
    70                           ; Generated 20/12/2018 GMT
    71                           ; 
    72                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F452 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     
   104                           	psect	idataBANK0
   105  0039B8                     __pidataBANK0:
   106                           	opt callstack 0
   107                           
   108                           ;initializer for stoa@F1152
   109  0039B8  28                 	db	40
   110  0039B9  6E                 	db	110
   111  0039BA  75                 	db	117
   112  0039BB  6C                 	db	108
   113  0039BC  6C                 	db	108
   114  0039BD  29                 	db	41
   115  0039BE  00                 	db	0
   116  0000                     _T2CON	set	4042
   117  0000                     _CCP1CON	set	4029
   118  0000                     _CCPR1L	set	4030
   119  0000                     _PR2	set	4043
   120  0000                     _ADRESL	set	4035
   121  0000                     _ADRESH	set	4036
   122  0000                     _ADCON0	set	4034
   123  0000                     _SSPBUF	set	4041
   124  0000                     _SSPCON1	set	4038
   125  0000                     _SSPSTATbits	set	4039
   126  0000                     _T0CON	set	4053
   127  0000                     _TMR0L	set	4054
   128  0000                     _TMR0H	set	4055
   129  0000                     _T0CONbits	set	4053
   130  0000                     _ADCON1	set	4033
   131  0000                     _RCREG1	set	4014
   132  0000                     _TXREG	set	4013
   133  0000                     _RCSTAbits	set	4011
   134  0000                     _RCSTA	set	4011
   135  0000                     _SPBRG	set	4015
   136  0000                     _TXSTAbits	set	4012
   137  0000                     _RCONbits	set	4048
   138  0000                     _INTCON2bits	set	4081
   139  0000                     _INTCONbits	set	4082
   140  0000                     _TRISC	set	3988
   141  0000                     _TRISA	set	3986
   142  0000                     _PORTA	set	3968
   143  0000                     _PORTD	set	3971
   144  0000                     _PORTB	set	3969
   145  0000                     _PORTCbits	set	3970
   146  0000                     _TRISCbits	set	3988
   147  0000                     _TRISB	set	3987
   148  0000                     _TRISD	set	3989
   149  0000                     _GO_nDONE	set	32274
   150  0000                     _TMR0IE	set	32661
   151  0000                     _TMR0IF	set	32658
   152  0000                     _RCIF	set	31989
   153                           
   154                           	psect	smallconst
   155  000600                     __psmallconst:
   156                           	opt callstack 0
   157  000600  00                 	db	0
   158  000601                     STR_103:
   159  000601  68                 	db	104	;'h'
   160  000602  68                 	db	104	;'h'
   161  000603  58                 	db	88	;'X'
   162  000604  00                 	db	0
   163  000605                     STR_3:
   164  000605  68                 	db	104	;'h'
   165  000606  68                 	db	104	;'h'
   166  000607  64                 	db	100	;'d'
   167  000608  00                 	db	0
   168  000609                     STR_7:
   169  000609  68                 	db	104	;'h'
   170  00060A  68                 	db	104	;'h'
   171  00060B  69                 	db	105	;'i'
   172  00060C  00                 	db	0
   173  00060D                     STR_59:
   174  00060D  68                 	db	104	;'h'
   175  00060E  68                 	db	104	;'h'
   176  00060F  6E                 	db	110	;'n'
   177  000610  00                 	db	0
   178  000611                     STR_39:
   179  000611  68                 	db	104	;'h'
   180  000612  68                 	db	104	;'h'
   181  000613  6F                 	db	111	;'o'
   182  000614  00                 	db	0
   183  000615                     STR_79:
   184  000615  68                 	db	104	;'h'
   185  000616  68                 	db	104	;'h'
   186  000617  75                 	db	117	;'u'
   187  000618  00                 	db	0
   188  000619                     STR_99:
   189  000619  68                 	db	104	;'h'
   190  00061A  68                 	db	104	;'h'
   191  00061B  78                 	db	120	;'x'
   192  00061C  00                 	db	0
   193  00061D                     STR_1:
   194  00061D  25                 	db	37
   195  00061E  6C                 	db	108	;'l'
   196  00061F  75                 	db	117	;'u'
   197  000620  00                 	db	0
   198  000621                     STR_121:
   199  000621  6C                 	db	108	;'l'
   200  000622  58                 	db	88	;'X'
   201  000623  00                 	db	0
   202  000624                     STR_130:
   203  000624  7A                 	db	122	;'z'
   204  000625  58                 	db	88	;'X'
   205  000626  00                 	db	0
   206  000627                     STR_21:
   207  000627  6C                 	db	108	;'l'
   208  000628  64                 	db	100	;'d'
   209  000629  00                 	db	0
   210  00062A                     STR_30:
   211  00062A  7A                 	db	122	;'z'
   212  00062B  64                 	db	100	;'d'
   213  00062C  00                 	db	0
   214  00062D                     STR_25:
   215  00062D  6C                 	db	108	;'l'
   216  00062E  69                 	db	105	;'i'
   217  00062F  00                 	db	0
   218  000630                     STR_34:
   219  000630  7A                 	db	122	;'z'
   220  000631  69                 	db	105	;'i'
   221  000632  00                 	db	0
   222  000633                     STR_69:
   223  000633  6C                 	db	108	;'l'
   224  000634  6E                 	db	110	;'n'
   225  000635  00                 	db	0
   226  000636                     STR_74:
   227  000636  7A                 	db	122	;'z'
   228  000637  6E                 	db	110	;'n'
   229  000638  00                 	db	0
   230  000639                     STR_49:
   231  000639  6C                 	db	108	;'l'
   232  00063A  6F                 	db	111	;'o'
   233  00063B  00                 	db	0
   234  00063C                     STR_54:
   235  00063C  7A                 	db	122	;'z'
   236  00063D  6F                 	db	111	;'o'
   237  00063E  00                 	db	0
   238  00063F                     STR_94:
   239  00063F  7A                 	db	122	;'z'
   240  000640  75                 	db	117	;'u'
   241  000641  00                 	db	0
   242  000642                     STR_117:
   243  000642  6C                 	db	108	;'l'
   244  000643  78                 	db	120	;'x'
   245  000644  00                 	db	0
   246  000645                     STR_126:
   247  000645  7A                 	db	122	;'z'
   248  000646  78                 	db	120	;'x'
   249  000647  00                 	db	0
   250  000648  25                 	db	37
   251  000649  64                 	db	100	;'d'
   252  00064A  00                 	db	0
   253  0000                     
   254                           ; #config settings
   255  00064B  00                 	db	0	; dummy byte at the end
   256  0000                     
   257                           	psect	cinit
   258  003716                     __pcinit:
   259                           	opt callstack 0
   260  003716                     start_initialization:
   261                           	opt callstack 0
   262  003716                     __initialization:
   263                           	opt callstack 0
   264                           
   265                           ; Initialize objects allocated to BANK0 (7 bytes)
   266                           ; load TBLPTR registers with __pidataBANK0
   267  003716  0EB8               	movlw	low __pidataBANK0
   268  003718  6EF6               	movwf	tblptrl,c
   269  00371A  0E39               	movlw	high __pidataBANK0
   270  00371C  6EF7               	movwf	tblptrh,c
   271  00371E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   272  003720  6EF8               	movwf	tblptru,c
   273  003722  EE00  F0E5         	lfsr	0,__pdataBANK0
   274  003726  EE10 F007          	lfsr	1,7
   275  00372A                     copy_data0:
   276  00372A  0009               	tblrd		*+
   277  00372C  CFF5 FFEE          	movff	tablat,postinc0
   278  003730  50E5               	movf	postdec1,w,c
   279  003732  50E1               	movf	fsr1l,w,c
   280  003734  E1FA               	bnz	copy_data0
   281                           
   282                           ; Clear objects allocated to BANK0 (59 bytes)
   283  003736  EE00  F080         	lfsr	0,__pbssBANK0
   284  00373A  0E3B               	movlw	59
   285  00373C                     clear_0:
   286  00373C  6AEE               	clrf	postinc0,c
   287  00373E  06E8               	decf	wreg,f,c
   288  003740  E1FD               	bnz	clear_0
   289                           
   290                           ; Clear objects allocated to COMRAM (1 bytes)
   291  003742  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   292  003744                     end_of_initialization:
   293                           	opt callstack 0
   294  003744                     __end_of__initialization:
   295                           	opt callstack 0
   296  003744  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   297  003746  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   298  003748  0E00               	movlw	low (__Lmediumconst shr (0+16))
   299  00374A  6EF8               	movwf	tblptru,c
   300  00374C  0100               	movlb	0
   301  00374E  EFF2  F017         	goto	_main	;jump to C main() function
   302                           
   303                           	psect	bssCOMRAM
   304  00007E                     __pbssCOMRAM:
   305                           	opt callstack 0
   306  00007E                     _ungetcnt:
   307                           	opt callstack 0
   308  00007E                     	ds	1
   309                           
   310                           	psect	bssBANK0
   311  000080                     __pbssBANK0:
   312                           	opt callstack 0
   313  000080                     _lcd:
   314                           	opt callstack 0
   315  000080                     	ds	5
   316  000085                     _time_ms_2:
   317                           	opt callstack 0
   318  000085                     	ds	4
   319  000089                     _time_ms:
   320                           	opt callstack 0
   321  000089                     	ds	4
   322  00008D                     _errno:
   323                           	opt callstack 0
   324  00008D                     	ds	2
   325  00008F                     _nout:
   326                           	opt callstack 0
   327  00008F                     	ds	2
   328  000091                     _width:
   329                           	opt callstack 0
   330  000091                     	ds	2
   331  000093                     _prec:
   332                           	opt callstack 0
   333  000093                     	ds	2
   334  000095                     _flags:
   335                           	opt callstack 0
   336  000095                     	ds	2
   337  000097                     _interval_events:
   338                           	opt callstack 0
   339  000097                     	ds	2
   340  000099                     	ds	1
   341  00009A                     _flag:
   342                           	opt callstack 0
   343  00009A                     	ds	1
   344  00009B                     _dbuf:
   345                           	opt callstack 0
   346  00009B                     	ds	32
   347                           
   348                           	psect	dataBANK0
   349  0000E5                     __pdataBANK0:
   350                           	opt callstack 0
   351  0000E5                     stoa@F1152:
   352                           	opt callstack 0
   353  0000E5                     	ds	7
   354                           
   355                           	psect	cstackBANK0
   356  0000BB                     __pcstackBANK0:
   357                           	opt callstack 0
   358  0000BB                     ?_sprintf:
   359                           	opt callstack 0
   360  0000BB                     sprintf@s:
   361                           	opt callstack 0
   362                           
   363                           ; 2 bytes @ 0x0
   364  0000BB                     	ds	2
   365  0000BD                     sprintf@fmt:
   366                           	opt callstack 0
   367                           
   368                           ; 2 bytes @ 0x2
   369  0000BD                     	ds	8
   370  0000C5                     sprintf@f:
   371                           	opt callstack 0
   372                           
   373                           ; 6 bytes @ 0xA
   374  0000C5                     	ds	6
   375  0000CB                     sprintf@ap:
   376                           	opt callstack 0
   377                           
   378                           ; 2 bytes @ 0x10
   379  0000CB                     	ds	2
   380  0000CD                     int_to_char@result:
   381                           	opt callstack 0
   382                           
   383                           ; 10 bytes @ 0x12
   384  0000CD                     	ds	10
   385  0000D7                     int_to_char@the_num:
   386                           	opt callstack 0
   387                           
   388                           ; 4 bytes @ 0x1C
   389  0000D7                     	ds	4
   390  0000DB                     UARTSendString@c:
   391                           	opt callstack 0
   392                           
   393                           ; 2 bytes @ 0x20
   394  0000DB                     	ds	2
   395  0000DD                     UARTSendString@i:
   396                           	opt callstack 0
   397                           
   398                           ; 2 bytes @ 0x22
   399  0000DD                     	ds	2
   400  0000DF                     ??_main:
   401                           
   402                           ; 1 bytes @ 0x24
   403  0000DF                     	ds	2
   404  0000E1                     main@address:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0x26
   408  0000E1                     	ds	2
   409  0000E3                     main@temp:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x28
   413  0000E3                     	ds	2
   414                           
   415                           	psect	cstackCOMRAM
   416  000001                     __pcstackCOMRAM:
   417                           	opt callstack 0
   418  000001                     ?_ADC_Read:
   419                           	opt callstack 0
   420  000001                     ?_strlen:
   421                           	opt callstack 0
   422  000001                     ?_isupper:
   423                           	opt callstack 0
   424  000001                     ?_isalpha:
   425                           	opt callstack 0
   426  000001                     ?_isdigit:
   427                           	opt callstack 0
   428  000001                     ?_strncmp:
   429                           	opt callstack 0
   430  000001                     ?_isspace:
   431                           	opt callstack 0
   432  000001                     ?_getch:
   433                           	opt callstack 0
   434  000001                     ?_islower:
   435                           	opt callstack 0
   436  000001                     ?___wmul:
   437                           	opt callstack 0
   438  000001                     ?___fladd:
   439                           	opt callstack 0
   440  000001                     ?___xxtofl:
   441                           	opt callstack 0
   442  000001                     ?___aodiv:
   443                           	opt callstack 0
   444  000001                     ?___aomod:
   445                           	opt callstack 0
   446  000001                     ?___lodiv:
   447                           	opt callstack 0
   448  000001                     ?___lomod:
   449                           	opt callstack 0
   450  000001                     UARTSendChar@c:
   451                           	opt callstack 0
   452  000001                     set_duty_cycle@lower_2:
   453                           	opt callstack 0
   454  000001                     ___wmul@multiplier:
   455                           	opt callstack 0
   456  000001                     isalpha@c:
   457                           	opt callstack 0
   458  000001                     isdigit@c:
   459                           	opt callstack 0
   460  000001                     isspace@c:
   461                           	opt callstack 0
   462  000001                     isupper@c:
   463                           	opt callstack 0
   464  000001                     fputc@c:
   465                           	opt callstack 0
   466  000001                     strlen@s:
   467                           	opt callstack 0
   468  000001                     strncmp@_l:
   469                           	opt callstack 0
   470  000001                     islower@c:
   471                           	opt callstack 0
   472  000001                     ___fladd@b:
   473                           	opt callstack 0
   474  000001                     ___xxtofl@val:
   475                           	opt callstack 0
   476  000001                     ___aodiv@dividend:
   477                           	opt callstack 0
   478  000001                     ___aomod@dividend:
   479                           	opt callstack 0
   480  000001                     ___lodiv@dividend:
   481                           	opt callstack 0
   482  000001                     ___lomod@dividend:
   483                           	opt callstack 0
   484                           
   485                           ; 8 bytes @ 0x0
   486  000001                     	ds	1
   487  000002                     set_duty_cycle@upper_8:
   488                           	opt callstack 0
   489                           
   490                           ; 1 bytes @ 0x1
   491  000002                     	ds	1
   492  000003                     ??_ADC_Read:
   493  000003                     ??_isupper:
   494  000003                     ??_isalpha:
   495  000003                     ??_isdigit:
   496  000003                     ??_isspace:
   497  000003                     ??_islower:
   498  000003                     ?_fgetc:
   499                           	opt callstack 0
   500  000003                     set_duty_cycle@mask:
   501                           	opt callstack 0
   502  000003                     ___wmul@multiplicand:
   503                           	opt callstack 0
   504  000003                     fputc@fp:
   505                           	opt callstack 0
   506  000003                     fgetc@fp:
   507                           	opt callstack 0
   508  000003                     strlen@a:
   509                           	opt callstack 0
   510  000003                     strncmp@_r:
   511                           	opt callstack 0
   512                           
   513                           ; 2 bytes @ 0x2
   514  000003                     	ds	2
   515  000005                     ??_fputc:
   516  000005                     ??_fgetc:
   517  000005                     ??___xxtofl:
   518  000005                     ADC_Read@channel:
   519                           	opt callstack 0
   520  000005                     ___wmul@product:
   521                           	opt callstack 0
   522  000005                     strncmp@n:
   523                           	opt callstack 0
   524  000005                     ___fladd@a:
   525                           	opt callstack 0
   526                           
   527                           ; 4 bytes @ 0x4
   528  000005                     	ds	2
   529  000007                     ??_strncmp:
   530  000007                     ?_toupper:
   531                           	opt callstack 0
   532  000007                     _isspace$1827:
   533                           	opt callstack 0
   534  000007                     toupper@c:
   535                           	opt callstack 0
   536                           
   537                           ; 2 bytes @ 0x6
   538  000007                     	ds	1
   539  000008                     ?_atoi:
   540                           	opt callstack 0
   541  000008                     atoi@s:
   542                           	opt callstack 0
   543  000008                     strncmp@l:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0x7
   547  000008                     	ds	1
   548  000009                     ??_toupper:
   549  000009                     ??___fladd:
   550  000009                     ___xxtofl@sign:
   551                           	opt callstack 0
   552  000009                     ___aodiv@divisor:
   553                           	opt callstack 0
   554  000009                     ___aomod@divisor:
   555                           	opt callstack 0
   556  000009                     ___lodiv@divisor:
   557                           	opt callstack 0
   558  000009                     ___lomod@divisor:
   559                           	opt callstack 0
   560                           
   561                           ; 8 bytes @ 0x8
   562  000009                     	ds	1
   563  00000A                     ??_atoi:
   564  00000A                     ?_stoa:
   565                           	opt callstack 0
   566  00000A                     ___xxtofl@exp:
   567                           	opt callstack 0
   568  00000A                     stoa@fp:
   569                           	opt callstack 0
   570  00000A                     fputs@s:
   571                           	opt callstack 0
   572  00000A                     fgetc@c:
   573                           	opt callstack 0
   574  00000A                     strncmp@r:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x9
   578  00000A                     	ds	1
   579  00000B                     ___xxtofl@arg:
   580                           	opt callstack 0
   581                           
   582                           ; 4 bytes @ 0xA
   583  00000B                     	ds	1
   584  00000C                     stoa@s:
   585                           	opt callstack 0
   586  00000C                     fputs@fp:
   587                           	opt callstack 0
   588                           
   589                           ; 2 bytes @ 0xB
   590  00000C                     	ds	1
   591  00000D                     ___fladd@signs:
   592                           	opt callstack 0
   593  00000D                     _toupper$1947:
   594                           	opt callstack 0
   595                           
   596                           ; 2 bytes @ 0xC
   597  00000D                     	ds	1
   598  00000E                     ??_stoa:
   599  00000E                     ___fladd@aexp:
   600                           	opt callstack 0
   601  00000E                     fputs@c:
   602                           	opt callstack 0
   603  00000E                     atoi@neg:
   604                           	opt callstack 0
   605                           
   606                           ; 2 bytes @ 0xD
   607  00000E                     	ds	1
   608  00000F                     ?___flmul:
   609                           	opt callstack 0
   610  00000F                     ___fladd@bexp:
   611                           	opt callstack 0
   612  00000F                     fputs@i:
   613                           	opt callstack 0
   614  00000F                     ___flmul@b:
   615                           	opt callstack 0
   616  00000F                     stoa@nuls:
   617                           	opt callstack 0
   618                           
   619                           ; 7 bytes @ 0xE
   620  00000F                     	ds	1
   621  000010                     ___fladd@grs:
   622                           	opt callstack 0
   623  000010                     _atoi$1790:
   624                           	opt callstack 0
   625                           
   626                           ; 2 bytes @ 0xF
   627  000010                     	ds	1
   628  000011                     ?_pad:
   629                           	opt callstack 0
   630  000011                     ___aodiv@counter:
   631                           	opt callstack 0
   632  000011                     ___aomod@counter:
   633                           	opt callstack 0
   634  000011                     ___lomod@counter:
   635                           	opt callstack 0
   636  000011                     pad@fp:
   637                           	opt callstack 0
   638  000011                     ___lodiv@quotient:
   639                           	opt callstack 0
   640                           
   641                           ; 8 bytes @ 0x10
   642  000011                     	ds	1
   643  000012                     ___aodiv@sign:
   644                           	opt callstack 0
   645  000012                     ___aomod@sign:
   646                           	opt callstack 0
   647  000012                     _atoi$1792:
   648                           	opt callstack 0
   649                           
   650                           ; 2 bytes @ 0x11
   651  000012                     	ds	1
   652  000013                     ?_abs:
   653                           	opt callstack 0
   654  000013                     pad@buf:
   655                           	opt callstack 0
   656  000013                     abs@a:
   657                           	opt callstack 0
   658  000013                     ___flmul@a:
   659                           	opt callstack 0
   660  000013                     ___aodiv@quotient:
   661                           	opt callstack 0
   662                           
   663                           ; 8 bytes @ 0x12
   664  000013                     	ds	1
   665  000014                     _atoi$1791:
   666                           	opt callstack 0
   667                           
   668                           ; 1 bytes @ 0x13
   669  000014                     	ds	1
   670  000015                     ??_abs:
   671  000015                     pad@p:
   672                           	opt callstack 0
   673  000015                     atoi@n:
   674                           	opt callstack 0
   675                           
   676                           ; 2 bytes @ 0x14
   677  000015                     	ds	1
   678  000016                     stoa@i:
   679                           	opt callstack 0
   680                           
   681                           ; 2 bytes @ 0x15
   682  000016                     	ds	1
   683  000017                     ??___flmul:
   684  000017                     ??_pad:
   685                           
   686                           ; 1 bytes @ 0x16
   687  000017                     	ds	1
   688  000018                     pad@i:
   689                           	opt callstack 0
   690  000018                     stoa@w:
   691                           	opt callstack 0
   692                           
   693                           ; 2 bytes @ 0x17
   694  000018                     	ds	1
   695  000019                     ___lodiv@counter:
   696                           	opt callstack 0
   697                           
   698                           ; 1 bytes @ 0x18
   699  000019                     	ds	1
   700  00001A                     pad@w:
   701                           	opt callstack 0
   702  00001A                     stoa@cp:
   703                           	opt callstack 0
   704                           
   705                           ; 2 bytes @ 0x19
   706  00001A                     	ds	1
   707  00001B                     ___flmul@sign:
   708                           	opt callstack 0
   709                           
   710                           ; 1 bytes @ 0x1A
   711  00001B                     	ds	1
   712  00001C                     ?_ctoa:
   713                           	opt callstack 0
   714  00001C                     ?_dtoa:
   715                           	opt callstack 0
   716  00001C                     ?_otoa:
   717                           	opt callstack 0
   718  00001C                     ?_utoa:
   719                           	opt callstack 0
   720  00001C                     ?_xtoa:
   721                           	opt callstack 0
   722  00001C                     ctoa@fp:
   723                           	opt callstack 0
   724  00001C                     dtoa@fp:
   725                           	opt callstack 0
   726  00001C                     otoa@fp:
   727                           	opt callstack 0
   728  00001C                     stoa@p:
   729                           	opt callstack 0
   730  00001C                     utoa@fp:
   731                           	opt callstack 0
   732  00001C                     xtoa@fp:
   733                           	opt callstack 0
   734  00001C                     ___flmul@grs:
   735                           	opt callstack 0
   736                           
   737                           ; 4 bytes @ 0x1B
   738  00001C                     	ds	2
   739  00001E                     ctoa@c:
   740                           	opt callstack 0
   741  00001E                     stoa@l:
   742                           	opt callstack 0
   743  00001E                     dtoa@d:
   744                           	opt callstack 0
   745  00001E                     otoa@d:
   746                           	opt callstack 0
   747  00001E                     utoa@d:
   748                           	opt callstack 0
   749  00001E                     xtoa@d:
   750                           	opt callstack 0
   751                           
   752                           ; 8 bytes @ 0x1D
   753  00001E                     	ds	1
   754  00001F                     ctoa@w:
   755                           	opt callstack 0
   756                           
   757                           ; 2 bytes @ 0x1E
   758  00001F                     	ds	1
   759  000020                     ___flmul@aexp:
   760                           	opt callstack 0
   761                           
   762                           ; 1 bytes @ 0x1F
   763  000020                     	ds	1
   764  000021                     ___flmul@bexp:
   765                           	opt callstack 0
   766                           
   767                           ; 1 bytes @ 0x20
   768  000021                     	ds	1
   769  000022                     ___flmul@prod:
   770                           	opt callstack 0
   771                           
   772                           ; 4 bytes @ 0x21
   773  000022                     	ds	4
   774  000026                     ??_dtoa:
   775  000026                     ??_otoa:
   776  000026                     ??_utoa:
   777  000026                     xtoa@x:
   778                           	opt callstack 0
   779  000026                     ___flmul@temp:
   780                           	opt callstack 0
   781                           
   782                           ; 2 bytes @ 0x25
   783  000026                     	ds	1
   784  000027                     ??_xtoa:
   785                           
   786                           ; 1 bytes @ 0x26
   787  000027                     	ds	1
   788  000028                     ?___flsub:
   789                           	opt callstack 0
   790  000028                     ___flsub@b:
   791                           	opt callstack 0
   792                           
   793                           ; 4 bytes @ 0x27
   794  000028                     	ds	4
   795  00002C                     ___flsub@a:
   796                           	opt callstack 0
   797                           
   798                           ; 4 bytes @ 0x2B
   799  00002C                     	ds	2
   800  00002E                     _dtoa$1144:
   801                           	opt callstack 0
   802  00002E                     otoa@p:
   803                           	opt callstack 0
   804  00002E                     utoa@p:
   805                           	opt callstack 0
   806                           
   807                           ; 2 bytes @ 0x2D
   808  00002E                     	ds	1
   809  00002F                     _xtoa$1180:
   810                           	opt callstack 0
   811                           
   812                           ; 2 bytes @ 0x2E
   813  00002F                     	ds	1
   814  000030                     ?_get_temp:
   815                           	opt callstack 0
   816  000030                     dtoa@p:
   817                           	opt callstack 0
   818  000030                     otoa@t:
   819                           	opt callstack 0
   820  000030                     utoa@w:
   821                           	opt callstack 0
   822                           
   823                           ; 2 bytes @ 0x2F
   824  000030                     	ds	1
   825  000031                     _xtoa$1181:
   826                           	opt callstack 0
   827                           
   828                           ; 2 bytes @ 0x30
   829  000031                     	ds	1
   830  000032                     dtoa@w:
   831                           	opt callstack 0
   832  000032                     otoa@w:
   833                           	opt callstack 0
   834  000032                     utoa@n:
   835                           	opt callstack 0
   836                           
   837                           ; 8 bytes @ 0x31
   838  000032                     	ds	1
   839  000033                     xtoa@p:
   840                           	opt callstack 0
   841                           
   842                           ; 2 bytes @ 0x32
   843  000033                     	ds	1
   844  000034                     dtoa@s:
   845                           	opt callstack 0
   846  000034                     get_temp@real_voltage:
   847                           	opt callstack 0
   848  000034                     otoa@n:
   849                           	opt callstack 0
   850                           
   851                           ; 8 bytes @ 0x33
   852  000034                     	ds	1
   853  000035                     xtoa@w:
   854                           	opt callstack 0
   855                           
   856                           ; 2 bytes @ 0x34
   857  000035                     	ds	1
   858  000036                     dtoa@n:
   859                           	opt callstack 0
   860                           
   861                           ; 8 bytes @ 0x35
   862  000036                     	ds	1
   863  000037                     xtoa@n:
   864                           	opt callstack 0
   865                           
   866                           ; 8 bytes @ 0x36
   867  000037                     	ds	1
   868  000038                     get_temp@temp:
   869                           	opt callstack 0
   870                           
   871                           ; 4 bytes @ 0x37
   872  000038                     	ds	2
   873  00003A                     utoa@i:
   874                           	opt callstack 0
   875                           
   876                           ; 2 bytes @ 0x39
   877  00003A                     	ds	2
   878  00003C                     get_temp@adc_voltage:
   879                           	opt callstack 0
   880  00003C                     otoa@i:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x3B
   884  00003C                     	ds	2
   885  00003E                     ?___fltol:
   886                           	opt callstack 0
   887  00003E                     dtoa@i:
   888                           	opt callstack 0
   889  00003E                     ___fltol@f1:
   890                           	opt callstack 0
   891                           
   892                           ; 4 bytes @ 0x3D
   893  00003E                     	ds	1
   894  00003F                     xtoa@i:
   895                           	opt callstack 0
   896                           
   897                           ; 2 bytes @ 0x3E
   898  00003F                     	ds	2
   899  000041                     xtoa@c:
   900                           	opt callstack 0
   901                           
   902                           ; 2 bytes @ 0x40
   903  000041                     	ds	1
   904  000042                     ??___fltol:
   905                           
   906                           ; 1 bytes @ 0x41
   907  000042                     	ds	1
   908  000043                     ?_vfpfcnvrt:
   909                           	opt callstack 0
   910  000043                     vfpfcnvrt@fp:
   911                           	opt callstack 0
   912                           
   913                           ; 2 bytes @ 0x42
   914  000043                     	ds	2
   915  000045                     vfpfcnvrt@fmt:
   916                           	opt callstack 0
   917                           
   918                           ; 2 bytes @ 0x44
   919  000045                     	ds	1
   920  000046                     ___fltol@sign1:
   921                           	opt callstack 0
   922                           
   923                           ; 1 bytes @ 0x45
   924  000046                     	ds	1
   925  000047                     ___fltol@exp1:
   926                           	opt callstack 0
   927  000047                     vfpfcnvrt@ap:
   928                           	opt callstack 0
   929                           
   930                           ; 2 bytes @ 0x46
   931  000047                     	ds	2
   932  000049                     ??_vfpfcnvrt:
   933                           
   934                           ; 1 bytes @ 0x48
   935  000049                     	ds	14
   936  000057                     vfpfcnvrt@cp:
   937                           	opt callstack 0
   938                           
   939                           ; 2 bytes @ 0x56
   940  000057                     	ds	2
   941  000059                     vfpfcnvrt@done:
   942                           	opt callstack 0
   943                           
   944                           ; 2 bytes @ 0x58
   945  000059                     	ds	2
   946  00005B                     _vfpfcnvrt$1195:
   947                           	opt callstack 0
   948                           
   949                           ; 2 bytes @ 0x5A
   950  00005B                     	ds	2
   951  00005D                     _vfpfcnvrt$1196:
   952                           	opt callstack 0
   953                           
   954                           ; 2 bytes @ 0x5C
   955  00005D                     	ds	2
   956  00005F                     vfpfcnvrt@ll:
   957                           	opt callstack 0
   958                           
   959                           ; 8 bytes @ 0x5E
   960  00005F                     	ds	8
   961  000067                     vfpfcnvrt@vp:
   962                           	opt callstack 0
   963                           
   964                           ; 2 bytes @ 0x66
   965  000067                     	ds	2
   966  000069                     vfpfcnvrt@c:
   967                           	opt callstack 0
   968                           
   969                           ; 1 bytes @ 0x68
   970  000069                     	ds	1
   971  00006A                     vfpfcnvrt@llu:
   972                           	opt callstack 0
   973                           
   974                           ; 8 bytes @ 0x69
   975  00006A                     	ds	8
   976  000072                     ?_vfprintf:
   977                           	opt callstack 0
   978  000072                     vfprintf@fp:
   979                           	opt callstack 0
   980                           
   981                           ; 2 bytes @ 0x71
   982  000072                     	ds	2
   983  000074                     vfprintf@fmt:
   984                           	opt callstack 0
   985                           
   986                           ; 2 bytes @ 0x73
   987  000074                     	ds	2
   988  000076                     vfprintf@ap:
   989                           	opt callstack 0
   990                           
   991                           ; 2 bytes @ 0x75
   992  000076                     	ds	2
   993  000078                     vfprintf@cfmt:
   994                           	opt callstack 0
   995                           
   996                           ; 2 bytes @ 0x77
   997  000078                     	ds	2
   998  00007A                     ?_int_to_char:
   999                           	opt callstack 0
  1000  00007A                     int_to_char@num:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x79
  1004  00007A                     	ds	4
  1005  00007E                     
  1006                           ; 1 bytes @ 0x7D
  1007 ;;
  1008 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1009 ;;
  1010 ;; *************** function _main *****************
  1011 ;; Defined at:
  1012 ;;		line 28 in file "main.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  temp            2   40[BANK0 ] int 
  1017 ;;  address         2   38[BANK0 ] int 
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1027 ;;      Params:         0       0       0       0       0       0       0
  1028 ;;      Locals:         0       4       0       0       0       0       0
  1029 ;;      Temps:          0       2       0       0       0       0       0
  1030 ;;      Totals:         0       6       0       0       0       0       0
  1031 ;;Total ram usage:        6 bytes
  1032 ;; Hardware stack levels required when called:   11
  1033 ;; This function calls:
  1034 ;;		_Timer0_Init
  1035 ;;		_Timer0_StartTimer
  1036 ;;		_UARTNewLine
  1037 ;;		_UARTSendString
  1038 ;;		___fltol
  1039 ;;		_get_temp
  1040 ;;		_initialize_PWM
  1041 ;;		_initialize_RX
  1042 ;;		_initialize_TX
  1043 ;;		_int_to_char
  1044 ;;		_set_duty_cycle
  1045 ;; This function is called by:
  1046 ;;		Startup code after reset
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text0
  1051  002FE4                     __ptext0:
  1052                           	opt callstack 0
  1053  002FE4                     _main:
  1054                           	opt callstack 0
  1055  002FE4  FFFF               	dw	65535	; assembler added errata NOP
  1056                           
  1057                           ;incstack = 0
  1058  002FE6  EC8B  F01C         	call	_initialize_PWM	;wreg free
  1059  002FEA  0E00               	movlw	0
  1060  002FEC  0100               	movlb	0	; () banked
  1061  002FEE  6FE2               	movwf	(main@address+1)& (0+255),b
  1062  002FF0  0E00               	movlw	0
  1063  002FF2  6FE1               	movwf	main@address& (0+255),b
  1064                           
  1065                           ; BSR set to: 0
  1066  002FF4  EC67  F01C         	call	_Timer0_Init	;wreg free
  1067  002FF8  ECD4  F01C         	call	_Timer0_StartTimer	;wreg free
  1068  002FFC  EC97  F01C         	call	_initialize_TX	;wreg free
  1069  003000  ECA1  F01C         	call	_initialize_RX	;wreg free
  1070  003004  8E94               	bsf	3988,7,c	;volatile
  1071  003006  9C94               	bcf	3988,6,c	;volatile
  1072  003008  EC8D  F017         	call	_get_temp	;wreg free
  1073  00300C  C030  F03E         	movff	?_get_temp,___fltol@f1
  1074  003010  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
  1075  003014  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
  1076  003018  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
  1077  00301C  EC23  F017         	call	___fltol	;wreg free
  1078  003020  C03E  F0E3         	movff	?___fltol,main@temp
  1079  003024  C03F  F0E4         	movff	?___fltol+1,main@temp+1
  1080  003028  0100               	movlb	0	; () banked
  1081  00302A  4BE1               	infsnz	main@address& (0+255),f,b
  1082  00302C  2BE2               	incf	(main@address+1)& (0+255),f,b
  1083                           
  1084                           ; BSR set to: 0
  1085  00302E  9E94               	bcf	3988,7,c	;volatile
  1086                           
  1087                           ; BSR set to: 0
  1088  003030  C0E3  F07A         	movff	main@temp,int_to_char@num
  1089  003034  C0E4  F07B         	movff	main@temp+1,int_to_char@num+1
  1090  003038  0E00               	movlw	0
  1091  00303A  BE7B               	btfsc	int_to_char@num+1,7,c
  1092  00303C  0EFF               	movlw	-1
  1093  00303E  6E7C               	movwf	int_to_char@num+2,c
  1094  003040  6E7D               	movwf	int_to_char@num+3,c
  1095  003042  EC02  F01B         	call	_int_to_char	;wreg free
  1096  003046  C07A  F0DB         	movff	?_int_to_char,UARTSendString@c
  1097  00304A  C07B  F0DC         	movff	?_int_to_char+1,UARTSendString@c+1
  1098  00304E  EC48  F01B         	call	_UARTSendString	;wreg free
  1099  003052  ECAB  F01C         	call	_UARTNewLine	;wreg free
  1100  003056  0100               	movlb	0	; () banked
  1101  003058  BFE4               	btfsc	(main@temp+1)& (0+255),7,b
  1102  00305A  D006               	goto	u5260
  1103  00305C  51E4               	movf	(main@temp+1)& (0+255),w,b
  1104  00305E  E10B               	bnz	l4914
  1105  003060  0E1E               	movlw	30
  1106  003062  5DE3               	subwf	main@temp& (0+255),w,b
  1107  003064  B0D8               	btfsc	status,0,c
  1108  003066  D007               	goto	l4914
  1109  003068                     u5260:
  1110  003068  FFFF               	dw	65535	; assembler added errata NOP
  1111                           
  1112                           ; BSR set to: 0
  1113  00306A  0E03               	movlw	3
  1114  00306C  6E01               	movwf	set_duty_cycle@lower_2,c
  1115  00306E  0EFF               	movlw	255
  1116  003070  EC7A  F01C         	call	_set_duty_cycle
  1117  003074  D006               	goto	l4916
  1118  003076                     l4914:
  1119  003076  FFFF               	dw	65535	; assembler added errata NOP
  1120                           
  1121                           ; BSR set to: 0
  1122  003078  0E00               	movlw	0
  1123  00307A  6E01               	movwf	set_duty_cycle@lower_2,c
  1124  00307C  0E00               	movlw	0
  1125  00307E  EC7A  F01C         	call	_set_duty_cycle
  1126  003082                     l4916:
  1127  003082  FFFF               	dw	65535	; assembler added errata NOP
  1128  003084  0E03               	movlw	3
  1129  003086  0100               	movlb	0	; () banked
  1130  003088  6FE0               	movwf	(??_main+1)& (0+255),b
  1131  00308A  0EDB               	movlw	219
  1132  00308C  6FDF               	movwf	??_main& (0+255),b
  1133  00308E  0EFB               	movlw	251
  1134  003090                     u5297:
  1135  003090  FFFF               	dw	65535	; errata NOP
  1136  003092  2EE8               	decfsz	wreg,f,c
  1137  003094  D7FD               	bra	u5297
  1138  003096  2FDF               	decfsz	??_main& (0+255),f,b
  1139  003098  D7FB               	bra	u5297
  1140  00309A  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1141  00309C  D7F9               	bra	u5297
  1142  00309E  D000               	nop2	
  1143  0030A0  F000               	nop	
  1144  0030A2  EF1A  F000         	goto	start
  1145  0030A6                     __end_of_main:
  1146                           	opt callstack 0
  1147                           
  1148 ;; *************** function _set_duty_cycle *****************
  1149 ;; Defined at:
  1150 ;;		line 14 in file "pwm.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;  upper_8         1    wreg     unsigned char 
  1153 ;;  lower_2         1    0[COMRAM] unsigned char 
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  upper_8         1    1[COMRAM] unsigned char 
  1156 ;;  mask            1    2[COMRAM] unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1166 ;;      Params:         1       0       0       0       0       0       0
  1167 ;;      Locals:         2       0       0       0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0       0       0
  1169 ;;      Totals:         3       0       0       0       0       0       0
  1170 ;;Total ram usage:        3 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    2
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text1
  1181  0038F4                     __ptext1:
  1182                           	opt callstack 0
  1183  0038F4                     _set_duty_cycle:
  1184                           	opt callstack 0
  1185  0038F4  FFFF               	dw	65535	; assembler added errata NOP
  1186                           
  1187                           ;incstack = 0
  1188                           ;set_duty_cycle@upper_8 stored from wreg
  1189  0038F6  6E02               	movwf	set_duty_cycle@upper_8,c
  1190                           
  1191                           ;pwm.c: 15:   CCPR1L = upper_8;
  1192  0038F8  C002  FFBE         	movff	set_duty_cycle@upper_8,4030	;volatile
  1193                           
  1194                           ;pwm.c: 16:   char mask = 0;
  1195  0038FC  0E00               	movlw	0
  1196  0038FE  6E03               	movwf	set_duty_cycle@mask,c
  1197                           
  1198                           ;pwm.c: 17:   mask |= lower_2;
  1199  003900  5001               	movf	set_duty_cycle@lower_2,w,c
  1200  003902  1203               	iorwf	set_duty_cycle@mask,f,c
  1201                           
  1202                           ;pwm.c: 18:   mask = mask << 4;
  1203  003904  3803               	swapf	set_duty_cycle@mask,w,c
  1204  003906  0BF0               	andlw	240
  1205  003908  6E03               	movwf	set_duty_cycle@mask,c
  1206                           
  1207                           ;pwm.c: 19:   CCP1CON = (CCP1CON & ~(0x30)) | mask;
  1208  00390A  50BD               	movf	4029,w,c	;volatile
  1209  00390C  0BCF               	andlw	207
  1210  00390E  1003               	iorwf	set_duty_cycle@mask,w,c
  1211  003910  6EBD               	movwf	4029,c	;volatile
  1212  003912  0012               	return		;funcret
  1213  003914  FFFF               	dw	65535	; errata NOP
  1214  003916                     __end_of_set_duty_cycle:
  1215                           	opt callstack 0
  1216                           
  1217 ;; *************** function _int_to_char *****************
  1218 ;; Defined at:
  1219 ;;		line 18 in file "lcd.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;  num             4  121[COMRAM] unsigned long 
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  result         10   18[BANK0 ] unsigned char [10]
  1224 ;;  the_num         4   28[BANK0 ] unsigned long 
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  2  121[COMRAM] PTR unsigned char 
  1227 ;; Registers used:
  1228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1234 ;;      Params:         4       0       0       0       0       0       0
  1235 ;;      Locals:         0      14       0       0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0       0       0
  1237 ;;      Totals:         4      14       0       0       0       0       0
  1238 ;;Total ram usage:       18 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; Hardware stack levels required when called:   10
  1241 ;; This function calls:
  1242 ;;		_getchar
  1243 ;;		_sprintf
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;;		_read_op
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text2
  1251  003604                     __ptext2:
  1252                           	opt callstack 0
  1253  003604                     _int_to_char:
  1254                           	opt callstack 0
  1255  003604  FFFF               	dw	65535	; assembler added errata NOP
  1256                           
  1257                           ;lcd.c: 19:   char result[10];;lcd.c: 20:   unsigned long the_num = num;
  1258                           
  1259                           ;incstack = 0
  1260  003606  C07A  F0D7         	movff	int_to_char@num,int_to_char@the_num
  1261  00360A  C07B  F0D8         	movff	int_to_char@num+1,int_to_char@the_num+1
  1262  00360E  C07C  F0D9         	movff	int_to_char@num+2,int_to_char@the_num+2
  1263  003612  C07D  F0DA         	movff	int_to_char@num+3,int_to_char@the_num+3
  1264                           
  1265                           ;lcd.c: 21:   sprintf(result, "%lu", the_num);
  1266  003616  0ECD               	movlw	low int_to_char@result
  1267  003618  0100               	movlb	0	; () banked
  1268  00361A  6FBB               	movwf	sprintf@s& (0+255),b
  1269  00361C  0E00               	movlw	high int_to_char@result
  1270  00361E  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  1271  003620  0E1D               	movlw	low STR_1
  1272  003622  6FBD               	movwf	sprintf@fmt& (0+255),b
  1273  003624  0E06               	movlw	high STR_1
  1274  003626  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  1275  003628  C0D7  F0BF         	movff	int_to_char@the_num,?_sprintf+4
  1276  00362C  C0D8  F0C0         	movff	int_to_char@the_num+1,?_sprintf+5
  1277  003630  C0D9  F0C1         	movff	int_to_char@the_num+2,?_sprintf+6
  1278  003634  C0DA  F0C2         	movff	int_to_char@the_num+3,?_sprintf+7
  1279  003638  EC32  F01A         	call	_sprintf	;wreg free
  1280                           
  1281                           ;lcd.c: 22:   getchar();
  1282  00363C  ECBF  F01C         	call	_getchar	;wreg free
  1283                           
  1284                           ;lcd.c: 23:   return result;
  1285  003640  0ECD               	movlw	low int_to_char@result
  1286  003642  6E7A               	movwf	?_int_to_char,c
  1287  003644  0E00               	movlw	high int_to_char@result
  1288  003646  6E7B               	movwf	?_int_to_char+1,c
  1289  003648  0012               	return		;funcret
  1290  00364A  FFFF               	dw	65535	; errata NOP
  1291  00364C                     __end_of_int_to_char:
  1292                           	opt callstack 0
  1293                           
  1294 ;; *************** function _sprintf *****************
  1295 ;; Defined at:
  1296 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1299 ;;		 -> int_to_char@result(10), 
  1300 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1301 ;;		 -> STR_1(4), 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  f               6   10[BANK0 ] struct _IO_FILE
  1304 ;;  ap              2   16[BANK0 ] PTR void [1]
  1305 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1306 ;;  ret             2    0        int 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  2    0[BANK0 ] int 
  1309 ;; Registers used:
  1310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1316 ;;      Params:         0       8       0       0       0       0       0
  1317 ;;      Locals:         0      10       0       0       0       0       0
  1318 ;;      Temps:          0       0       0       0       0       0       0
  1319 ;;      Totals:         0      18       0       0       0       0       0
  1320 ;;Total ram usage:       18 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; Hardware stack levels required when called:    9
  1323 ;; This function calls:
  1324 ;;		_vfprintf
  1325 ;; This function is called by:
  1326 ;;		_int_to_char
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text3
  1331  003464                     __ptext3:
  1332                           	opt callstack 0
  1333  003464                     _sprintf:
  1334                           	opt callstack 0
  1335  003464  FFFF               	dw	65535	; assembler added errata NOP
  1336                           
  1337                           ;incstack = 0
  1338  003466  0EBF               	movlw	low (?_sprintf+4)
  1339  003468  0100               	movlb	0	; () banked
  1340  00346A  6FCB               	movwf	sprintf@ap& (0+255),b
  1341  00346C  0E00               	movlw	high (?_sprintf+4)
  1342  00346E  6FCC               	movwf	(sprintf@ap+1)& (0+255),b
  1343  003470  C0BB  F0C5         	movff	sprintf@s,sprintf@f
  1344  003474  C0BC  F0C6         	movff	sprintf@s+1,sprintf@f+1
  1345                           
  1346                           ; BSR set to: 0
  1347  003478  0E00               	movlw	0
  1348  00347A  6FC8               	movwf	(sprintf@f+3)& (0+255),b
  1349  00347C  0E00               	movlw	0
  1350  00347E  6FC7               	movwf	(sprintf@f+2)& (0+255),b
  1351                           
  1352                           ; BSR set to: 0
  1353  003480  0E00               	movlw	0
  1354  003482  6FCA               	movwf	(sprintf@f+5)& (0+255),b
  1355  003484  0E00               	movlw	0
  1356  003486  6FC9               	movwf	(sprintf@f+4)& (0+255),b
  1357                           
  1358                           ; BSR set to: 0
  1359  003488  0EC5               	movlw	low sprintf@f
  1360  00348A  6E72               	movwf	vfprintf@fp,c
  1361  00348C  0E00               	movlw	high sprintf@f
  1362  00348E  6E73               	movwf	vfprintf@fp+1,c
  1363  003490  C0BD  F074         	movff	sprintf@fmt,vfprintf@fmt
  1364  003494  C0BE  F075         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1365  003498  0ECB               	movlw	low sprintf@ap
  1366  00349A  6E76               	movwf	vfprintf@ap,c
  1367  00349C  0E00               	movlw	high sprintf@ap
  1368  00349E  6E77               	movwf	vfprintf@ap+1,c
  1369  0034A0  EC02  F01A         	call	_vfprintf	;wreg free
  1370  0034A4  0100               	movlb	0	; () banked
  1371  0034A6  51C7               	movf	(sprintf@f+2)& (0+255),w,b
  1372  0034A8  25BB               	addwf	sprintf@s& (0+255),w,b
  1373  0034AA  6ED9               	movwf	fsr2l,c
  1374  0034AC  51C8               	movf	(sprintf@f+3)& (0+255),w,b
  1375  0034AE  21BC               	addwfc	(sprintf@s+1)& (0+255),w,b
  1376  0034B0  6EDA               	movwf	fsr2h,c
  1377  0034B2  0E00               	movlw	0
  1378  0034B4  6EDF               	movwf	indf2,c
  1379                           
  1380                           ; BSR set to: 0
  1381  0034B6  0012               	return		;funcret
  1382  0034B8  FFFF               	dw	65535	; errata NOP
  1383  0034BA                     __end_of_sprintf:
  1384                           	opt callstack 0
  1385                           
  1386 ;; *************** function _vfprintf *****************
  1387 ;; Defined at:
  1388 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  1391 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  1392 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  1393 ;;		 -> STR_2(3), STR_1(4), 
  1394 ;;  ap              2  117[COMRAM] PTR PTR void 
  1395 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  cfmt            2  119[COMRAM] PTR unsigned char 
  1398 ;;		 -> STR_2(3), STR_1(4), 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  2  113[COMRAM] int 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1408 ;;      Params:         6       0       0       0       0       0       0
  1409 ;;      Locals:         2       0       0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0       0       0
  1411 ;;      Totals:         8       0       0       0       0       0       0
  1412 ;;Total ram usage:        8 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; Hardware stack levels required when called:    8
  1415 ;; This function calls:
  1416 ;;		_vfpfcnvrt
  1417 ;; This function is called by:
  1418 ;;		_sprintf
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text4
  1423  003404                     __ptext4:
  1424                           	opt callstack 0
  1425  003404                     _vfprintf:
  1426                           	opt callstack 0
  1427  003404  FFFF               	dw	65535	; assembler added errata NOP
  1428                           
  1429                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  1430                           
  1431                           ; BSR set to: 0
  1432                           ;incstack = 0
  1433  003406  C074  F078         	movff	vfprintf@fmt,vfprintf@cfmt
  1434  00340A  C075  F079         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1435                           
  1436                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1437  00340E  0E00               	movlw	0
  1438  003410  0100               	movlb	0	; () banked
  1439  003412  6F90               	movwf	(_nout+1)& (0+255),b
  1440  003414  0E00               	movlw	0
  1441  003416  6F8F               	movwf	_nout& (0+255),b
  1442                           
  1443                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1444  003418  D014               	goto	l4140
  1445  00341A                     l4138:
  1446  00341A  FFFF               	dw	65535	; assembler added errata NOP
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1450  00341C  C072  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1451  003420  C073  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1452  003424  0E78               	movlw	low vfprintf@cfmt
  1453  003426  6E45               	movwf	vfpfcnvrt@fmt,c
  1454  003428  0E00               	movlw	high vfprintf@cfmt
  1455  00342A  6E46               	movwf	vfpfcnvrt@fmt+1,c
  1456  00342C  C076  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1457  003430  C077  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1458  003434  EC26  F003         	call	_vfpfcnvrt	;wreg free
  1459  003438  5043               	movf	?_vfpfcnvrt,w,c
  1460  00343A  0100               	movlb	0	; () banked
  1461  00343C  278F               	addwf	_nout& (0+255),f,b
  1462  00343E  5044               	movf	?_vfpfcnvrt+1,w,c
  1463  003440  2390               	addwfc	(_nout+1)& (0+255),f,b
  1464  003442                     l4140:
  1465  003442  FFFF               	dw	65535	; assembler added errata NOP
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1469  003444  C078  FFF6         	movff	vfprintf@cfmt,tblptrl
  1470  003448  C079  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1471  00344C                     	if	0	;tblptru may be non-zero
  1472  00344C                     	endif
  1473  00344C                     	if	0	;tblptru may be non-zero
  1474  00344C                     	endif
  1475  00344C  0008               	tblrd		*
  1476  00344E  FFFF               	dw	65535	; errata NOP
  1477  003450  50F5               	movf	tablat,w,c
  1478  003452  0900               	iorlw	0
  1479  003454  A4D8               	btfss	status,2,c
  1480  003456  D7E1               	goto	l4138
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  1484  003458  C08F  F072         	movff	_nout,?_vfprintf
  1485  00345C  C090  F073         	movff	_nout+1,?_vfprintf+1
  1486                           
  1487                           ; BSR set to: 0
  1488  003460  0012               	return		;funcret
  1489  003462  FFFF               	dw	65535	; errata NOP
  1490  003464                     __end_of_vfprintf:
  1491                           	opt callstack 0
  1492                           
  1493 ;; *************** function _vfpfcnvrt *****************
  1494 ;; Defined at:
  1495 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1498 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  1499 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1500 ;;		 -> vfprintf@cfmt(2), 
  1501 ;;  ap              2   70[COMRAM] PTR PTR void 
  1502 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;  llu             8  105[COMRAM] unsigned long long 
  1505 ;;  ll              8   94[COMRAM] long long 
  1506 ;;  f               4    0        long long 
  1507 ;;  ct              3    0        unsigned char [3]
  1508 ;;  vp              2  102[COMRAM] PTR void 
  1509 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1510 ;;  done            2   88[COMRAM] int 
  1511 ;;  cp              2   86[COMRAM] PTR unsigned char 
  1512 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1513 ;;  i               2    0        int 
  1514 ;;  c               1  104[COMRAM] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  2   66[COMRAM] int 
  1517 ;; Registers used:
  1518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1524 ;;      Params:         6       0       0       0       0       0       0
  1525 ;;      Locals:        27       0       0       0       0       0       0
  1526 ;;      Temps:         14       0       0       0       0       0       0
  1527 ;;      Totals:        47       0       0       0       0       0       0
  1528 ;;Total ram usage:       47 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    7
  1531 ;; This function calls:
  1532 ;;		_atoi
  1533 ;;		_ctoa
  1534 ;;		_dtoa
  1535 ;;		_fputc
  1536 ;;		_isdigit
  1537 ;;		_otoa
  1538 ;;		_stoa
  1539 ;;		_strncmp
  1540 ;;		_utoa
  1541 ;;		_xtoa
  1542 ;; This function is called by:
  1543 ;;		_vfprintf
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text5
  1548  00064C                     __ptext5:
  1549                           	opt callstack 0
  1550  00064C                     _vfpfcnvrt:
  1551                           	opt callstack 0
  1552  00064C  FFFF               	dw	65535	; assembler added errata NOP
  1553                           
  1554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;incstack = 0
  1558  00064E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1559  000652  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1560  000656  CFDE FFF6          	movff	postinc2,tblptrl
  1561  00065A  CFDD FFF7          	movff	postdec2,tblptrh
  1562  00065E                     	if	0	;tblptru may be non-zero
  1563  00065E                     	endif
  1564  00065E                     	if	0	;tblptru may be non-zero
  1565  00065E                     	endif
  1566  00065E  0008               	tblrd		*
  1567  000660  FFFF               	dw	65535	; errata NOP
  1568  000662  50F5               	movf	tablat,w,c
  1569  000664  0A25               	xorlw	37
  1570  000666  A4D8               	btfss	status,2,c
  1571  000668  EFD7  F00B         	goto	l4118
  1572                           
  1573                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1574  00066C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1575  000670  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1576  000674  2ADE               	incf	postinc2,f,c
  1577  000676  0E00               	movlw	0
  1578  000678  22DD               	addwfc	postdec2,f,c
  1579                           
  1580                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  1581  00067A  0E00               	movlw	0
  1582  00067C  0100               	movlb	0	; () banked
  1583  00067E  6F92               	movwf	(_width+1)& (0+255),b
  1584  000680  0E00               	movlw	0
  1585  000682  6F91               	movwf	_width& (0+255),b
  1586  000684  C091  F095         	movff	_width,_flags
  1587  000688  C092  F096         	movff	_width+1,_flags+1
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  1591  00068C  6993               	setf	_prec& (0+255),b
  1592  00068E  6994               	setf	(_prec+1)& (0+255),b
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  1596  000690  0E00               	movlw	0
  1597  000692  6E5A               	movwf	vfpfcnvrt@done+1,c
  1598  000694  0E00               	movlw	0
  1599  000696  D020               	goto	L1
  1600  000698                     l3760:
  1601  000698  FFFF               	dw	65535	; assembler added errata NOP
  1602                           
  1603                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  1604  00069A  0100               	movlb	0	; () banked
  1605  00069C  8195               	bsf	_flags& (0+255),0,b
  1606  00069E                     l3762:
  1607  00069E  FFFF               	dw	65535	; assembler added errata NOP
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  1611  0006A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1612  0006A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1613  0006A8  2ADE               	incf	postinc2,f,c
  1614  0006AA  0E00               	movlw	0
  1615  0006AC  22DD               	addwfc	postdec2,f,c
  1616                           
  1617                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  1618  0006AE  D03A               	goto	l3786
  1619  0006B0                     l3764:
  1620  0006B0  FFFF               	dw	65535	; assembler added errata NOP
  1621                           
  1622                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  1623  0006B2  0100               	movlb	0	; () banked
  1624  0006B4  8395               	bsf	_flags& (0+255),1,b
  1625  0006B6  D7F3               	goto	l3762
  1626  0006B8                     l3768:
  1627  0006B8  FFFF               	dw	65535	; assembler added errata NOP
  1628                           
  1629                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  1630  0006BA  0100               	movlb	0	; () banked
  1631  0006BC  8595               	bsf	_flags& (0+255),2,b
  1632  0006BE  D7EF               	goto	l3762
  1633  0006C0                     l3772:
  1634  0006C0  FFFF               	dw	65535	; assembler added errata NOP
  1635                           
  1636                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  1637  0006C2  0100               	movlb	0	; () banked
  1638  0006C4  8795               	bsf	_flags& (0+255),3,b
  1639  0006C6  D7EB               	goto	l3762
  1640  0006C8                     l3776:
  1641  0006C8  FFFF               	dw	65535	; assembler added errata NOP
  1642                           
  1643                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  1644  0006CA  0100               	movlb	0	; () banked
  1645  0006CC  8995               	bsf	_flags& (0+255),4,b
  1646  0006CE  D7E7               	goto	l3762
  1647  0006D0                     l3780:
  1648  0006D0  FFFF               	dw	65535	; assembler added errata NOP
  1649                           
  1650                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  1651  0006D2  0E00               	movlw	0
  1652  0006D4  6E5A               	movwf	vfpfcnvrt@done+1,c
  1653  0006D6  0E01               	movlw	1
  1654  0006D8                     L1:
  1655  0006D8  FFFF               	dw	65535	; assembler added errata NOP
  1656  0006DA  6E59               	movwf	vfpfcnvrt@done,c
  1657                           
  1658                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  1659  0006DC  D023               	goto	l3786
  1660  0006DE                     l3784:
  1661  0006DE  FFFF               	dw	65535	; assembler added errata NOP
  1662  0006E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1663  0006E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1664  0006E8  CFDE FFF6          	movff	postinc2,tblptrl
  1665  0006EC  CFDD FFF7          	movff	postdec2,tblptrh
  1666  0006F0                     	if	0	;tblptru may be non-zero
  1667  0006F0                     	endif
  1668  0006F0                     	if	0	;tblptru may be non-zero
  1669  0006F0                     	endif
  1670  0006F0  0008               	tblrd		*
  1671  0006F2  FFFF               	dw	65535	; errata NOP
  1672  0006F4  50F5               	movf	tablat,w,c
  1673  0006F6  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  1674  0006F8  6A4A               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  1675                           
  1676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1677                           ; Switch size 1, requested type "simple"
  1678                           ; Number of cases is 1, Range of values is 0 to 0
  1679                           ; switch strategies available:
  1680                           ; Name         Instructions Cycles
  1681                           ; simple_byte            4     3 (average)
  1682                           ;	Chosen strategy is simple_byte
  1683  0006FA  504A               	movf	??_vfpfcnvrt+1,w,c
  1684  0006FC  0A00               	xorlw	0	; case 0
  1685  0006FE  A4D8               	btfss	status,2,c
  1686  000700  D7E7               	goto	l3780
  1687                           
  1688                           ; Switch size 1, requested type "simple"
  1689                           ; Number of cases is 5, Range of values is 32 to 48
  1690                           ; switch strategies available:
  1691                           ; Name         Instructions Cycles
  1692                           ; simple_byte           16     9 (average)
  1693                           ;	Chosen strategy is simple_byte
  1694  000702  5049               	movf	??_vfpfcnvrt,w,c
  1695  000704  0A20               	xorlw	32	; case 32
  1696  000706  B4D8               	btfsc	status,2,c
  1697  000708  D7DB               	goto	l3772
  1698  00070A  0A03               	xorlw	3	; case 35
  1699  00070C  B4D8               	btfsc	status,2,c
  1700  00070E  D7DC               	goto	l3776
  1701  000710  0A08               	xorlw	8	; case 43
  1702  000712  B4D8               	btfsc	status,2,c
  1703  000714  D7D1               	goto	l3768
  1704  000716  0A06               	xorlw	6	; case 45
  1705  000718  B4D8               	btfsc	status,2,c
  1706  00071A  D7BE               	goto	l3760
  1707  00071C  0A1D               	xorlw	29	; case 48
  1708  00071E  B4D8               	btfsc	status,2,c
  1709  000720  D7C7               	goto	l3764
  1710  000722  D7D6               	goto	l3780
  1711  000724                     l3786:
  1712  000724  FFFF               	dw	65535	; assembler added errata NOP
  1713                           
  1714                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  1715  000726  5059               	movf	vfpfcnvrt@done,w,c
  1716  000728  105A               	iorwf	vfpfcnvrt@done+1,w,c
  1717  00072A  B4D8               	btfsc	status,2,c
  1718  00072C  D7D8               	goto	l3784
  1719                           
  1720                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  1721  00072E  0100               	movlb	0	; () banked
  1722  000730  B195               	btfsc	_flags& (0+255),0,b
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  1726  000732  9395               	bcf	_flags& (0+255),1,b
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  1730  000734  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1731  000738  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1732  00073C  CFDE FFF6          	movff	postinc2,tblptrl
  1733  000740  CFDD FFF7          	movff	postdec2,tblptrh
  1734  000744                     	if	0	;tblptru may be non-zero
  1735  000744                     	endif
  1736  000744                     	if	0	;tblptru may be non-zero
  1737  000744                     	endif
  1738  000744  0008               	tblrd		*
  1739  000746  FFFF               	dw	65535	; errata NOP
  1740  000748  50F5               	movf	tablat,w,c
  1741  00074A  0A2A               	xorlw	42
  1742  00074C  A4D8               	btfss	status,2,c
  1743  00074E  D023               	goto	l3798
  1744                           
  1745                           ; BSR set to: 0
  1746                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  1747  000750  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1748  000754  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1749  000758  2ADE               	incf	postinc2,f,c
  1750  00075A  0E00               	movlw	0
  1751  00075C  22DD               	addwfc	postdec2,f,c
  1752                           
  1753                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  1754  00075E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1755  000762  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1756  000766  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1757  00076A  0E02               	movlw	2
  1758  00076C  26DE               	addwf	postinc2,f,c
  1759  00076E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1760  000772  0E00               	movlw	0
  1761  000774  22DD               	addwfc	postdec2,f,c
  1762  000776  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1763  00077A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1764  00077E  CFDE F091          	movff	postinc2,_width
  1765  000782  CFDD F092          	movff	postdec2,_width+1
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  1769  000786  AF92               	btfss	(_width+1)& (0+255),7,b
  1770  000788  D045               	goto	u3880
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  1774  00078A  8195               	bsf	_flags& (0+255),0,b
  1775                           
  1776                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  1777  00078C  6D91               	negf	_width& (0+255),b
  1778  00078E  1F92               	comf	(_width+1)& (0+255),f,b
  1779  000790  B0D8               	btfsc	status,0,c
  1780  000792  2B92               	incf	(_width+1)& (0+255),f,b
  1781  000794  D03F               	goto	u3880
  1782  000796                     l3798:
  1783  000796  FFFF               	dw	65535	; assembler added errata NOP
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  1787  000798  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1788  00079C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1789  0007A0  CFDE F008          	movff	postinc2,atoi@s
  1790  0007A4  CFDD F009          	movff	postdec2,atoi@s+1
  1791  0007A8  EC68  F013         	call	_atoi	;wreg free
  1792  0007AC  C008  F091         	movff	?_atoi,_width
  1793  0007B0  C009  F092         	movff	?_atoi+1,_width+1
  1794                           
  1795                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1796  0007B4  D008               	goto	l3802
  1797  0007B6                     l3800:
  1798  0007B6  FFFF               	dw	65535	; assembler added errata NOP
  1799                           
  1800                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  1801  0007B8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1802  0007BC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1803  0007C0  2ADE               	incf	postinc2,f,c
  1804  0007C2  0E00               	movlw	0
  1805  0007C4  22DD               	addwfc	postdec2,f,c
  1806  0007C6                     l3802:
  1807  0007C6  FFFF               	dw	65535	; assembler added errata NOP
  1808  0007C8  0ED0               	movlw	208
  1809  0007CA  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  1810  0007CC  0EFF               	movlw	255
  1811  0007CE  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1812  0007D0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1813  0007D4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1814  0007D8  CFDE FFF6          	movff	postinc2,tblptrl
  1815  0007DC  CFDD FFF7          	movff	postdec2,tblptrh
  1816  0007E0                     	if	0	;tblptru may be non-zero
  1817  0007E0                     	endif
  1818  0007E0                     	if	0	;tblptru may be non-zero
  1819  0007E0                     	endif
  1820  0007E0  0008               	tblrd		*
  1821  0007E2  FFFF               	dw	65535	; errata NOP
  1822  0007E4  50F5               	movf	tablat,w,c
  1823  0007E6  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1824  0007E8  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1825  0007EA  5049               	movf	??_vfpfcnvrt,w,c
  1826  0007EC  264B               	addwf	??_vfpfcnvrt+2,f,c
  1827  0007EE  504A               	movf	??_vfpfcnvrt+1,w,c
  1828  0007F0  224C               	addwfc	??_vfpfcnvrt+3,f,c
  1829  0007F2  504C               	movf	??_vfpfcnvrt+3,w,c
  1830  0007F4  E106               	bnz	u3860
  1831  0007F6  0E0A               	movlw	10
  1832  0007F8  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  1833  0007FA  B0D8               	btfsc	status,0,c
  1834  0007FC  D002               	goto	u3860
  1835  0007FE  0E01               	movlw	1
  1836  000800  D002               	goto	u3870
  1837  000802                     u3860:
  1838  000802  FFFF               	dw	65535	; assembler added errata NOP
  1839  000804  0E00               	movlw	0
  1840  000806                     u3870:
  1841  000806  FFFF               	dw	65535	; assembler added errata NOP
  1842  000808  6E5B               	movwf	_vfpfcnvrt$1195,c
  1843  00080A  6A5C               	clrf	_vfpfcnvrt$1195+1,c
  1844  00080C  505B               	movf	_vfpfcnvrt$1195,w,c
  1845  00080E  105C               	iorwf	_vfpfcnvrt$1195+1,w,c
  1846  000810  A4D8               	btfss	status,2,c
  1847  000812  D7D1               	goto	l3800
  1848  000814                     u3880:
  1849  000814  FFFF               	dw	65535	; assembler added errata NOP
  1850                           
  1851                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  1852  000816  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1853  00081A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1854  00081E  CFDE FFF6          	movff	postinc2,tblptrl
  1855  000822  CFDD FFF7          	movff	postdec2,tblptrh
  1856  000826                     	if	0	;tblptru may be non-zero
  1857  000826                     	endif
  1858  000826                     	if	0	;tblptru may be non-zero
  1859  000826                     	endif
  1860  000826  0008               	tblrd		*
  1861  000828  FFFF               	dw	65535	; errata NOP
  1862  00082A  50F5               	movf	tablat,w,c
  1863  00082C  0A2E               	xorlw	46
  1864  00082E  A4D8               	btfss	status,2,c
  1865  000830  D075               	goto	u3930
  1866                           
  1867                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  1868  000832  0E00               	movlw	0
  1869  000834  0100               	movlb	0	; () banked
  1870  000836  6F94               	movwf	(_prec+1)& (0+255),b
  1871  000838  0E00               	movlw	0
  1872  00083A  6F93               	movwf	_prec& (0+255),b
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  1876  00083C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1877  000840  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1878  000844  2ADE               	incf	postinc2,f,c
  1879  000846  0E00               	movlw	0
  1880  000848  22DD               	addwfc	postdec2,f,c
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  1884  00084A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1885  00084E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1886  000852  CFDE FFF6          	movff	postinc2,tblptrl
  1887  000856  CFDD FFF7          	movff	postdec2,tblptrh
  1888  00085A                     	if	0	;tblptru may be non-zero
  1889  00085A                     	endif
  1890  00085A                     	if	0	;tblptru may be non-zero
  1891  00085A                     	endif
  1892  00085A  0008               	tblrd		*
  1893  00085C  FFFF               	dw	65535	; errata NOP
  1894  00085E  50F5               	movf	tablat,w,c
  1895  000860  0A2A               	xorlw	42
  1896  000862  A4D8               	btfss	status,2,c
  1897  000864  D01C               	goto	l3818
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  1901  000866  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1902  00086A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1903  00086E  2ADE               	incf	postinc2,f,c
  1904  000870  0E00               	movlw	0
  1905  000872  22DD               	addwfc	postdec2,f,c
  1906                           
  1907                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  1908  000874  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1909  000878  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1910  00087C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1911  000880  0E02               	movlw	2
  1912  000882  26DE               	addwf	postinc2,f,c
  1913  000884  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1914  000888  0E00               	movlw	0
  1915  00088A  22DD               	addwfc	postdec2,f,c
  1916  00088C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1917  000890  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1918  000894  CFDE F093          	movff	postinc2,_prec
  1919  000898  CFDD F094          	movff	postdec2,_prec+1
  1920                           
  1921                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
  1922  00089C  D03F               	goto	u3930
  1923  00089E                     l3818:
  1924  00089E  FFFF               	dw	65535	; assembler added errata NOP
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  1928  0008A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1929  0008A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1930  0008A8  CFDE F008          	movff	postinc2,atoi@s
  1931  0008AC  CFDD F009          	movff	postdec2,atoi@s+1
  1932  0008B0  EC68  F013         	call	_atoi	;wreg free
  1933  0008B4  C008  F093         	movff	?_atoi,_prec
  1934  0008B8  C009  F094         	movff	?_atoi+1,_prec+1
  1935                           
  1936                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1937  0008BC  D008               	goto	l3822
  1938  0008BE                     l3820:
  1939  0008BE  FFFF               	dw	65535	; assembler added errata NOP
  1940                           
  1941                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  1942  0008C0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1943  0008C4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1944  0008C8  2ADE               	incf	postinc2,f,c
  1945  0008CA  0E00               	movlw	0
  1946  0008CC  22DD               	addwfc	postdec2,f,c
  1947  0008CE                     l3822:
  1948  0008CE  FFFF               	dw	65535	; assembler added errata NOP
  1949  0008D0  0ED0               	movlw	208
  1950  0008D2  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  1951  0008D4  0EFF               	movlw	255
  1952  0008D6  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1953  0008D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1954  0008DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1955  0008E0  CFDE FFF6          	movff	postinc2,tblptrl
  1956  0008E4  CFDD FFF7          	movff	postdec2,tblptrh
  1957  0008E8                     	if	0	;tblptru may be non-zero
  1958  0008E8                     	endif
  1959  0008E8                     	if	0	;tblptru may be non-zero
  1960  0008E8                     	endif
  1961  0008E8  0008               	tblrd		*
  1962  0008EA  FFFF               	dw	65535	; errata NOP
  1963  0008EC  50F5               	movf	tablat,w,c
  1964  0008EE  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1965  0008F0  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1966  0008F2  5049               	movf	??_vfpfcnvrt,w,c
  1967  0008F4  264B               	addwf	??_vfpfcnvrt+2,f,c
  1968  0008F6  504A               	movf	??_vfpfcnvrt+1,w,c
  1969  0008F8  224C               	addwfc	??_vfpfcnvrt+3,f,c
  1970  0008FA  504C               	movf	??_vfpfcnvrt+3,w,c
  1971  0008FC  E106               	bnz	u3910
  1972  0008FE  0E0A               	movlw	10
  1973  000900  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  1974  000902  B0D8               	btfsc	status,0,c
  1975  000904  D002               	goto	u3910
  1976  000906  0E01               	movlw	1
  1977  000908  D002               	goto	u3920
  1978  00090A                     u3910:
  1979  00090A  FFFF               	dw	65535	; assembler added errata NOP
  1980  00090C  0E00               	movlw	0
  1981  00090E                     u3920:
  1982  00090E  FFFF               	dw	65535	; assembler added errata NOP
  1983  000910  6E5D               	movwf	_vfpfcnvrt$1196,c
  1984  000912  6A5E               	clrf	_vfpfcnvrt$1196+1,c
  1985  000914  505D               	movf	_vfpfcnvrt$1196,w,c
  1986  000916  105E               	iorwf	_vfpfcnvrt$1196+1,w,c
  1987  000918  A4D8               	btfss	status,2,c
  1988  00091A  D7D1               	goto	l3820
  1989  00091C                     u3930:
  1990  00091C  FFFF               	dw	65535	; assembler added errata NOP
  1991                           
  1992                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  1993  00091E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1994  000922  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1995  000926  CFDE FFF6          	movff	postinc2,tblptrl
  1996  00092A  CFDD FFF7          	movff	postdec2,tblptrh
  1997  00092E                     	if	0	;tblptru may be non-zero
  1998  00092E                     	endif
  1999  00092E                     	if	0	;tblptru may be non-zero
  2000  00092E                     	endif
  2001  00092E  0008               	tblrd		*
  2002  000930  FFFF               	dw	65535	; errata NOP
  2003  000932  50F5               	movf	tablat,w,c
  2004  000934  0A63               	xorlw	99
  2005  000936  A4D8               	btfss	status,2,c
  2006  000938  D027               	goto	l3836
  2007                           
  2008                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  2009  00093A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2010  00093E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2011  000942  2ADE               	incf	postinc2,f,c
  2012  000944  0E00               	movlw	0
  2013  000946  22DD               	addwfc	postdec2,f,c
  2014                           
  2015                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2016  000948  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2017  00094C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2018  000950  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2019  000954  0E02               	movlw	2
  2020  000956  26DE               	addwf	postinc2,f,c
  2021  000958  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2022  00095C  0E00               	movlw	0
  2023  00095E  22DD               	addwfc	postdec2,f,c
  2024  000960  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2025  000964  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2026  000968  50DF               	movf	indf2,w,c
  2027  00096A  6E69               	movwf	vfpfcnvrt@c,c
  2028                           
  2029                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  2030  00096C  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  2031  000970  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2032  000974  C069  F01E         	movff	vfpfcnvrt@c,ctoa@c
  2033  000978  EC88  F01A         	call	_ctoa	;wreg free
  2034  00097C  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  2035  000980  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2036  000984  EFF3  F00B         	goto	l503
  2037  000988                     l3836:
  2038  000988  FFFF               	dw	65535	; assembler added errata NOP
  2039                           
  2040                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 802:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
  2041  00098A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2042  00098E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2043  000992  CFDE F001          	movff	postinc2,strncmp@_l
  2044  000996  CFDD F002          	movff	postdec2,strncmp@_l+1
  2045  00099A  0E05               	movlw	low STR_3
  2046  00099C  6E03               	movwf	strncmp@_r,c
  2047  00099E  0E06               	movlw	high STR_3
  2048  0009A0  6E04               	movwf	strncmp@_r+1,c
  2049  0009A2  0E00               	movlw	0
  2050  0009A4  6E06               	movwf	strncmp@n+1,c
  2051  0009A6  0E03               	movlw	3
  2052  0009A8  6E05               	movwf	strncmp@n,c
  2053  0009AA  EC53  F018         	call	_strncmp	;wreg free
  2054  0009AE  5001               	movf	?_strncmp,w,c
  2055  0009B0  1002               	iorwf	?_strncmp+1,w,c
  2056  0009B2  B4D8               	btfsc	status,2,c
  2057  0009B4  D016               	goto	u3960
  2058  0009B6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2059  0009BA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2060  0009BE  CFDE F001          	movff	postinc2,strncmp@_l
  2061  0009C2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2062  0009C6  0E09               	movlw	low STR_7
  2063  0009C8  6E03               	movwf	strncmp@_r,c
  2064  0009CA  0E06               	movlw	high STR_7
  2065  0009CC  6E04               	movwf	strncmp@_r+1,c
  2066  0009CE  0E00               	movlw	0
  2067  0009D0  6E06               	movwf	strncmp@n+1,c
  2068  0009D2  0E03               	movlw	3
  2069  0009D4  6E05               	movwf	strncmp@n,c
  2070  0009D6  EC53  F018         	call	_strncmp	;wreg free
  2071  0009DA  5001               	movf	?_strncmp,w,c
  2072  0009DC  1002               	iorwf	?_strncmp+1,w,c
  2073  0009DE  A4D8               	btfss	status,2,c
  2074  0009E0  D043               	goto	l3846
  2075  0009E2                     u3960:
  2076  0009E2  FFFF               	dw	65535	; assembler added errata NOP
  2077                           
  2078                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 803: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 805:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
  2079  0009E4  0E03               	movlw	3
  2080  0009E6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2081  0009EA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2082  0009EE  26DE               	addwf	postinc2,f,c
  2083  0009F0  0E00               	movlw	0
  2084  0009F2  22DD               	addwfc	postdec2,f,c
  2085                           
  2086                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 806:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2087  0009F4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2088  0009F8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2089  0009FC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2090  000A00  0E02               	movlw	2
  2091  000A02  26DE               	addwf	postinc2,f,c
  2092  000A04  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2093  000A08  0E00               	movlw	0
  2094  000A0A  22DD               	addwfc	postdec2,f,c
  2095  000A0C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2096  000A10  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2097  000A14  50DF               	movf	indf2,w,c
  2098  000A16  6E5F               	movwf	vfpfcnvrt@ll,c
  2099  000A18  0E00               	movlw	0
  2100  000A1A  BE5F               	btfsc	vfpfcnvrt@ll,7,c
  2101  000A1C  0EFF               	movlw	-1
  2102  000A1E  6E60               	movwf	vfpfcnvrt@ll+1,c
  2103  000A20                     L2:
  2104  000A20  FFFF               	dw	65535	; assembler added errata NOP
  2105  000A22  6E61               	movwf	vfpfcnvrt@ll+2,c
  2106  000A24  6E62               	movwf	vfpfcnvrt@ll+3,c
  2107  000A26  6E63               	movwf	vfpfcnvrt@ll+4,c
  2108  000A28  6E64               	movwf	vfpfcnvrt@ll+5,c
  2109  000A2A  6E65               	movwf	vfpfcnvrt@ll+6,c
  2110  000A2C  6E66               	movwf	vfpfcnvrt@ll+7,c
  2111  000A2E                     l3842:
  2112  000A2E  FFFF               	dw	65535	; assembler added errata NOP
  2113                           
  2114                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 808:             return dtoa(
      +                          fp, ll);
  2115  000A30  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2116  000A34  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2117  000A38  C05F  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2118  000A3C  C060  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2119  000A40  C061  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2120  000A44  C062  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2121  000A48  C063  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2122  000A4C  C064  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2123  000A50  C065  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2124  000A54  C066  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2125  000A58  EC59  F00F         	call	_dtoa	;wreg free
  2126  000A5C  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  2127  000A60  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2128  000A64  EFF3  F00B         	goto	l503
  2129  000A68                     l3846:
  2130  000A68  FFFF               	dw	65535	; assembler added errata NOP
  2131                           
  2132                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 814:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
  2133  000A6A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2134  000A6E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2135  000A72  CFDE F001          	movff	postinc2,strncmp@_l
  2136  000A76  CFDD F002          	movff	postdec2,strncmp@_l+1
  2137  000A7A  0E06               	movlw	low (STR_3+1)
  2138  000A7C  6E03               	movwf	strncmp@_r,c
  2139  000A7E  0E06               	movlw	high (STR_3+1)
  2140  000A80  6E04               	movwf	strncmp@_r+1,c
  2141  000A82  0E00               	movlw	0
  2142  000A84  6E06               	movwf	strncmp@n+1,c
  2143  000A86  0E02               	movlw	2
  2144  000A88  6E05               	movwf	strncmp@n,c
  2145  000A8A  EC53  F018         	call	_strncmp	;wreg free
  2146  000A8E  5001               	movf	?_strncmp,w,c
  2147  000A90  1002               	iorwf	?_strncmp+1,w,c
  2148  000A92  B4D8               	btfsc	status,2,c
  2149  000A94  D016               	goto	u3980
  2150  000A96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2151  000A9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2152  000A9E  CFDE F001          	movff	postinc2,strncmp@_l
  2153  000AA2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2154  000AA6  0E0A               	movlw	low (STR_7+1)
  2155  000AA8  6E03               	movwf	strncmp@_r,c
  2156  000AAA  0E06               	movlw	high (STR_7+1)
  2157  000AAC  6E04               	movwf	strncmp@_r+1,c
  2158  000AAE  0E00               	movlw	0
  2159  000AB0  6E06               	movwf	strncmp@n+1,c
  2160  000AB2  0E02               	movlw	2
  2161  000AB4  6E05               	movwf	strncmp@n,c
  2162  000AB6  EC53  F018         	call	_strncmp	;wreg free
  2163  000ABA  5001               	movf	?_strncmp,w,c
  2164  000ABC  1002               	iorwf	?_strncmp+1,w,c
  2165  000ABE  A4D8               	btfss	status,2,c
  2166  000AC0  D008               	goto	l3856
  2167  000AC2                     u3980:
  2168  000AC2  FFFF               	dw	65535	; assembler added errata NOP
  2169                           
  2170                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 815: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 817:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
  2171  000AC4  0E02               	movlw	2
  2172  000AC6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2173  000ACA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2174  000ACE  26DE               	addwf	postinc2,f,c
  2175  000AD0  D023               	goto	L12
  2176  000AD2                     l3856:
  2177  000AD2  FFFF               	dw	65535	; assembler added errata NOP
  2178                           
  2179                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2180  000AD4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2181  000AD8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2182  000ADC  CFDE FFF6          	movff	postinc2,tblptrl
  2183  000AE0  CFDD FFF7          	movff	postdec2,tblptrh
  2184  000AE4                     	if	0	;tblptru may be non-zero
  2185  000AE4                     	endif
  2186  000AE4                     	if	0	;tblptru may be non-zero
  2187  000AE4                     	endif
  2188  000AE4  0008               	tblrd		*
  2189  000AE6  FFFF               	dw	65535	; errata NOP
  2190  000AE8  50F5               	movf	tablat,w,c
  2191  000AEA  0A64               	xorlw	100
  2192  000AEC  B4D8               	btfsc	status,2,c
  2193  000AEE  D00E               	goto	u4000
  2194  000AF0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2195  000AF4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2196  000AF8  CFDE FFF6          	movff	postinc2,tblptrl
  2197  000AFC  CFDD FFF7          	movff	postdec2,tblptrh
  2198  000B00                     	if	0	;tblptru may be non-zero
  2199  000B00                     	endif
  2200  000B00                     	if	0	;tblptru may be non-zero
  2201  000B00                     	endif
  2202  000B00  0008               	tblrd		*
  2203  000B02  FFFF               	dw	65535	; errata NOP
  2204  000B04  50F5               	movf	tablat,w,c
  2205  000B06  0A69               	xorlw	105
  2206  000B08  A4D8               	btfss	status,2,c
  2207  000B0A  D021               	goto	l3866
  2208  000B0C                     u4000:
  2209  000B0C  FFFF               	dw	65535	; assembler added errata NOP
  2210                           
  2211                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  2212  000B0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2213  000B12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2214  000B16  2ADE               	incf	postinc2,f,c
  2215  000B18                     L12:
  2216  000B18  FFFF               	dw	65535	; assembler added errata NOP
  2217  000B1A  0E00               	movlw	0
  2218  000B1C  22DD               	addwfc	postdec2,f,c
  2219                           
  2220                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  2221  000B1E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2222  000B22  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2223  000B26  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2224  000B2A  0E02               	movlw	2
  2225  000B2C  26DE               	addwf	postinc2,f,c
  2226  000B2E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2227  000B32  0E00               	movlw	0
  2228  000B34  22DD               	addwfc	postdec2,f,c
  2229  000B36  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2230  000B3A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2231  000B3E  CFDE F05F          	movff	postinc2,vfpfcnvrt@ll
  2232  000B42  CFDD F060          	movff	postdec2,vfpfcnvrt@ll+1
  2233  000B46  0E00               	movlw	0
  2234  000B48  BE60               	btfsc	vfpfcnvrt@ll+1,7,c
  2235  000B4A  0EFF               	movlw	-1
  2236  000B4C  D769               	goto	L2
  2237  000B4E                     l3866:
  2238  000B4E  FFFF               	dw	65535	; assembler added errata NOP
  2239                           
  2240                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  2241  000B50  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2242  000B54  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2243  000B58  CFDE F001          	movff	postinc2,strncmp@_l
  2244  000B5C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2245  000B60  0E27               	movlw	low STR_21
  2246  000B62  6E03               	movwf	strncmp@_r,c
  2247  000B64  0E06               	movlw	high STR_21
  2248  000B66  6E04               	movwf	strncmp@_r+1,c
  2249  000B68  0E00               	movlw	0
  2250  000B6A  6E06               	movwf	strncmp@n+1,c
  2251  000B6C  0E02               	movlw	2
  2252  000B6E  6E05               	movwf	strncmp@n,c
  2253  000B70  EC53  F018         	call	_strncmp	;wreg free
  2254  000B74  5001               	movf	?_strncmp,w,c
  2255  000B76  1002               	iorwf	?_strncmp+1,w,c
  2256  000B78  B4D8               	btfsc	status,2,c
  2257  000B7A  D016               	goto	u4020
  2258  000B7C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2259  000B80  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2260  000B84  CFDE F001          	movff	postinc2,strncmp@_l
  2261  000B88  CFDD F002          	movff	postdec2,strncmp@_l+1
  2262  000B8C  0E2D               	movlw	low STR_25
  2263  000B8E  6E03               	movwf	strncmp@_r,c
  2264  000B90  0E06               	movlw	high STR_25
  2265  000B92  6E04               	movwf	strncmp@_r+1,c
  2266  000B94  0E00               	movlw	0
  2267  000B96  6E06               	movwf	strncmp@n+1,c
  2268  000B98  0E02               	movlw	2
  2269  000B9A  6E05               	movwf	strncmp@n,c
  2270  000B9C  EC53  F018         	call	_strncmp	;wreg free
  2271  000BA0  5001               	movf	?_strncmp,w,c
  2272  000BA2  1002               	iorwf	?_strncmp+1,w,c
  2273  000BA4  A4D8               	btfss	status,2,c
  2274  000BA6  D043               	goto	l3876
  2275  000BA8                     u4020:
  2276  000BA8  FFFF               	dw	65535	; assembler added errata NOP
  2277                           
  2278                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  2279  000BAA  0E02               	movlw	2
  2280  000BAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2281  000BB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2282  000BB4  26DE               	addwf	postinc2,f,c
  2283  000BB6  0E00               	movlw	0
  2284  000BB8  22DD               	addwfc	postdec2,f,c
  2285                           
  2286                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  2287  000BBA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2288  000BBE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2289  000BC2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2290  000BC6  0E04               	movlw	4
  2291  000BC8  26DE               	addwf	postinc2,f,c
  2292  000BCA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2293  000BCE  0E00               	movlw	0
  2294  000BD0  22DD               	addwfc	postdec2,f,c
  2295  000BD2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2296  000BD6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2297  000BDA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2298  000BDE  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2299  000BE2  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2300  000BE6  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2301  000BEA  C04B  F04F         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  2302  000BEE  C04C  F050         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  2303  000BF2  C04D  F051         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  2304  000BF6  C04E  F052         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  2305  000BFA  6A53               	clrf	(??_vfpfcnvrt+10)& (0+255),c
  2306  000BFC  BE52               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
  2307  000BFE  6853               	setf	(??_vfpfcnvrt+10)& (0+255),c
  2308  000C00  C053  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  2309  000C04  C053  F055         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  2310  000C08  C053  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  2311  000C0C  C04F  F05F         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  2312  000C10  C050  F060         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  2313  000C14  C051  F061         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  2314  000C18  C052  F062         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  2315  000C1C  C053  F063         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  2316  000C20  C054  F064         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  2317  000C24  C055  F065         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  2318  000C28  C056  F066         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  2319  000C2C  D700               	goto	l3842
  2320  000C2E                     l3876:
  2321  000C2E  FFFF               	dw	65535	; assembler added errata NOP
  2322                           
  2323                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 883:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
  2324  000C30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2325  000C34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2326  000C38  CFDE F001          	movff	postinc2,strncmp@_l
  2327  000C3C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2328  000C40  0E2A               	movlw	low STR_30
  2329  000C42  6E03               	movwf	strncmp@_r,c
  2330  000C44  0E06               	movlw	high STR_30
  2331  000C46  6E04               	movwf	strncmp@_r+1,c
  2332  000C48  0E00               	movlw	0
  2333  000C4A  6E06               	movwf	strncmp@n+1,c
  2334  000C4C  0E02               	movlw	2
  2335  000C4E  6E05               	movwf	strncmp@n,c
  2336  000C50  EC53  F018         	call	_strncmp	;wreg free
  2337  000C54  5001               	movf	?_strncmp,w,c
  2338  000C56  1002               	iorwf	?_strncmp+1,w,c
  2339  000C58  B4D8               	btfsc	status,2,c
  2340  000C5A  D016               	goto	u4040
  2341  000C5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2342  000C60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2343  000C64  CFDE F001          	movff	postinc2,strncmp@_l
  2344  000C68  CFDD F002          	movff	postdec2,strncmp@_l+1
  2345  000C6C  0E30               	movlw	low STR_34
  2346  000C6E  6E03               	movwf	strncmp@_r,c
  2347  000C70  0E06               	movlw	high STR_34
  2348  000C72  6E04               	movwf	strncmp@_r+1,c
  2349  000C74  0E00               	movlw	0
  2350  000C76  6E06               	movwf	strncmp@n+1,c
  2351  000C78  0E02               	movlw	2
  2352  000C7A  6E05               	movwf	strncmp@n,c
  2353  000C7C  EC53  F018         	call	_strncmp	;wreg free
  2354  000C80  5001               	movf	?_strncmp,w,c
  2355  000C82  1002               	iorwf	?_strncmp+1,w,c
  2356  000C84  A4D8               	btfss	status,2,c
  2357  000C86  D028               	goto	l3886
  2358  000C88                     u4040:
  2359  000C88  FFFF               	dw	65535	; assembler added errata NOP
  2360                           
  2361                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 884: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 886:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
  2362  000C8A  0E02               	movlw	2
  2363  000C8C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2364  000C90  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2365  000C94  26DE               	addwf	postinc2,f,c
  2366  000C96  0E00               	movlw	0
  2367  000C98  22DD               	addwfc	postdec2,f,c
  2368                           
  2369                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 887:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2370  000C9A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2371  000C9E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2372  000CA2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2373  000CA6  0E02               	movlw	2
  2374  000CA8  26DE               	addwf	postinc2,f,c
  2375  000CAA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2376  000CAE  0E00               	movlw	0
  2377  000CB0  22DD               	addwfc	postdec2,f,c
  2378  000CB2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2379  000CB6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2380  000CBA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2381  000CBE  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2382  000CC2  C04B  F05F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  2383  000CC6  C04C  F060         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  2384  000CCA  6A61               	clrf	vfpfcnvrt@ll+2,c
  2385  000CCC  6A62               	clrf	vfpfcnvrt@ll+3,c
  2386  000CCE  6A63               	clrf	vfpfcnvrt@ll+4,c
  2387  000CD0  6A64               	clrf	vfpfcnvrt@ll+5,c
  2388  000CD2  6A65               	clrf	vfpfcnvrt@ll+6,c
  2389  000CD4  6A66               	clrf	vfpfcnvrt@ll+7,c
  2390  000CD6  D6AB               	goto	l3842
  2391  000CD8                     l3886:
  2392  000CD8  FFFF               	dw	65535	; assembler added errata NOP
  2393                           
  2394                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 969:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  2395  000CDA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2396  000CDE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2397  000CE2  CFDE F001          	movff	postinc2,strncmp@_l
  2398  000CE6  CFDD F002          	movff	postdec2,strncmp@_l+1
  2399  000CEA  0E11               	movlw	low STR_39
  2400  000CEC  6E03               	movwf	strncmp@_r,c
  2401  000CEE  0E06               	movlw	high STR_39
  2402  000CF0  6E04               	movwf	strncmp@_r+1,c
  2403  000CF2  0E00               	movlw	0
  2404  000CF4  6E06               	movwf	strncmp@n+1,c
  2405  000CF6  0E03               	movlw	3
  2406  000CF8  6E05               	movwf	strncmp@n,c
  2407  000CFA  EC53  F018         	call	_strncmp	;wreg free
  2408  000CFE  5001               	movf	?_strncmp,w,c
  2409  000D00  1002               	iorwf	?_strncmp+1,w,c
  2410  000D02  A4D8               	btfss	status,2,c
  2411  000D04  D041               	goto	l3894
  2412                           
  2413                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 971:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
  2414  000D06  0E03               	movlw	3
  2415  000D08  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2416  000D0C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2417  000D10  26DE               	addwf	postinc2,f,c
  2418  000D12  0E00               	movlw	0
  2419  000D14  22DD               	addwfc	postdec2,f,c
  2420                           
  2421                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 972:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2422  000D16  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2423  000D1A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2424  000D1E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2425  000D22  0E02               	movlw	2
  2426  000D24  26DE               	addwf	postinc2,f,c
  2427  000D26  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2428  000D2A  0E00               	movlw	0
  2429  000D2C  22DD               	addwfc	postdec2,f,c
  2430  000D2E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2431  000D32  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2432  000D36  50DF               	movf	indf2,w,c
  2433  000D38  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2434  000D3A  504B               	movf	??_vfpfcnvrt+2,w,c
  2435  000D3C  6E6A               	movwf	vfpfcnvrt@llu,c
  2436  000D3E  6A6B               	clrf	vfpfcnvrt@llu+1,c
  2437  000D40                     L3:
  2438  000D40  FFFF               	dw	65535	; assembler added errata NOP
  2439  000D42  6A6C               	clrf	vfpfcnvrt@llu+2,c
  2440  000D44  6A6D               	clrf	vfpfcnvrt@llu+3,c
  2441  000D46                     L4:
  2442  000D46  FFFF               	dw	65535	; assembler added errata NOP
  2443  000D48  6A6E               	clrf	vfpfcnvrt@llu+4,c
  2444  000D4A  6A6F               	clrf	vfpfcnvrt@llu+5,c
  2445  000D4C  6A70               	clrf	vfpfcnvrt@llu+6,c
  2446  000D4E  6A71               	clrf	vfpfcnvrt@llu+7,c
  2447                           
  2448                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 974:             return otoa(
      +                          fp, llu);
  2449  000D50  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  2450  000D54  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  2451  000D58  C06A  F01E         	movff	vfpfcnvrt@llu,otoa@d
  2452  000D5C  C06B  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  2453  000D60  C06C  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  2454  000D64  C06D  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  2455  000D68  C06E  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  2456  000D6C  C06F  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  2457  000D70  C070  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  2458  000D74  C071  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  2459  000D78  EC9B  F012         	call	_otoa	;wreg free
  2460  000D7C  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  2461  000D80  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  2462  000D84  EFF3  F00B         	goto	l503
  2463  000D88                     l3894:
  2464  000D88  FFFF               	dw	65535	; assembler added errata NOP
  2465                           
  2466                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 980:         if (!strncmp(*fm
      +                          t, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  2467  000D8A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2468  000D8E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2469  000D92  CFDE F001          	movff	postinc2,strncmp@_l
  2470  000D96  CFDD F002          	movff	postdec2,strncmp@_l+1
  2471  000D9A  0E12               	movlw	low (STR_39+1)
  2472  000D9C  6E03               	movwf	strncmp@_r,c
  2473  000D9E  0E06               	movlw	high (STR_39+1)
  2474  000DA0  6E04               	movwf	strncmp@_r+1,c
  2475  000DA2  0E00               	movlw	0
  2476  000DA4  6E06               	movwf	strncmp@n+1,c
  2477  000DA6  0E02               	movlw	2
  2478  000DA8  6E05               	movwf	strncmp@n,c
  2479  000DAA  EC53  F018         	call	_strncmp	;wreg free
  2480  000DAE  5001               	movf	?_strncmp,w,c
  2481  000DB0  1002               	iorwf	?_strncmp+1,w,c
  2482  000DB2  B4D8               	btfsc	status,2,c
  2483  000DB4  D06B               	goto	u4090
  2484                           
  2485                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 990:         if (*fmt[0] == '
      +                          o') {
  2486                           
  2487                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 983:             llu = (unsig
      +                          ned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2488                           
  2489                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 982:             *fmt += ((si
      +                          zeof("ho")/sizeof("ho"[0]))-1);
  2490  000DB6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2491  000DBA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2492  000DBE  CFDE FFF6          	movff	postinc2,tblptrl
  2493  000DC2  CFDD FFF7          	movff	postdec2,tblptrh
  2494  000DC6                     	if	0	;tblptru may be non-zero
  2495  000DC6                     	endif
  2496  000DC6                     	if	0	;tblptru may be non-zero
  2497  000DC6                     	endif
  2498  000DC6  0008               	tblrd		*
  2499  000DC8  FFFF               	dw	65535	; errata NOP
  2500  000DCA  50F5               	movf	tablat,w,c
  2501  000DCC  0A6F               	xorlw	111
  2502  000DCE  A4D8               	btfss	status,2,c
  2503  000DD0  D006               	goto	l3910
  2504                           
  2505                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 992:             ++*fmt;
  2506  000DD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2507  000DD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2508  000DDA  2ADE               	incf	postinc2,f,c
  2509  000DDC  D05E               	goto	L17
  2510  000DDE                     l3910:
  2511  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  2512                           
  2513                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1000:         if (!strncmp(*f
      +                          mt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
  2514  000DE0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2515  000DE4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2516  000DE8  CFDE F001          	movff	postinc2,strncmp@_l
  2517  000DEC  CFDD F002          	movff	postdec2,strncmp@_l+1
  2518  000DF0  0E39               	movlw	low STR_49
  2519  000DF2  6E03               	movwf	strncmp@_r,c
  2520  000DF4  0E06               	movlw	high STR_49
  2521  000DF6  6E04               	movwf	strncmp@_r+1,c
  2522  000DF8  0E00               	movlw	0
  2523  000DFA  6E06               	movwf	strncmp@n+1,c
  2524  000DFC  0E02               	movlw	2
  2525  000DFE  6E05               	movwf	strncmp@n,c
  2526  000E00  EC53  F018         	call	_strncmp	;wreg free
  2527  000E04  5001               	movf	?_strncmp,w,c
  2528  000E06  1002               	iorwf	?_strncmp+1,w,c
  2529  000E08  A4D8               	btfss	status,2,c
  2530  000E0A  D029               	goto	l3918
  2531                           
  2532                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1002:             *fmt += ((s
      +                          izeof("lo")/sizeof("lo"[0]))-1);
  2533  000E0C  0E02               	movlw	2
  2534  000E0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2535  000E12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2536  000E16  26DE               	addwf	postinc2,f,c
  2537  000E18  0E00               	movlw	0
  2538  000E1A  22DD               	addwfc	postdec2,f,c
  2539                           
  2540                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1003:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  2541  000E1C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2542  000E20  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2543  000E24  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2544  000E28  0E04               	movlw	4
  2545  000E2A  26DE               	addwf	postinc2,f,c
  2546  000E2C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2547  000E30  0E00               	movlw	0
  2548  000E32  22DD               	addwfc	postdec2,f,c
  2549  000E34  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2550  000E38  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2551  000E3C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2552  000E40  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2553  000E44  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2554  000E48  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2555  000E4C  504B               	movf	??_vfpfcnvrt+2,w,c
  2556  000E4E  6E6A               	movwf	vfpfcnvrt@llu,c
  2557  000E50  504C               	movf	??_vfpfcnvrt+3,w,c
  2558  000E52  6E6B               	movwf	vfpfcnvrt@llu+1,c
  2559  000E54  504D               	movf	??_vfpfcnvrt+4,w,c
  2560  000E56  6E6C               	movwf	vfpfcnvrt@llu+2,c
  2561  000E58  504E               	movf	??_vfpfcnvrt+5,w,c
  2562  000E5A  6E6D               	movwf	vfpfcnvrt@llu+3,c
  2563  000E5C  D774               	goto	L4
  2564  000E5E                     l3918:
  2565  000E5E  FFFF               	dw	65535	; assembler added errata NOP
  2566                           
  2567                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1044:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  2568  000E60  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2569  000E64  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2570  000E68  CFDE F001          	movff	postinc2,strncmp@_l
  2571  000E6C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2572  000E70  0E3C               	movlw	low STR_54
  2573  000E72  6E03               	movwf	strncmp@_r,c
  2574  000E74  0E06               	movlw	high STR_54
  2575  000E76  6E04               	movwf	strncmp@_r+1,c
  2576  000E78  0E00               	movlw	0
  2577  000E7A  6E06               	movwf	strncmp@n+1,c
  2578  000E7C  0E02               	movlw	2
  2579  000E7E  6E05               	movwf	strncmp@n,c
  2580  000E80  EC53  F018         	call	_strncmp	;wreg free
  2581  000E84  5001               	movf	?_strncmp,w,c
  2582  000E86  1002               	iorwf	?_strncmp+1,w,c
  2583  000E88  A4D8               	btfss	status,2,c
  2584  000E8A  D023               	goto	l3926
  2585  000E8C                     u4090:
  2586  000E8C  FFFF               	dw	65535	; assembler added errata NOP
  2587                           
  2588                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1046:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
  2589  000E8E  0E02               	movlw	2
  2590  000E90  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2591  000E94  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2592  000E98  26DE               	addwf	postinc2,f,c
  2593  000E9A                     L17:
  2594  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  2595  000E9C  0E00               	movlw	0
  2596  000E9E  22DD               	addwfc	postdec2,f,c
  2597                           
  2598                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1047:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2599  000EA0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2600  000EA4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2601  000EA8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2602  000EAC  0E02               	movlw	2
  2603  000EAE  26DE               	addwf	postinc2,f,c
  2604  000EB0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2605  000EB4  0E00               	movlw	0
  2606  000EB6  22DD               	addwfc	postdec2,f,c
  2607  000EB8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2608  000EBC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2609  000EC0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2610  000EC4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2611  000EC8  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2612  000ECC  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2613  000ED0  D737               	goto	L3
  2614  000ED2                     l3926:
  2615  000ED2  FFFF               	dw	65535	; assembler added errata NOP
  2616                           
  2617                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1058:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  2618  000ED4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2619  000ED8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2620  000EDC  CFDE F001          	movff	postinc2,strncmp@_l
  2621  000EE0  CFDD F002          	movff	postdec2,strncmp@_l+1
  2622  000EE4  0E0D               	movlw	low STR_59
  2623  000EE6  6E03               	movwf	strncmp@_r,c
  2624  000EE8  0E06               	movlw	high STR_59
  2625  000EEA  6E04               	movwf	strncmp@_r+1,c
  2626  000EEC  0E00               	movlw	0
  2627  000EEE  6E06               	movwf	strncmp@n+1,c
  2628  000EF0  0E03               	movlw	3
  2629  000EF2  6E05               	movwf	strncmp@n,c
  2630  000EF4  EC53  F018         	call	_strncmp	;wreg free
  2631  000EF8  5001               	movf	?_strncmp,w,c
  2632  000EFA  1002               	iorwf	?_strncmp+1,w,c
  2633  000EFC  A4D8               	btfss	status,2,c
  2634  000EFE  D028               	goto	l3936
  2635                           
  2636                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1060:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
  2637  000F00  0E03               	movlw	3
  2638  000F02  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2639  000F06  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2640  000F0A  26DE               	addwf	postinc2,f,c
  2641  000F0C  0E00               	movlw	0
  2642  000F0E  22DD               	addwfc	postdec2,f,c
  2643                           
  2644                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1061:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2645  000F10  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2646  000F14  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2647  000F18  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2648  000F1C  0E02               	movlw	2
  2649  000F1E  26DE               	addwf	postinc2,f,c
  2650  000F20  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2651  000F24  0E00               	movlw	0
  2652  000F26  22DD               	addwfc	postdec2,f,c
  2653  000F28  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2654  000F2C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2655  000F30  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2656  000F34  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2657                           
  2658                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1062:             *(char *)vp
      +                           = (char)nout;
  2659  000F38  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2660  000F3C  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2661  000F40  C08F  FFDF         	movff	_nout,indf2
  2662  000F44                     l3932:
  2663  000F44  FFFF               	dw	65535	; assembler added errata NOP
  2664                           
  2665                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1063:             return 0;
  2666  000F46  0E00               	movlw	0
  2667  000F48  6E44               	movwf	?_vfpfcnvrt+1,c
  2668  000F4A  0E00               	movlw	0
  2669  000F4C  EFCA  F00B         	goto	L5
  2670  000F50                     l3936:
  2671  000F50  FFFF               	dw	65535	; assembler added errata NOP
  2672                           
  2673                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1068:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  2674  000F52  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2675  000F56  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2676  000F5A  CFDE F001          	movff	postinc2,strncmp@_l
  2677  000F5E  CFDD F002          	movff	postdec2,strncmp@_l+1
  2678  000F62  0E0E               	movlw	low (STR_59+1)
  2679  000F64  6E03               	movwf	strncmp@_r,c
  2680  000F66  0E06               	movlw	high (STR_59+1)
  2681  000F68  6E04               	movwf	strncmp@_r+1,c
  2682  000F6A  0E00               	movlw	0
  2683  000F6C  6E06               	movwf	strncmp@n+1,c
  2684  000F6E  0E02               	movlw	2
  2685  000F70  6E05               	movwf	strncmp@n,c
  2686  000F72  EC53  F018         	call	_strncmp	;wreg free
  2687  000F76  5001               	movf	?_strncmp,w,c
  2688  000F78  1002               	iorwf	?_strncmp+1,w,c
  2689  000F7A  A4D8               	btfss	status,2,c
  2690  000F7C  D00B               	goto	l3946
  2691  000F7E  D07F               	goto	u4140
  2692  000F80                     l3940:
  2693  000F80  FFFF               	dw	65535	; assembler added errata NOP
  2694                           
  2695                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1072:             *(short *)v
      +                          p = (short)nout;
  2696  000F82  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2697  000F86  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2698  000F8A  C08F  FFDE         	movff	_nout,postinc2
  2699  000F8E  C090  FFDD         	movff	_nout+1,postdec2
  2700  000F92  D7D8               	goto	l3932
  2701  000F94                     l3946:
  2702  000F94  FFFF               	dw	65535	; assembler added errata NOP
  2703                           
  2704                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
  2705  000F96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2706  000F9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2707  000F9E  CFDE FFF6          	movff	postinc2,tblptrl
  2708  000FA2  CFDD FFF7          	movff	postdec2,tblptrh
  2709  000FA6                     	if	0	;tblptru may be non-zero
  2710  000FA6                     	endif
  2711  000FA6                     	if	0	;tblptru may be non-zero
  2712  000FA6                     	endif
  2713  000FA6  0008               	tblrd		*
  2714  000FA8  FFFF               	dw	65535	; errata NOP
  2715  000FAA  50F5               	movf	tablat,w,c
  2716  000FAC  0A6E               	xorlw	110
  2717  000FAE  A4D8               	btfss	status,2,c
  2718  000FB0  D006               	goto	l3956
  2719                           
  2720                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
  2721  000FB2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2722  000FB6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2723  000FBA  2ADE               	incf	postinc2,f,c
  2724  000FBC  D067               	goto	L14
  2725  000FBE                     l3956:
  2726  000FBE  FFFF               	dw	65535	; assembler added errata NOP
  2727                           
  2728                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1085:         if (!strncmp(*f
      +                          mt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
  2729  000FC0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2730  000FC4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2731  000FC8  CFDE F001          	movff	postinc2,strncmp@_l
  2732  000FCC  CFDD F002          	movff	postdec2,strncmp@_l+1
  2733  000FD0  0E33               	movlw	low STR_69
  2734  000FD2  6E03               	movwf	strncmp@_r,c
  2735  000FD4  0E06               	movlw	high STR_69
  2736  000FD6  6E04               	movwf	strncmp@_r+1,c
  2737  000FD8  0E00               	movlw	0
  2738  000FDA  6E06               	movwf	strncmp@n+1,c
  2739  000FDC  0E02               	movlw	2
  2740  000FDE  6E05               	movwf	strncmp@n,c
  2741  000FE0  EC53  F018         	call	_strncmp	;wreg free
  2742  000FE4  5001               	movf	?_strncmp,w,c
  2743  000FE6  1002               	iorwf	?_strncmp+1,w,c
  2744  000FE8  A4D8               	btfss	status,2,c
  2745  000FEA  D032               	goto	l3966
  2746                           
  2747                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1087:             *fmt += ((s
      +                          izeof("ln")/sizeof("ln"[0]))-1);
  2748  000FEC  0E02               	movlw	2
  2749  000FEE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2750  000FF2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2751  000FF6  26DE               	addwf	postinc2,f,c
  2752  000FF8  0E00               	movlw	0
  2753  000FFA  22DD               	addwfc	postdec2,f,c
  2754                           
  2755                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1088:             vp = (void 
      +                          *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
  2756  000FFC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2757  001000  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2758  001004  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2759  001008  0E02               	movlw	2
  2760  00100A  26DE               	addwf	postinc2,f,c
  2761  00100C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2762  001010  0E00               	movlw	0
  2763  001012  22DD               	addwfc	postdec2,f,c
  2764  001014  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2765  001018  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2766  00101C  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2767  001020  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2768                           
  2769                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1089:             *(long *)vp
      +                           = (long)nout;
  2770  001024  C08F  F049         	movff	_nout,??_vfpfcnvrt
  2771  001028  C090  F04A         	movff	_nout+1,??_vfpfcnvrt+1
  2772  00102C  0E00               	movlw	0
  2773  00102E  BE4A               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,c
  2774  001030  0EFF               	movlw	255
  2775  001032  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2776  001034  6E4C               	movwf	(??_vfpfcnvrt+3)& (0+255),c
  2777  001036  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2778  00103A  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2779  00103E  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  2780  001042  C04A  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  2781  001046  C04B  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  2782  00104A  C04C  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  2783  00104E  D77A               	goto	l3932
  2784  001050                     l3966:
  2785  001050  FFFF               	dw	65535	; assembler added errata NOP
  2786                           
  2787                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1125:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  2788  001052  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2789  001056  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2790  00105A  CFDE F001          	movff	postinc2,strncmp@_l
  2791  00105E  CFDD F002          	movff	postdec2,strncmp@_l+1
  2792  001062  0E36               	movlw	low STR_74
  2793  001064  6E03               	movwf	strncmp@_r,c
  2794  001066  0E06               	movlw	high STR_74
  2795  001068  6E04               	movwf	strncmp@_r+1,c
  2796  00106A  0E00               	movlw	0
  2797  00106C  6E06               	movwf	strncmp@n+1,c
  2798  00106E  0E02               	movlw	2
  2799  001070  6E05               	movwf	strncmp@n,c
  2800  001072  EC53  F018         	call	_strncmp	;wreg free
  2801  001076  5001               	movf	?_strncmp,w,c
  2802  001078  1002               	iorwf	?_strncmp+1,w,c
  2803  00107A  A4D8               	btfss	status,2,c
  2804  00107C  D01F               	goto	l3976
  2805  00107E                     u4140:
  2806  00107E  FFFF               	dw	65535	; assembler added errata NOP
  2807                           
  2808                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1127:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
  2809  001080  0E02               	movlw	2
  2810  001082  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2811  001086  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2812  00108A  26DE               	addwf	postinc2,f,c
  2813  00108C                     L14:
  2814  00108C  FFFF               	dw	65535	; assembler added errata NOP
  2815  00108E  0E00               	movlw	0
  2816  001090  22DD               	addwfc	postdec2,f,c
  2817                           
  2818                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1128:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  2819  001092  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2820  001096  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2821  00109A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2822  00109E  0E02               	movlw	2
  2823  0010A0  26DE               	addwf	postinc2,f,c
  2824  0010A2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2825  0010A6  0E00               	movlw	0
  2826  0010A8  22DD               	addwfc	postdec2,f,c
  2827  0010AA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2828  0010AE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2829  0010B2  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2830  0010B6  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2831  0010BA  D762               	goto	l3940
  2832  0010BC                     l3976:
  2833  0010BC  FFFF               	dw	65535	; assembler added errata NOP
  2834                           
  2835                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1138:         if (*fmt[0] == 
      +                          'p') {
  2836  0010BE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2837  0010C2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2838  0010C6  CFDE FFF6          	movff	postinc2,tblptrl
  2839  0010CA  CFDD FFF7          	movff	postdec2,tblptrh
  2840  0010CE                     	if	0	;tblptru may be non-zero
  2841  0010CE                     	endif
  2842  0010CE                     	if	0	;tblptru may be non-zero
  2843  0010CE                     	endif
  2844  0010CE  0008               	tblrd		*
  2845  0010D0  FFFF               	dw	65535	; errata NOP
  2846  0010D2  50F5               	movf	tablat,w,c
  2847  0010D4  0A70               	xorlw	112
  2848  0010D6  A4D8               	btfss	status,2,c
  2849  0010D8  D03E               	goto	l3984
  2850                           
  2851                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1140:             ++*fmt;
  2852  0010DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2853  0010DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2854  0010E2  2ADE               	incf	postinc2,f,c
  2855  0010E4  0E00               	movlw	0
  2856  0010E6  22DD               	addwfc	postdec2,f,c
  2857                           
  2858                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1141:             llu = (unsi
      +                          gned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  2859  0010E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2860  0010EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2861  0010F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2862  0010F4  0E02               	movlw	2
  2863  0010F6  26DE               	addwf	postinc2,f,c
  2864  0010F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2865  0010FC  0E00               	movlw	0
  2866  0010FE  22DD               	addwfc	postdec2,f,c
  2867  001100  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2868  001104  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2869  001108  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2870  00110C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2871  001110  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2872  001114  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2873  001118  6A6C               	clrf	vfpfcnvrt@llu+2,c
  2874  00111A  6A6D               	clrf	vfpfcnvrt@llu+3,c
  2875  00111C  6A6E               	clrf	vfpfcnvrt@llu+4,c
  2876  00111E  6A6F               	clrf	vfpfcnvrt@llu+5,c
  2877  001120  6A70               	clrf	vfpfcnvrt@llu+6,c
  2878  001122  6A71               	clrf	vfpfcnvrt@llu+7,c
  2879                           
  2880                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1143:             return xtoa
      +                          (fp, llu, 'x');
  2881  001124  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  2882  001128  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2883  00112C  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  2884  001130  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2885  001134  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2886  001138  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2887  00113C  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2888  001140  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2889  001144  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2890  001148  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2891  00114C  0E78               	movlw	120
  2892  00114E  6E26               	movwf	xtoa@x,c
  2893  001150  EC8E  F010         	call	_xtoa	;wreg free
  2894  001154  D1B4               	goto	L7
  2895  001156                     l3984:
  2896  001156  FFFF               	dw	65535	; assembler added errata NOP
  2897                           
  2898                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  2899  001158  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2900  00115C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2901  001160  CFDE FFF6          	movff	postinc2,tblptrl
  2902  001164  CFDD FFF7          	movff	postdec2,tblptrh
  2903  001168                     	if	0	;tblptru may be non-zero
  2904  001168                     	endif
  2905  001168                     	if	0	;tblptru may be non-zero
  2906  001168                     	endif
  2907  001168  0008               	tblrd		*
  2908  00116A  FFFF               	dw	65535	; errata NOP
  2909  00116C  50F5               	movf	tablat,w,c
  2910  00116E  0A73               	xorlw	115
  2911  001170  A4D8               	btfss	status,2,c
  2912  001172  D02A               	goto	l3992
  2913                           
  2914                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  2915  001174  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2916  001178  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2917  00117C  2ADE               	incf	postinc2,f,c
  2918  00117E  0E00               	movlw	0
  2919  001180  22DD               	addwfc	postdec2,f,c
  2920                           
  2921                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  2922  001182  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2923  001186  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2924  00118A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2925  00118E  0E02               	movlw	2
  2926  001190  26DE               	addwf	postinc2,f,c
  2927  001192  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2928  001196  0E00               	movlw	0
  2929  001198  22DD               	addwfc	postdec2,f,c
  2930  00119A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2931  00119E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2932  0011A2  CFDE F057          	movff	postinc2,vfpfcnvrt@cp
  2933  0011A6  CFDD F058          	movff	postdec2,vfpfcnvrt@cp+1
  2934                           
  2935                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  2936  0011AA  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  2937  0011AE  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  2938  0011B2  C057  F00C         	movff	vfpfcnvrt@cp,stoa@s
  2939  0011B6  C058  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  2940  0011BA  EC77  F015         	call	_stoa	;wreg free
  2941  0011BE  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  2942  0011C2  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  2943  0011C6  D30F               	goto	l503
  2944  0011C8                     l3992:
  2945  0011C8  FFFF               	dw	65535	; assembler added errata NOP
  2946                           
  2947                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1161:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  2948  0011CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2949  0011CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2950  0011D2  CFDE F001          	movff	postinc2,strncmp@_l
  2951  0011D6  CFDD F002          	movff	postdec2,strncmp@_l+1
  2952  0011DA  0E15               	movlw	low STR_79
  2953  0011DC  6E03               	movwf	strncmp@_r,c
  2954  0011DE  0E06               	movlw	high STR_79
  2955  0011E0  6E04               	movwf	strncmp@_r+1,c
  2956  0011E2  0E00               	movlw	0
  2957  0011E4  6E06               	movwf	strncmp@n+1,c
  2958  0011E6  0E03               	movlw	3
  2959  0011E8  6E05               	movwf	strncmp@n,c
  2960  0011EA  EC53  F018         	call	_strncmp	;wreg free
  2961  0011EE  5001               	movf	?_strncmp,w,c
  2962  0011F0  1002               	iorwf	?_strncmp+1,w,c
  2963  0011F2  A4D8               	btfss	status,2,c
  2964  0011F4  D040               	goto	l4000
  2965                           
  2966                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1163:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
  2967  0011F6  0E03               	movlw	3
  2968  0011F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2969  0011FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2970  001200  26DE               	addwf	postinc2,f,c
  2971  001202  0E00               	movlw	0
  2972  001204  22DD               	addwfc	postdec2,f,c
  2973                           
  2974                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1164:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2975  001206  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2976  00120A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2977  00120E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2978  001212  0E02               	movlw	2
  2979  001214  26DE               	addwf	postinc2,f,c
  2980  001216  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2981  00121A  0E00               	movlw	0
  2982  00121C  22DD               	addwfc	postdec2,f,c
  2983  00121E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2984  001222  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2985  001226  50DF               	movf	indf2,w,c
  2986  001228  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2987  00122A  504B               	movf	??_vfpfcnvrt+2,w,c
  2988  00122C  6E6A               	movwf	vfpfcnvrt@llu,c
  2989  00122E  6A6B               	clrf	vfpfcnvrt@llu+1,c
  2990  001230                     L8:
  2991  001230  FFFF               	dw	65535	; assembler added errata NOP
  2992  001232  6A6C               	clrf	vfpfcnvrt@llu+2,c
  2993  001234  6A6D               	clrf	vfpfcnvrt@llu+3,c
  2994  001236                     L9:
  2995  001236  FFFF               	dw	65535	; assembler added errata NOP
  2996  001238  6A6E               	clrf	vfpfcnvrt@llu+4,c
  2997  00123A  6A6F               	clrf	vfpfcnvrt@llu+5,c
  2998  00123C  6A70               	clrf	vfpfcnvrt@llu+6,c
  2999  00123E  6A71               	clrf	vfpfcnvrt@llu+7,c
  3000                           
  3001                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1166:             return utoa
      +                          (fp, llu);
  3002  001240  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  3003  001244  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3004  001248  C06A  F01E         	movff	vfpfcnvrt@llu,utoa@d
  3005  00124C  C06B  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3006  001250  C06C  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3007  001254  C06D  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3008  001258  C06E  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3009  00125C  C06F  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3010  001260  C070  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3011  001264  C071  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3012  001268  ECBA  F011         	call	_utoa	;wreg free
  3013  00126C  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  3014  001270  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  3015  001274  D2B8               	goto	l503
  3016  001276                     l4000:
  3017  001276  FFFF               	dw	65535	; assembler added errata NOP
  3018                           
  3019                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1172:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  3020  001278  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3021  00127C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3022  001280  CFDE F001          	movff	postinc2,strncmp@_l
  3023  001284  CFDD F002          	movff	postdec2,strncmp@_l+1
  3024  001288  0E16               	movlw	low (STR_79+1)
  3025  00128A  6E03               	movwf	strncmp@_r,c
  3026  00128C  0E06               	movlw	high (STR_79+1)
  3027  00128E  6E04               	movwf	strncmp@_r+1,c
  3028  001290  0E00               	movlw	0
  3029  001292  6E06               	movwf	strncmp@n+1,c
  3030  001294  0E02               	movlw	2
  3031  001296  6E05               	movwf	strncmp@n,c
  3032  001298  EC53  F018         	call	_strncmp	;wreg free
  3033  00129C  5001               	movf	?_strncmp,w,c
  3034  00129E  1002               	iorwf	?_strncmp+1,w,c
  3035  0012A0  B4D8               	btfsc	status,2,c
  3036  0012A2  D06B               	goto	u4210
  3037                           
  3038                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  3039                           
  3040                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1175:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3041                           
  3042                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1174:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
  3043  0012A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3044  0012A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3045  0012AC  CFDE FFF6          	movff	postinc2,tblptrl
  3046  0012B0  CFDD FFF7          	movff	postdec2,tblptrh
  3047  0012B4                     	if	0	;tblptru may be non-zero
  3048  0012B4                     	endif
  3049  0012B4                     	if	0	;tblptru may be non-zero
  3050  0012B4                     	endif
  3051  0012B4  0008               	tblrd		*
  3052  0012B6  FFFF               	dw	65535	; errata NOP
  3053  0012B8  50F5               	movf	tablat,w,c
  3054  0012BA  0A75               	xorlw	117
  3055  0012BC  A4D8               	btfss	status,2,c
  3056  0012BE  D006               	goto	l4016
  3057                           
  3058                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  3059  0012C0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3060  0012C4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3061  0012C8  2ADE               	incf	postinc2,f,c
  3062  0012CA  D05E               	goto	L18
  3063  0012CC                     l4016:
  3064  0012CC  FFFF               	dw	65535	; assembler added errata NOP
  3065                           
  3066                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  3067  0012CE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3068  0012D2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3069  0012D6  CFDE F001          	movff	postinc2,strncmp@_l
  3070  0012DA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3071  0012DE  0E1E               	movlw	low (STR_1+1)
  3072  0012E0  6E03               	movwf	strncmp@_r,c
  3073  0012E2  0E06               	movlw	high (STR_1+1)
  3074  0012E4  6E04               	movwf	strncmp@_r+1,c
  3075  0012E6  0E00               	movlw	0
  3076  0012E8  6E06               	movwf	strncmp@n+1,c
  3077  0012EA  0E02               	movlw	2
  3078  0012EC  6E05               	movwf	strncmp@n,c
  3079  0012EE  EC53  F018         	call	_strncmp	;wreg free
  3080  0012F2  5001               	movf	?_strncmp,w,c
  3081  0012F4  1002               	iorwf	?_strncmp+1,w,c
  3082  0012F6  A4D8               	btfss	status,2,c
  3083  0012F8  D029               	goto	l4024
  3084                           
  3085                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  3086  0012FA  0E02               	movlw	2
  3087  0012FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3088  001300  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3089  001304  26DE               	addwf	postinc2,f,c
  3090  001306  0E00               	movlw	0
  3091  001308  22DD               	addwfc	postdec2,f,c
  3092                           
  3093                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3094  00130A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3095  00130E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3096  001312  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3097  001316  0E04               	movlw	4
  3098  001318  26DE               	addwf	postinc2,f,c
  3099  00131A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3100  00131E  0E00               	movlw	0
  3101  001320  22DD               	addwfc	postdec2,f,c
  3102  001322  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3103  001326  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3104  00132A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3105  00132E  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3106  001332  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3107  001336  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3108  00133A  504B               	movf	??_vfpfcnvrt+2,w,c
  3109  00133C  6E6A               	movwf	vfpfcnvrt@llu,c
  3110  00133E  504C               	movf	??_vfpfcnvrt+3,w,c
  3111  001340  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3112  001342  504D               	movf	??_vfpfcnvrt+4,w,c
  3113  001344  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3114  001346  504E               	movf	??_vfpfcnvrt+5,w,c
  3115  001348  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3116  00134A  D775               	goto	L9
  3117  00134C                     l4024:
  3118  00134C  FFFF               	dw	65535	; assembler added errata NOP
  3119                           
  3120                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1236:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  3121  00134E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3122  001352  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3123  001356  CFDE F001          	movff	postinc2,strncmp@_l
  3124  00135A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3125  00135E  0E3F               	movlw	low STR_94
  3126  001360  6E03               	movwf	strncmp@_r,c
  3127  001362  0E06               	movlw	high STR_94
  3128  001364  6E04               	movwf	strncmp@_r+1,c
  3129  001366  0E00               	movlw	0
  3130  001368  6E06               	movwf	strncmp@n+1,c
  3131  00136A  0E02               	movlw	2
  3132  00136C  6E05               	movwf	strncmp@n,c
  3133  00136E  EC53  F018         	call	_strncmp	;wreg free
  3134  001372  5001               	movf	?_strncmp,w,c
  3135  001374  1002               	iorwf	?_strncmp+1,w,c
  3136  001376  A4D8               	btfss	status,2,c
  3137  001378  D023               	goto	l4032
  3138  00137A                     u4210:
  3139  00137A  FFFF               	dw	65535	; assembler added errata NOP
  3140                           
  3141                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1238:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
  3142  00137C  0E02               	movlw	2
  3143  00137E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3144  001382  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3145  001386  26DE               	addwf	postinc2,f,c
  3146  001388                     L18:
  3147  001388  FFFF               	dw	65535	; assembler added errata NOP
  3148  00138A  0E00               	movlw	0
  3149  00138C  22DD               	addwfc	postdec2,f,c
  3150                           
  3151                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1239:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3152  00138E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3153  001392  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3154  001396  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3155  00139A  0E02               	movlw	2
  3156  00139C  26DE               	addwf	postinc2,f,c
  3157  00139E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3158  0013A2  0E00               	movlw	0
  3159  0013A4  22DD               	addwfc	postdec2,f,c
  3160  0013A6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3161  0013AA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3162  0013AE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3163  0013B2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3164  0013B6  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3165  0013BA  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3166  0013BE  D738               	goto	L8
  3167  0013C0                     l4032:
  3168  0013C0  FFFF               	dw	65535	; assembler added errata NOP
  3169                           
  3170                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1249:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
  3171  0013C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3172  0013C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3173  0013CA  CFDE F001          	movff	postinc2,strncmp@_l
  3174  0013CE  CFDD F002          	movff	postdec2,strncmp@_l+1
  3175  0013D2  0E19               	movlw	low STR_99
  3176  0013D4  6E03               	movwf	strncmp@_r,c
  3177  0013D6  0E06               	movlw	high STR_99
  3178  0013D8  6E04               	movwf	strncmp@_r+1,c
  3179  0013DA  0E00               	movlw	0
  3180  0013DC  6E06               	movwf	strncmp@n+1,c
  3181  0013DE  0E03               	movlw	3
  3182  0013E0  6E05               	movwf	strncmp@n,c
  3183  0013E2  EC53  F018         	call	_strncmp	;wreg free
  3184  0013E6  5001               	movf	?_strncmp,w,c
  3185  0013E8  1002               	iorwf	?_strncmp+1,w,c
  3186  0013EA  B4D8               	btfsc	status,2,c
  3187  0013EC  D016               	goto	u4230
  3188  0013EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3189  0013F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3190  0013F6  CFDE F001          	movff	postinc2,strncmp@_l
  3191  0013FA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3192  0013FE  0E01               	movlw	low STR_103
  3193  001400  6E03               	movwf	strncmp@_r,c
  3194  001402  0E06               	movlw	high STR_103
  3195  001404  6E04               	movwf	strncmp@_r+1,c
  3196  001406  0E00               	movlw	0
  3197  001408  6E06               	movwf	strncmp@n+1,c
  3198  00140A  0E03               	movlw	3
  3199  00140C  6E05               	movwf	strncmp@n,c
  3200  00140E  EC53  F018         	call	_strncmp	;wreg free
  3201  001412  5001               	movf	?_strncmp,w,c
  3202  001414  1002               	iorwf	?_strncmp+1,w,c
  3203  001416  A4D8               	btfss	status,2,c
  3204  001418  D058               	goto	l4046
  3205  00141A                     u4230:
  3206  00141A  FFFF               	dw	65535	; assembler added errata NOP
  3207                           
  3208                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1250: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1252:             c = (*fmt)[2];
  3209  00141C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3210  001420  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3211  001424  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3212  001428  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3213  00142C  0E02               	movlw	2
  3214  00142E  2649               	addwf	??_vfpfcnvrt,f,c
  3215  001430  0E00               	movlw	0
  3216  001432  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3217  001434  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3218  001438  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3219  00143C                     	if	0	;tblptru may be non-zero
  3220  00143C                     	endif
  3221  00143C                     	if	0	;tblptru may be non-zero
  3222  00143C                     	endif
  3223  00143C  0008               	tblrd		*
  3224  00143E  FFFF               	dw	65535	; errata NOP
  3225  001440  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3226                           
  3227                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1253:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
  3228  001444  0E03               	movlw	3
  3229  001446  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3230  00144A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3231  00144E  26DE               	addwf	postinc2,f,c
  3232  001450  0E00               	movlw	0
  3233  001452  22DD               	addwfc	postdec2,f,c
  3234                           
  3235                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1254:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3236  001454  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3237  001458  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3238  00145C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3239  001460  0E02               	movlw	2
  3240  001462  26DE               	addwf	postinc2,f,c
  3241  001464  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3242  001468  0E00               	movlw	0
  3243  00146A  22DD               	addwfc	postdec2,f,c
  3244  00146C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3245  001470  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3246  001474  50DF               	movf	indf2,w,c
  3247  001476  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3248  001478  504B               	movf	??_vfpfcnvrt+2,w,c
  3249  00147A  6E6A               	movwf	vfpfcnvrt@llu,c
  3250  00147C  6A6B               	clrf	vfpfcnvrt@llu+1,c
  3251  00147E                     L10:
  3252  00147E  FFFF               	dw	65535	; assembler added errata NOP
  3253  001480  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3254  001482  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3255  001484                     L11:
  3256  001484  FFFF               	dw	65535	; assembler added errata NOP
  3257  001486  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3258  001488  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3259  00148A  6A70               	clrf	vfpfcnvrt@llu+6,c
  3260  00148C  6A71               	clrf	vfpfcnvrt@llu+7,c
  3261                           
  3262                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1256:             return xtoa
      +                          (fp, llu, c);
  3263  00148E  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3264  001492  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3265  001496  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3266  00149A  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3267  00149E  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3268  0014A2  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3269  0014A6  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3270  0014AA  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3271  0014AE  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3272  0014B2  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3273  0014B6  C069  F026         	movff	vfpfcnvrt@c,xtoa@x
  3274  0014BA  EC8E  F010         	call	_xtoa	;wreg free
  3275  0014BE                     L7:
  3276  0014BE  FFFF               	dw	65535	; assembler added errata NOP
  3277  0014C0  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3278  0014C4  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3279  0014C8  D18E               	goto	l503
  3280  0014CA                     l4046:
  3281  0014CA  FFFF               	dw	65535	; assembler added errata NOP
  3282                           
  3283                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1262:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
  3284  0014CC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3285  0014D0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3286  0014D4  CFDE F001          	movff	postinc2,strncmp@_l
  3287  0014D8  CFDD F002          	movff	postdec2,strncmp@_l+1
  3288  0014DC  0E1A               	movlw	low (STR_99+1)
  3289  0014DE  6E03               	movwf	strncmp@_r,c
  3290  0014E0  0E06               	movlw	high (STR_99+1)
  3291  0014E2  6E04               	movwf	strncmp@_r+1,c
  3292  0014E4  0E00               	movlw	0
  3293  0014E6  6E06               	movwf	strncmp@n+1,c
  3294  0014E8  0E02               	movlw	2
  3295  0014EA  6E05               	movwf	strncmp@n,c
  3296  0014EC  EC53  F018         	call	_strncmp	;wreg free
  3297  0014F0  5001               	movf	?_strncmp,w,c
  3298  0014F2  1002               	iorwf	?_strncmp+1,w,c
  3299  0014F4  B4D8               	btfsc	status,2,c
  3300  0014F6  D016               	goto	u4250
  3301  0014F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3302  0014FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3303  001500  CFDE F001          	movff	postinc2,strncmp@_l
  3304  001504  CFDD F002          	movff	postdec2,strncmp@_l+1
  3305  001508  0E02               	movlw	low (STR_103+1)
  3306  00150A  6E03               	movwf	strncmp@_r,c
  3307  00150C  0E06               	movlw	high (STR_103+1)
  3308  00150E  6E04               	movwf	strncmp@_r+1,c
  3309  001510  0E00               	movlw	0
  3310  001512  6E06               	movwf	strncmp@n+1,c
  3311  001514  0E02               	movlw	2
  3312  001516  6E05               	movwf	strncmp@n,c
  3313  001518  EC53  F018         	call	_strncmp	;wreg free
  3314  00151C  5001               	movf	?_strncmp,w,c
  3315  00151E  1002               	iorwf	?_strncmp+1,w,c
  3316  001520  A4D8               	btfss	status,2,c
  3317  001522  D014               	goto	l4060
  3318  001524                     u4250:
  3319  001524  FFFF               	dw	65535	; assembler added errata NOP
  3320                           
  3321                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1263: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1265:             c = (*fmt)[1];
  3322  001526  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3323  00152A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3324  00152E  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3325  001532  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3326  001536  0E01               	movlw	1
  3327  001538  2649               	addwf	??_vfpfcnvrt,f,c
  3328  00153A  0E00               	movlw	0
  3329  00153C  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3330  00153E  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3331  001542  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3332  001546                     	if	0	;tblptru may be non-zero
  3333  001546                     	endif
  3334  001546                     	if	0	;tblptru may be non-zero
  3335  001546                     	endif
  3336  001546  0008               	tblrd		*
  3337  001548  FFFF               	dw	65535	; errata NOP
  3338  00154A  D0DB               	goto	L26
  3339  00154C                     l4060:
  3340  00154C  FFFF               	dw	65535	; assembler added errata NOP
  3341                           
  3342                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  3343  00154E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3344  001552  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3345  001556  CFDE FFF6          	movff	postinc2,tblptrl
  3346  00155A  CFDD FFF7          	movff	postdec2,tblptrh
  3347  00155E                     	if	0	;tblptru may be non-zero
  3348  00155E                     	endif
  3349  00155E                     	if	0	;tblptru may be non-zero
  3350  00155E                     	endif
  3351  00155E  0008               	tblrd		*
  3352  001560  FFFF               	dw	65535	; errata NOP
  3353  001562  50F5               	movf	tablat,w,c
  3354  001564  0A78               	xorlw	120
  3355  001566  B4D8               	btfsc	status,2,c
  3356  001568  D00E               	goto	u4270
  3357  00156A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3358  00156E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3359  001572  CFDE FFF6          	movff	postinc2,tblptrl
  3360  001576  CFDD FFF7          	movff	postdec2,tblptrh
  3361  00157A                     	if	0	;tblptru may be non-zero
  3362  00157A                     	endif
  3363  00157A                     	if	0	;tblptru may be non-zero
  3364  00157A                     	endif
  3365  00157A  0008               	tblrd		*
  3366  00157C  FFFF               	dw	65535	; errata NOP
  3367  00157E  50F5               	movf	tablat,w,c
  3368  001580  0A58               	xorlw	88
  3369  001582  A4D8               	btfss	status,2,c
  3370  001584  D013               	goto	l4074
  3371  001586                     u4270:
  3372  001586  FFFF               	dw	65535	; assembler added errata NOP
  3373                           
  3374                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  3375  001588  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3376  00158C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3377  001590  CFDE FFF6          	movff	postinc2,tblptrl
  3378  001594  CFDD FFF7          	movff	postdec2,tblptrh
  3379  001598                     	if	0	;tblptru may be non-zero
  3380  001598                     	endif
  3381  001598                     	if	0	;tblptru may be non-zero
  3382  001598                     	endif
  3383  001598  0008               	tblrd		*
  3384  00159A  FFFF               	dw	65535	; errata NOP
  3385  00159C  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3386                           
  3387                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  3388  0015A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3389  0015A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3390  0015A8  2ADE               	incf	postinc2,f,c
  3391  0015AA  D0B4               	goto	L25
  3392  0015AC                     l4074:
  3393  0015AC  FFFF               	dw	65535	; assembler added errata NOP
  3394                           
  3395                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  3396  0015AE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3397  0015B2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3398  0015B6  CFDE F001          	movff	postinc2,strncmp@_l
  3399  0015BA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3400  0015BE  0E42               	movlw	low STR_117
  3401  0015C0  6E03               	movwf	strncmp@_r,c
  3402  0015C2  0E06               	movlw	high STR_117
  3403  0015C4  6E04               	movwf	strncmp@_r+1,c
  3404  0015C6  0E00               	movlw	0
  3405  0015C8  6E06               	movwf	strncmp@n+1,c
  3406  0015CA  0E02               	movlw	2
  3407  0015CC  6E05               	movwf	strncmp@n,c
  3408  0015CE  EC53  F018         	call	_strncmp	;wreg free
  3409  0015D2  5001               	movf	?_strncmp,w,c
  3410  0015D4  1002               	iorwf	?_strncmp+1,w,c
  3411  0015D6  B4D8               	btfsc	status,2,c
  3412  0015D8  D016               	goto	u4290
  3413  0015DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3414  0015DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3415  0015E2  CFDE F001          	movff	postinc2,strncmp@_l
  3416  0015E6  CFDD F002          	movff	postdec2,strncmp@_l+1
  3417  0015EA  0E21               	movlw	low STR_121
  3418  0015EC  6E03               	movwf	strncmp@_r,c
  3419  0015EE  0E06               	movlw	high STR_121
  3420  0015F0  6E04               	movwf	strncmp@_r+1,c
  3421  0015F2  0E00               	movlw	0
  3422  0015F4  6E06               	movwf	strncmp@n+1,c
  3423  0015F6  0E02               	movlw	2
  3424  0015F8  6E05               	movwf	strncmp@n,c
  3425  0015FA  EC53  F018         	call	_strncmp	;wreg free
  3426  0015FE  5001               	movf	?_strncmp,w,c
  3427  001600  1002               	iorwf	?_strncmp+1,w,c
  3428  001602  A4D8               	btfss	status,2,c
  3429  001604  D03E               	goto	l4088
  3430  001606                     u4290:
  3431  001606  FFFF               	dw	65535	; assembler added errata NOP
  3432                           
  3433                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  3434  001608  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3435  00160C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3436  001610  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3437  001614  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3438  001618  0E01               	movlw	1
  3439  00161A  2649               	addwf	??_vfpfcnvrt,f,c
  3440  00161C  0E00               	movlw	0
  3441  00161E  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3442  001620  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3443  001624  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3444  001628                     	if	0	;tblptru may be non-zero
  3445  001628                     	endif
  3446  001628                     	if	0	;tblptru may be non-zero
  3447  001628                     	endif
  3448  001628  0008               	tblrd		*
  3449  00162A  FFFF               	dw	65535	; errata NOP
  3450  00162C  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3451                           
  3452                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  3453  001630  0E02               	movlw	2
  3454  001632  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3455  001636  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3456  00163A  26DE               	addwf	postinc2,f,c
  3457  00163C  0E00               	movlw	0
  3458  00163E  22DD               	addwfc	postdec2,f,c
  3459                           
  3460                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3461  001640  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3462  001644  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3463  001648  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3464  00164C  0E04               	movlw	4
  3465  00164E  26DE               	addwf	postinc2,f,c
  3466  001650  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3467  001654  0E00               	movlw	0
  3468  001656  22DD               	addwfc	postdec2,f,c
  3469  001658  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3470  00165C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3471  001660  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3472  001664  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3473  001668  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3474  00166C  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3475  001670  504B               	movf	??_vfpfcnvrt+2,w,c
  3476  001672  6E6A               	movwf	vfpfcnvrt@llu,c
  3477  001674  504C               	movf	??_vfpfcnvrt+3,w,c
  3478  001676  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3479  001678  504D               	movf	??_vfpfcnvrt+4,w,c
  3480  00167A  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3481  00167C  504E               	movf	??_vfpfcnvrt+5,w,c
  3482  00167E  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3483  001680  D701               	goto	L11
  3484  001682                     l4088:
  3485  001682  FFFF               	dw	65535	; assembler added errata NOP
  3486                           
  3487                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1337:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
  3488  001684  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3489  001688  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3490  00168C  CFDE F001          	movff	postinc2,strncmp@_l
  3491  001690  CFDD F002          	movff	postdec2,strncmp@_l+1
  3492  001694  0E45               	movlw	low STR_126
  3493  001696  6E03               	movwf	strncmp@_r,c
  3494  001698  0E06               	movlw	high STR_126
  3495  00169A  6E04               	movwf	strncmp@_r+1,c
  3496  00169C  0E00               	movlw	0
  3497  00169E  6E06               	movwf	strncmp@n+1,c
  3498  0016A0  0E02               	movlw	2
  3499  0016A2  6E05               	movwf	strncmp@n,c
  3500  0016A4  EC53  F018         	call	_strncmp	;wreg free
  3501  0016A8  5001               	movf	?_strncmp,w,c
  3502  0016AA  1002               	iorwf	?_strncmp+1,w,c
  3503  0016AC  B4D8               	btfsc	status,2,c
  3504  0016AE  D016               	goto	u4310
  3505  0016B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3506  0016B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3507  0016B8  CFDE F001          	movff	postinc2,strncmp@_l
  3508  0016BC  CFDD F002          	movff	postdec2,strncmp@_l+1
  3509  0016C0  0E24               	movlw	low STR_130
  3510  0016C2  6E03               	movwf	strncmp@_r,c
  3511  0016C4  0E06               	movlw	high STR_130
  3512  0016C6  6E04               	movwf	strncmp@_r+1,c
  3513  0016C8  0E00               	movlw	0
  3514  0016CA  6E06               	movwf	strncmp@n+1,c
  3515  0016CC  0E02               	movlw	2
  3516  0016CE  6E05               	movwf	strncmp@n,c
  3517  0016D0  EC53  F018         	call	_strncmp	;wreg free
  3518  0016D4  5001               	movf	?_strncmp,w,c
  3519  0016D6  1002               	iorwf	?_strncmp+1,w,c
  3520  0016D8  A4D8               	btfss	status,2,c
  3521  0016DA  D038               	goto	l4102
  3522  0016DC                     u4310:
  3523  0016DC  FFFF               	dw	65535	; assembler added errata NOP
  3524                           
  3525                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1338: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1340:             c = (*fmt)[1];
  3526  0016DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3527  0016E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3528  0016E6  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3529  0016EA  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3530  0016EE  0E01               	movlw	1
  3531  0016F0  2649               	addwf	??_vfpfcnvrt,f,c
  3532  0016F2  0E00               	movlw	0
  3533  0016F4  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3534  0016F6  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3535  0016FA  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3536  0016FE                     	if	0	;tblptru may be non-zero
  3537  0016FE                     	endif
  3538  0016FE                     	if	0	;tblptru may be non-zero
  3539  0016FE                     	endif
  3540  0016FE  0008               	tblrd		*
  3541  001700  FFFF               	dw	65535	; errata NOP
  3542  001702                     L26:
  3543  001702  FFFF               	dw	65535	; assembler added errata NOP
  3544  001704  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3545                           
  3546                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1341:             *fmt += ((s
      +                          izeof("zx")/sizeof("zx"[0]))-1);
  3547  001708  0E02               	movlw	2
  3548  00170A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3549  00170E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3550  001712  26DE               	addwf	postinc2,f,c
  3551  001714                     L25:
  3552  001714  FFFF               	dw	65535	; assembler added errata NOP
  3553  001716  0E00               	movlw	0
  3554  001718  22DD               	addwfc	postdec2,f,c
  3555                           
  3556                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1342:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3557  00171A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3558  00171E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3559  001722  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3560  001726  0E02               	movlw	2
  3561  001728  26DE               	addwf	postinc2,f,c
  3562  00172A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3563  00172E  0E00               	movlw	0
  3564  001730  22DD               	addwfc	postdec2,f,c
  3565  001732  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3566  001736  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3567  00173A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3568  00173E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3569  001742  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3570  001746  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3571  00174A  D699               	goto	L10
  3572  00174C                     l4102:
  3573  00174C  FFFF               	dw	65535	; assembler added errata NOP
  3574                           
  3575                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  3576  00174E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3577  001752  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3578  001756  CFDE FFF6          	movff	postinc2,tblptrl
  3579  00175A  CFDD FFF7          	movff	postdec2,tblptrh
  3580  00175E                     	if	0	;tblptru may be non-zero
  3581  00175E                     	endif
  3582  00175E                     	if	0	;tblptru may be non-zero
  3583  00175E                     	endif
  3584  00175E  0008               	tblrd		*
  3585  001760  FFFF               	dw	65535	; errata NOP
  3586  001762  50F5               	movf	tablat,w,c
  3587  001764  0A25               	xorlw	37
  3588  001766  A4D8               	btfss	status,2,c
  3589  001768  D018               	goto	l4112
  3590                           
  3591                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  3592  00176A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3593  00176E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3594  001772  2ADE               	incf	postinc2,f,c
  3595  001774  0E00               	movlw	0
  3596  001776  22DD               	addwfc	postdec2,f,c
  3597                           
  3598                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  3599  001778  0E00               	movlw	0
  3600  00177A  6E02               	movwf	fputc@c+1,c
  3601  00177C  0E25               	movlw	37
  3602  00177E  6E01               	movwf	fputc@c,c
  3603  001780  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3604  001784  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3605  001788  EC12  F019         	call	_fputc	;wreg free
  3606  00178C                     l4108:
  3607  00178C  FFFF               	dw	65535	; assembler added errata NOP
  3608                           
  3609                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  3610  00178E  0E00               	movlw	0
  3611  001790  6E44               	movwf	?_vfpfcnvrt+1,c
  3612  001792  0E01               	movlw	1
  3613  001794                     L5:
  3614  001794  FFFF               	dw	65535	; assembler added errata NOP
  3615  001796  6E43               	movwf	?_vfpfcnvrt,c
  3616  001798  D026               	goto	l503
  3617  00179A                     l4112:
  3618  00179A  FFFF               	dw	65535	; assembler added errata NOP
  3619                           
  3620                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  3621  00179C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3622  0017A0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3623  0017A4  2ADE               	incf	postinc2,f,c
  3624  0017A6  0E00               	movlw	0
  3625  0017A8  22DD               	addwfc	postdec2,f,c
  3626  0017AA  EFA2  F007         	goto	l3932
  3627  0017AE                     l4118:
  3628  0017AE  FFFF               	dw	65535	; assembler added errata NOP
  3629                           
  3630                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  3631  0017B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3632  0017B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3633  0017B8  CFDE FFF6          	movff	postinc2,tblptrl
  3634  0017BC  CFDD FFF7          	movff	postdec2,tblptrh
  3635  0017C0                     	if	0	;tblptru may be non-zero
  3636  0017C0                     	endif
  3637  0017C0                     	if	0	;tblptru may be non-zero
  3638  0017C0                     	endif
  3639  0017C0  0008               	tblrd		*
  3640  0017C2  FFFF               	dw	65535	; errata NOP
  3641  0017C4  50F5               	movf	tablat,w,c
  3642  0017C6  6E01               	movwf	fputc@c,c
  3643  0017C8  6A02               	clrf	fputc@c+1,c
  3644  0017CA  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3645  0017CE  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3646  0017D2  EC12  F019         	call	_fputc	;wreg free
  3647                           
  3648                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  3649  0017D6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3650  0017DA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3651  0017DE  2ADE               	incf	postinc2,f,c
  3652  0017E0  0E00               	movlw	0
  3653  0017E2  22DD               	addwfc	postdec2,f,c
  3654  0017E4  D7D3               	goto	l4108
  3655  0017E6                     l503:
  3656  0017E6  FFFF               	dw	65535	; assembler added errata NOP
  3657  0017E8  0012               	return		;funcret
  3658  0017EA  FFFF               	dw	65535	; errata NOP
  3659  0017EC                     __end_of_vfpfcnvrt:
  3660                           	opt callstack 0
  3661                           
  3662 ;; *************** function _xtoa *****************
  3663 ;; Defined at:
  3664 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3667 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  3668 ;;  d               8   29[COMRAM] unsigned long long 
  3669 ;;  x               1   37[COMRAM] unsigned char 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;  n               8   54[COMRAM] unsigned long long 
  3672 ;;  c               2   64[COMRAM] int 
  3673 ;;  i               2   62[COMRAM] int 
  3674 ;;  w               2   52[COMRAM] int 
  3675 ;;  p               2   50[COMRAM] int 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  2   27[COMRAM] int 
  3678 ;; Registers used:
  3679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3685 ;;      Params:        11       0       0       0       0       0       0
  3686 ;;      Locals:        20       0       0       0       0       0       0
  3687 ;;      Temps:          8       0       0       0       0       0       0
  3688 ;;      Totals:        39       0       0       0       0       0       0
  3689 ;;Total ram usage:       39 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    6
  3692 ;; This function calls:
  3693 ;;		_isalpha
  3694 ;;		_isupper
  3695 ;;		_pad
  3696 ;;		_toupper
  3697 ;; This function is called by:
  3698 ;;		_vfpfcnvrt
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text6
  3703  00211C                     __ptext6:
  3704                           	opt callstack 0
  3705  00211C                     _xtoa:
  3706                           	opt callstack 0
  3707  00211C  FFFF               	dw	65535	; assembler added errata NOP
  3708                           
  3709                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  3710                           
  3711                           ;incstack = 0
  3712  00211E  0100               	movlb	0	; () banked
  3713  002120  AF94               	btfss	(_prec+1)& (0+255),7,b
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  3717  002122  9395               	bcf	_flags& (0+255),1,b
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  3721  002124  BF94               	btfsc	(_prec+1)& (0+255),7,b
  3722  002126  D005               	goto	u3530
  3723  002128  5194               	movf	(_prec+1)& (0+255),w,b
  3724  00212A  E109               	bnz	l441
  3725  00212C  0593               	decf	_prec& (0+255),w,b
  3726  00212E  B0D8               	btfsc	status,0,c
  3727  002130  D006               	goto	l441
  3728  002132                     u3530:
  3729  002132  FFFF               	dw	65535	; assembler added errata NOP
  3730                           
  3731                           ; BSR set to: 0
  3732  002134  0E00               	movlw	0
  3733  002136  6E34               	movwf	xtoa@p+1,c
  3734  002138  0E01               	movlw	1
  3735  00213A  6E33               	movwf	xtoa@p,c
  3736  00213C  D005               	goto	l443
  3737  00213E                     l441:
  3738  00213E  FFFF               	dw	65535	; assembler added errata NOP
  3739                           
  3740                           ; BSR set to: 0
  3741  002140  C093  F033         	movff	_prec,xtoa@p
  3742  002144  C094  F034         	movff	_prec+1,xtoa@p+1
  3743  002148                     l443:
  3744  002148  FFFF               	dw	65535	; assembler added errata NOP
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  3748  00214A  C091  F035         	movff	_width,xtoa@w
  3749  00214E  C092  F036         	movff	_width+1,xtoa@w+1
  3750                           
  3751                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  3752  002152  A995               	btfss	_flags& (0+255),4,b
  3753  002154  D004               	goto	l3632
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  3757  002156  0EFE               	movlw	254
  3758  002158  2635               	addwf	xtoa@w,f,c
  3759  00215A  0EFF               	movlw	255
  3760  00215C  2236               	addwfc	xtoa@w+1,f,c
  3761  00215E                     l3632:
  3762  00215E  FFFF               	dw	65535	; assembler added errata NOP
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  3766  002160  C01E  F037         	movff	xtoa@d,xtoa@n
  3767  002164  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  3768  002168  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  3769  00216C  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  3770  002170  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  3771  002174  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  3772  002178  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  3773  00217C  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  3777  002180  0E00               	movlw	0
  3778  002182  6E40               	movwf	xtoa@i+1,c
  3779  002184  0E1F               	movlw	31
  3780  002186  6E3F               	movwf	xtoa@i,c
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  3784  002188  0E00               	movlw	0
  3785  00218A  6FBA               	movwf	(_dbuf+31)& (0+255),b
  3786                           
  3787                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3788  00218C  D09D               	goto	l3668
  3789  00218E                     l3638:
  3790  00218E  FFFF               	dw	65535	; assembler added errata NOP
  3791                           
  3792                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  3793  002190  063F               	decf	xtoa@i,f,c
  3794  002192  A0D8               	btfss	status,0,c
  3795  002194  0640               	decf	xtoa@i+1,f,c
  3796                           
  3797                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  3798  002196  0E0F               	movlw	15
  3799  002198  1437               	andwf	xtoa@n,w,c
  3800  00219A  6E41               	movwf	xtoa@c,c
  3801  00219C  6A42               	clrf	xtoa@c+1,c
  3802                           
  3803                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  3804  00219E  BE42               	btfsc	xtoa@c+1,7,c
  3805  0021A0  D008               	goto	l3646
  3806  0021A2  5042               	movf	xtoa@c+1,w,c
  3807  0021A4  E104               	bnz	u3550
  3808  0021A6  0E0A               	movlw	10
  3809  0021A8  5C41               	subwf	xtoa@c,w,c
  3810  0021AA  A0D8               	btfss	status,0,c
  3811  0021AC  D002               	goto	l3646
  3812  0021AE                     u3550:
  3813  0021AE  0E57               	movlw	87
  3814  0021B0  D002               	goto	L19
  3815  0021B2                     l3646:
  3816  0021B2  FFFF               	dw	65535	; assembler added errata NOP
  3817  0021B4  0E30               	movlw	48
  3818  0021B6                     L19:
  3819  0021B6  FFFF               	dw	65535	; assembler added errata NOP
  3820  0021B8  2441               	addwf	xtoa@c,w,c
  3821  0021BA  6E41               	movwf	xtoa@c,c
  3822  0021BC  0E00               	movlw	0
  3823  0021BE  2042               	addwfc	xtoa@c+1,w,c
  3824  0021C0  6E42               	movwf	xtoa@c+1,c
  3825                           
  3826                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 ? isupper
      +                          ((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|32)-'a') 
      +                          < 26)) {
  3827  0021C2  0EBF               	movlw	191
  3828  0021C4  6E27               	movwf	??_xtoa& (0+255),c
  3829  0021C6  0EFF               	movlw	255
  3830  0021C8  6E28               	movwf	(??_xtoa+1)& (0+255),c
  3831  0021CA  5026               	movf	xtoa@x,w,c
  3832  0021CC  6E29               	movwf	(??_xtoa+2)& (0+255),c
  3833  0021CE  6A2A               	clrf	(??_xtoa+3)& (0+255),c
  3834  0021D0  5027               	movf	??_xtoa,w,c
  3835  0021D2  2629               	addwf	??_xtoa+2,f,c
  3836  0021D4  5028               	movf	??_xtoa+1,w,c
  3837  0021D6  222A               	addwfc	??_xtoa+3,f,c
  3838  0021D8  502A               	movf	??_xtoa+3,w,c
  3839  0021DA  E106               	bnz	u3560
  3840  0021DC  0E1A               	movlw	26
  3841  0021DE  5C29               	subwf	??_xtoa+2,w,c
  3842  0021E0  B0D8               	btfsc	status,0,c
  3843  0021E2  D002               	goto	u3560
  3844  0021E4  0E01               	movlw	1
  3845  0021E6  D002               	goto	u3570
  3846  0021E8                     u3560:
  3847  0021E8  FFFF               	dw	65535	; assembler added errata NOP
  3848  0021EA  0E00               	movlw	0
  3849  0021EC                     u3570:
  3850  0021EC  FFFF               	dw	65535	; assembler added errata NOP
  3851  0021EE  6E2F               	movwf	_xtoa$1180,c
  3852  0021F0  6A30               	clrf	_xtoa$1180+1,c
  3853  0021F2  502F               	movf	_xtoa$1180,w,c
  3854  0021F4  1030               	iorwf	_xtoa$1180+1,w,c
  3855  0021F6  B4D8               	btfsc	status,2,c
  3856  0021F8  D029               	goto	l3660
  3857  0021FA  0E9F               	movlw	159
  3858  0021FC  6E27               	movwf	??_xtoa& (0+255),c
  3859  0021FE  0EFF               	movlw	255
  3860  002200  6E28               	movwf	(??_xtoa+1)& (0+255),c
  3861  002202  0E20               	movlw	32
  3862  002204  1041               	iorwf	xtoa@c,w,c
  3863  002206  6E29               	movwf	(??_xtoa+2)& (0+255),c
  3864  002208  0E00               	movlw	0
  3865  00220A  1042               	iorwf	xtoa@c+1,w,c
  3866  00220C  6E2A               	movwf	(??_xtoa+3)& (0+255),c
  3867  00220E  5027               	movf	??_xtoa,w,c
  3868  002210  2629               	addwf	??_xtoa+2,f,c
  3869  002212  5028               	movf	??_xtoa+1,w,c
  3870  002214  222A               	addwfc	??_xtoa+3,f,c
  3871  002216  502A               	movf	??_xtoa+3,w,c
  3872  002218  E106               	bnz	u3590
  3873  00221A  0E1A               	movlw	26
  3874  00221C  5C29               	subwf	??_xtoa+2,w,c
  3875  00221E  B0D8               	btfsc	status,0,c
  3876  002220  D002               	goto	u3590
  3877  002222  0E01               	movlw	1
  3878  002224  D002               	goto	u3600
  3879  002226                     u3590:
  3880  002226  FFFF               	dw	65535	; assembler added errata NOP
  3881  002228  0E00               	movlw	0
  3882  00222A                     u3600:
  3883  00222A  FFFF               	dw	65535	; assembler added errata NOP
  3884  00222C  6E31               	movwf	_xtoa$1181,c
  3885  00222E  6A32               	clrf	_xtoa$1181+1,c
  3886  002230  5031               	movf	_xtoa$1181,w,c
  3887  002232  1032               	iorwf	_xtoa$1181+1,w,c
  3888  002234  B4D8               	btfsc	status,2,c
  3889  002236  D00A               	goto	l3660
  3890                           
  3891                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  3892  002238  C041  F007         	movff	xtoa@c,toupper@c
  3893  00223C  C042  F008         	movff	xtoa@c+1,toupper@c+1
  3894  002240  EC5D  F01A         	call	_toupper	;wreg free
  3895  002244  C007  F041         	movff	?_toupper,xtoa@c
  3896  002248  C008  F042         	movff	?_toupper+1,xtoa@c+1
  3897  00224C                     l3660:
  3898  00224C  FFFF               	dw	65535	; assembler added errata NOP
  3899                           
  3900                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  3901  00224E  0E9B               	movlw	low _dbuf
  3902  002250  243F               	addwf	xtoa@i,w,c
  3903  002252  6ED9               	movwf	fsr2l,c
  3904  002254  0E00               	movlw	high _dbuf
  3905  002256  2040               	addwfc	xtoa@i+1,w,c
  3906  002258  6EDA               	movwf	fsr2h,c
  3907  00225A  C041  FFDF         	movff	xtoa@c,indf2
  3908                           
  3909                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  3910  00225E  0633               	decf	xtoa@p,f,c
  3911  002260  A0D8               	btfss	status,0,c
  3912  002262  0634               	decf	xtoa@p+1,f,c
  3913                           
  3914                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  3915  002264  0635               	decf	xtoa@w,f,c
  3916  002266  A0D8               	btfss	status,0,c
  3917  002268  0636               	decf	xtoa@w+1,f,c
  3918                           
  3919                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  3920  00226A  C037  F027         	movff	xtoa@n,??_xtoa
  3921  00226E  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  3922  002272  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  3923  002276  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  3924  00227A  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  3925  00227E  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  3926  002282  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  3927  002286  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  3928  00228A  0E05               	movlw	5
  3929  00228C  D00A               	goto	u3620
  3930  00228E                     u3625:
  3931  00228E  FFFF               	dw	65535	; assembler added errata NOP
  3932  002290  90D8               	bcf	status,0,c
  3933  002292  322E               	rrcf	??_xtoa+7,f,c
  3934  002294  322D               	rrcf	??_xtoa+6,f,c
  3935  002296  322C               	rrcf	??_xtoa+5,f,c
  3936  002298  322B               	rrcf	??_xtoa+4,f,c
  3937  00229A  322A               	rrcf	??_xtoa+3,f,c
  3938  00229C  3229               	rrcf	??_xtoa+2,f,c
  3939  00229E  3228               	rrcf	??_xtoa+1,f,c
  3940  0022A0  3227               	rrcf	??_xtoa,f,c
  3941  0022A2                     u3620:
  3942  0022A2  FFFF               	dw	65535	; assembler added errata NOP
  3943  0022A4  2EE8               	decfsz	wreg,f,c
  3944  0022A6  D7F3               	goto	u3625
  3945  0022A8  C027  F037         	movff	??_xtoa,xtoa@n
  3946  0022AC  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  3947  0022B0  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  3948  0022B4  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  3949  0022B8  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  3950  0022BC  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  3951  0022C0  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  3952  0022C4  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  3953  0022C8                     l3668:
  3954  0022C8  FFFF               	dw	65535	; assembler added errata NOP
  3955                           
  3956                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3957  0022CA  BE40               	btfsc	xtoa@i+1,7,c
  3958  0022CC  D022               	goto	u3670
  3959  0022CE  5040               	movf	xtoa@i+1,w,c
  3960  0022D0  E104               	bnz	u3630
  3961  0022D2  0E02               	movlw	2
  3962  0022D4  5C3F               	subwf	xtoa@i,w,c
  3963  0022D6  A0D8               	btfss	status,0,c
  3964  0022D8  D01C               	goto	u3670
  3965  0022DA                     u3630:
  3966  0022DA  5037               	movf	xtoa@n,w,c
  3967  0022DC  1038               	iorwf	xtoa@n+1,w,c
  3968  0022DE  1039               	iorwf	xtoa@n+2,w,c
  3969  0022E0  103A               	iorwf	xtoa@n+3,w,c
  3970  0022E2  103B               	iorwf	xtoa@n+4,w,c
  3971  0022E4  103C               	iorwf	xtoa@n+5,w,c
  3972  0022E6  103D               	iorwf	xtoa@n+6,w,c
  3973  0022E8  103E               	iorwf	xtoa@n+7,w,c
  3974  0022EA  A4D8               	btfss	status,2,c
  3975  0022EC  D750               	goto	l3638
  3976  0022EE  BE34               	btfsc	xtoa@p+1,7,c
  3977  0022F0  D005               	goto	u3650
  3978  0022F2  5034               	movf	xtoa@p+1,w,c
  3979  0022F4  E102               	bnz	u3651
  3980  0022F6  0433               	decf	xtoa@p,w,c
  3981  0022F8  B0D8               	btfsc	status,0,c
  3982  0022FA                     u3651:
  3983  0022FA  D749               	goto	l3638
  3984  0022FC                     u3650:
  3985  0022FC  FFFF               	dw	65535	; assembler added errata NOP
  3986  0022FE  BE36               	btfsc	xtoa@w+1,7,c
  3987  002300  D008               	goto	u3670
  3988  002302  5036               	movf	xtoa@w+1,w,c
  3989  002304  E103               	bnz	u3660
  3990  002306  0435               	decf	xtoa@w,w,c
  3991  002308  A0D8               	btfss	status,0,c
  3992  00230A  D003               	goto	u3670
  3993  00230C                     u3660:
  3994  00230C  0100               	movlb	0	; () banked
  3995  00230E  B395               	btfsc	_flags& (0+255),1,b
  3996  002310  D73E               	goto	l3638
  3997  002312                     u3670:
  3998  002312  FFFF               	dw	65535	; assembler added errata NOP
  3999                           
  4000                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  4001  002314  0100               	movlb	0	; () banked
  4002  002316  A995               	btfss	_flags& (0+255),4,b
  4003  002318  D016               	goto	l3684
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  4007  00231A  063F               	decf	xtoa@i,f,c
  4008  00231C  A0D8               	btfss	status,0,c
  4009  00231E  0640               	decf	xtoa@i+1,f,c
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  4013  002320  0E9B               	movlw	low _dbuf
  4014  002322  243F               	addwf	xtoa@i,w,c
  4015  002324  6ED9               	movwf	fsr2l,c
  4016  002326  0E00               	movlw	high _dbuf
  4017  002328  2040               	addwfc	xtoa@i+1,w,c
  4018  00232A  6EDA               	movwf	fsr2h,c
  4019  00232C  C026  FFDF         	movff	xtoa@x,indf2
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  4023  002330  063F               	decf	xtoa@i,f,c
  4024  002332  A0D8               	btfss	status,0,c
  4025  002334  0640               	decf	xtoa@i+1,f,c
  4026                           
  4027                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  4028  002336  0E9B               	movlw	low _dbuf
  4029  002338  243F               	addwf	xtoa@i,w,c
  4030  00233A  6ED9               	movwf	fsr2l,c
  4031  00233C  0E00               	movlw	high _dbuf
  4032  00233E  2040               	addwfc	xtoa@i+1,w,c
  4033  002340  6EDA               	movwf	fsr2h,c
  4034  002342  0E30               	movlw	48
  4035  002344  6EDF               	movwf	indf2,c
  4036  002346                     l3684:
  4037  002346  FFFF               	dw	65535	; assembler added errata NOP
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  4041  002348  C01C  F011         	movff	xtoa@fp,pad@fp
  4042  00234C  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4043  002350  0E9B               	movlw	low _dbuf
  4044  002352  243F               	addwf	xtoa@i,w,c
  4045  002354  6E13               	movwf	pad@buf,c
  4046  002356  0E00               	movlw	high _dbuf
  4047  002358  2040               	addwfc	xtoa@i+1,w,c
  4048  00235A  6E14               	movwf	pad@buf+1,c
  4049  00235C  C035  F015         	movff	xtoa@w,pad@p
  4050  002360  C036  F016         	movff	xtoa@w+1,pad@p+1
  4051  002364  EC68  F019         	call	_pad	;wreg free
  4052  002368  C011  F01C         	movff	?_pad,?_xtoa
  4053  00236C  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4054  002370  0012               	return		;funcret
  4055  002372  FFFF               	dw	65535	; errata NOP
  4056  002374                     __end_of_xtoa:
  4057                           	opt callstack 0
  4058                           
  4059 ;; *************** function _toupper *****************
  4060 ;; Defined at:
  4061 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;  c               2    6[COMRAM] int 
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  2    6[COMRAM] int 
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, status,0
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4075 ;;      Params:         2       0       0       0       0       0       0
  4076 ;;      Locals:         2       0       0       0       0       0       0
  4077 ;;      Temps:          4       0       0       0       0       0       0
  4078 ;;      Totals:         8       0       0       0       0       0       0
  4079 ;;Total ram usage:        8 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:    3
  4082 ;; This function calls:
  4083 ;;		_islower
  4084 ;; This function is called by:
  4085 ;;		_xtoa
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           	psect	text7
  4090  0034BA                     __ptext7:
  4091                           	opt callstack 0
  4092  0034BA                     _toupper:
  4093                           	opt callstack 0
  4094  0034BA  FFFF               	dw	65535	; assembler added errata NOP
  4095                           
  4096                           ;incstack = 0
  4097  0034BC  0E9F               	movlw	159
  4098  0034BE  6E09               	movwf	??_toupper& (0+255),c
  4099  0034C0  0EFF               	movlw	255
  4100  0034C2  6E0A               	movwf	(??_toupper+1)& (0+255),c
  4101  0034C4  C007  F00B         	movff	toupper@c,??_toupper+2
  4102  0034C8  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4103  0034CC  5009               	movf	??_toupper,w,c
  4104  0034CE  260B               	addwf	??_toupper+2,f,c
  4105  0034D0  500A               	movf	??_toupper+1,w,c
  4106  0034D2  220C               	addwfc	??_toupper+3,f,c
  4107  0034D4  500C               	movf	??_toupper+3,w,c
  4108  0034D6  E106               	bnz	u2830
  4109  0034D8  0E1A               	movlw	26
  4110  0034DA  5C0B               	subwf	??_toupper+2,w,c
  4111  0034DC  B0D8               	btfsc	status,0,c
  4112  0034DE  D002               	goto	u2830
  4113  0034E0  0E01               	movlw	1
  4114  0034E2  D002               	goto	u2840
  4115  0034E4                     u2830:
  4116  0034E4  FFFF               	dw	65535	; assembler added errata NOP
  4117  0034E6  0E00               	movlw	0
  4118  0034E8                     u2840:
  4119  0034E8  FFFF               	dw	65535	; assembler added errata NOP
  4120  0034EA  6E0D               	movwf	_toupper$1947,c
  4121  0034EC  6A0E               	clrf	_toupper$1947+1,c
  4122  0034EE  500D               	movf	_toupper$1947,w,c
  4123  0034F0  100E               	iorwf	_toupper$1947+1,w,c
  4124  0034F2  B4D8               	btfsc	status,2,c
  4125  0034F4  D005               	goto	l1376
  4126  0034F6  0E5F               	movlw	95
  4127  0034F8  1407               	andwf	toupper@c,w,c
  4128  0034FA  6E07               	movwf	?_toupper,c
  4129  0034FC  6A08               	clrf	?_toupper+1,c
  4130  0034FE  D005               	goto	l1381
  4131  003500                     l1376:
  4132  003500  FFFF               	dw	65535	; assembler added errata NOP
  4133  003502  C007  F007         	movff	toupper@c,?_toupper
  4134  003506  C008  F008         	movff	toupper@c+1,?_toupper+1
  4135  00350A                     l1381:
  4136  00350A  FFFF               	dw	65535	; assembler added errata NOP
  4137  00350C  0012               	return		;funcret
  4138  00350E  FFFF               	dw	65535	; errata NOP
  4139  003510                     __end_of_toupper:
  4140                           	opt callstack 0
  4141                           
  4142 ;; *************** function _islower *****************
  4143 ;; Defined at:
  4144 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  c               2    0[COMRAM] int 
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;		None
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  2    0[COMRAM] int 
  4151 ;; Registers used:
  4152 ;;		wreg, status,2, status,0
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4158 ;;      Params:         2       0       0       0       0       0       0
  4159 ;;      Locals:         0       0       0       0       0       0       0
  4160 ;;      Temps:          4       0       0       0       0       0       0
  4161 ;;      Totals:         6       0       0       0       0       0       0
  4162 ;;Total ram usage:        6 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    2
  4165 ;; This function calls:
  4166 ;;		Nothing
  4167 ;; This function is called by:
  4168 ;;		_toupper
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text8
  4173  0037CA                     __ptext8:
  4174                           	opt callstack 0
  4175  0037CA                     _islower:
  4176                           	opt callstack 0
  4177  0037CA  FFFF               	dw	65535	; assembler added errata NOP
  4178                           
  4179                           ;incstack = 0
  4180  0037CC  0E9F               	movlw	159
  4181  0037CE  6E03               	movwf	??_islower& (0+255),c
  4182  0037D0  0EFF               	movlw	255
  4183  0037D2  6E04               	movwf	(??_islower+1)& (0+255),c
  4184  0037D4  C001  F005         	movff	islower@c,??_islower+2
  4185  0037D8  C002  F006         	movff	islower@c+1,??_islower+3
  4186  0037DC  5003               	movf	??_islower,w,c
  4187  0037DE  2605               	addwf	??_islower+2,f,c
  4188  0037E0  5004               	movf	??_islower+1,w,c
  4189  0037E2  2206               	addwfc	??_islower+3,f,c
  4190  0037E4  5006               	movf	??_islower+3,w,c
  4191  0037E6  E106               	bnz	u2720
  4192  0037E8  0E1A               	movlw	26
  4193  0037EA  5C05               	subwf	??_islower+2,w,c
  4194  0037EC  B0D8               	btfsc	status,0,c
  4195  0037EE  D002               	goto	u2720
  4196  0037F0  0E01               	movlw	1
  4197  0037F2  D002               	goto	u2730
  4198  0037F4                     u2720:
  4199  0037F4  FFFF               	dw	65535	; assembler added errata NOP
  4200  0037F6  0E00               	movlw	0
  4201  0037F8                     u2730:
  4202  0037F8  FFFF               	dw	65535	; assembler added errata NOP
  4203  0037FA  6E01               	movwf	?_islower,c
  4204  0037FC  6A02               	clrf	?_islower+1,c
  4205  0037FE  0012               	return		;funcret
  4206  003800  FFFF               	dw	65535	; errata NOP
  4207  003802                     __end_of_islower:
  4208                           	opt callstack 0
  4209                           
  4210 ;; *************** function _isupper *****************
  4211 ;; Defined at:
  4212 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;  c               2    0[COMRAM] int 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;		None
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  2    0[COMRAM] int 
  4219 ;; Registers used:
  4220 ;;		wreg, status,2, status,0
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4226 ;;      Params:         2       0       0       0       0       0       0
  4227 ;;      Locals:         0       0       0       0       0       0       0
  4228 ;;      Temps:          4       0       0       0       0       0       0
  4229 ;;      Totals:         6       0       0       0       0       0       0
  4230 ;;Total ram usage:        6 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:    2
  4233 ;; This function calls:
  4234 ;;		Nothing
  4235 ;; This function is called by:
  4236 ;;		_xtoa
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text9
  4241  003802                     __ptext9:
  4242                           	opt callstack 0
  4243  003802                     _isupper:
  4244                           	opt callstack 0
  4245  003802  FFFF               	dw	65535	; assembler added errata NOP
  4246                           
  4247                           ;incstack = 0
  4248  003804  0EBF               	movlw	191
  4249  003806  6E03               	movwf	??_isupper& (0+255),c
  4250  003808  0EFF               	movlw	255
  4251  00380A  6E04               	movwf	(??_isupper+1)& (0+255),c
  4252  00380C  C001  F005         	movff	isupper@c,??_isupper+2
  4253  003810  C002  F006         	movff	isupper@c+1,??_isupper+3
  4254  003814  5003               	movf	??_isupper,w,c
  4255  003816  2605               	addwf	??_isupper+2,f,c
  4256  003818  5004               	movf	??_isupper+1,w,c
  4257  00381A  2206               	addwfc	??_isupper+3,f,c
  4258  00381C  5006               	movf	??_isupper+3,w,c
  4259  00381E  E106               	bnz	u2790
  4260  003820  0E1A               	movlw	26
  4261  003822  5C05               	subwf	??_isupper+2,w,c
  4262  003824  B0D8               	btfsc	status,0,c
  4263  003826  D002               	goto	u2790
  4264  003828  0E01               	movlw	1
  4265  00382A  D002               	goto	u2800
  4266  00382C                     u2790:
  4267  00382C  FFFF               	dw	65535	; assembler added errata NOP
  4268  00382E  0E00               	movlw	0
  4269  003830                     u2800:
  4270  003830  FFFF               	dw	65535	; assembler added errata NOP
  4271  003832  6E01               	movwf	?_isupper,c
  4272  003834  6A02               	clrf	?_isupper+1,c
  4273  003836  0012               	return		;funcret
  4274  003838  FFFF               	dw	65535	; errata NOP
  4275  00383A                     __end_of_isupper:
  4276                           	opt callstack 0
  4277                           
  4278 ;; *************** function _isalpha *****************
  4279 ;; Defined at:
  4280 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;  c               2    0[COMRAM] int 
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;		None
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  2    0[COMRAM] int 
  4287 ;; Registers used:
  4288 ;;		wreg, status,2, status,0
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4294 ;;      Params:         2       0       0       0       0       0       0
  4295 ;;      Locals:         0       0       0       0       0       0       0
  4296 ;;      Temps:          4       0       0       0       0       0       0
  4297 ;;      Totals:         6       0       0       0       0       0       0
  4298 ;;Total ram usage:        6 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:    2
  4301 ;; This function calls:
  4302 ;;		Nothing
  4303 ;; This function is called by:
  4304 ;;		_xtoa
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text10
  4309  003752                     __ptext10:
  4310                           	opt callstack 0
  4311  003752                     _isalpha:
  4312                           	opt callstack 0
  4313  003752  FFFF               	dw	65535	; assembler added errata NOP
  4314                           
  4315                           ;incstack = 0
  4316  003754  0E9F               	movlw	159
  4317  003756  6E03               	movwf	??_isalpha& (0+255),c
  4318  003758  0EFF               	movlw	255
  4319  00375A  6E04               	movwf	(??_isalpha+1)& (0+255),c
  4320  00375C  0E20               	movlw	32
  4321  00375E  1001               	iorwf	isalpha@c,w,c
  4322  003760  6E05               	movwf	(??_isalpha+2)& (0+255),c
  4323  003762  0E00               	movlw	0
  4324  003764  1002               	iorwf	isalpha@c+1,w,c
  4325  003766  6E06               	movwf	(??_isalpha+3)& (0+255),c
  4326  003768  5003               	movf	??_isalpha,w,c
  4327  00376A  2605               	addwf	??_isalpha+2,f,c
  4328  00376C  5004               	movf	??_isalpha+1,w,c
  4329  00376E  2206               	addwfc	??_isalpha+3,f,c
  4330  003770  5006               	movf	??_isalpha+3,w,c
  4331  003772  E106               	bnz	u2810
  4332  003774  0E1A               	movlw	26
  4333  003776  5C05               	subwf	??_isalpha+2,w,c
  4334  003778  B0D8               	btfsc	status,0,c
  4335  00377A  D002               	goto	u2810
  4336  00377C  0E01               	movlw	1
  4337  00377E  D002               	goto	u2820
  4338  003780                     u2810:
  4339  003780  FFFF               	dw	65535	; assembler added errata NOP
  4340  003782  0E00               	movlw	0
  4341  003784                     u2820:
  4342  003784  FFFF               	dw	65535	; assembler added errata NOP
  4343  003786  6E01               	movwf	?_isalpha,c
  4344  003788  6A02               	clrf	?_isalpha+1,c
  4345  00378A  0012               	return		;funcret
  4346  00378C  FFFF               	dw	65535	; errata NOP
  4347  00378E                     __end_of_isalpha:
  4348                           	opt callstack 0
  4349                           
  4350 ;; *************** function _utoa *****************
  4351 ;; Defined at:
  4352 ;;		line 593 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4355 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4356 ;;  d               8   29[COMRAM] unsigned long long 
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  n               8   49[COMRAM] unsigned long long 
  4359 ;;  i               2   57[COMRAM] int 
  4360 ;;  w               2   47[COMRAM] int 
  4361 ;;  p               2   45[COMRAM] int 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  2   27[COMRAM] int 
  4364 ;; Registers used:
  4365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4371 ;;      Params:        10       0       0       0       0       0       0
  4372 ;;      Locals:        14       0       0       0       0       0       0
  4373 ;;      Temps:          8       0       0       0       0       0       0
  4374 ;;      Totals:        32       0       0       0       0       0       0
  4375 ;;Total ram usage:       32 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; Hardware stack levels required when called:    6
  4378 ;; This function calls:
  4379 ;;		___lodiv
  4380 ;;		___lomod
  4381 ;;		_pad
  4382 ;; This function is called by:
  4383 ;;		_vfpfcnvrt
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text11
  4388  002374                     __ptext11:
  4389                           	opt callstack 0
  4390  002374                     _utoa:
  4391                           	opt callstack 0
  4392  002374  FFFF               	dw	65535	; assembler added errata NOP
  4393                           
  4394                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  4395                           
  4396                           ;incstack = 0
  4397  002376  0100               	movlb	0	; () banked
  4398  002378  AF94               	btfss	(_prec+1)& (0+255),7,b
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  4402  00237A  9395               	bcf	_flags& (0+255),1,b
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  4406  00237C  BF94               	btfsc	(_prec+1)& (0+255),7,b
  4407  00237E  D005               	goto	u3460
  4408  002380  5194               	movf	(_prec+1)& (0+255),w,b
  4409  002382  E109               	bnz	l426
  4410  002384  0593               	decf	_prec& (0+255),w,b
  4411  002386  B0D8               	btfsc	status,0,c
  4412  002388  D006               	goto	l426
  4413  00238A                     u3460:
  4414  00238A  FFFF               	dw	65535	; assembler added errata NOP
  4415                           
  4416                           ; BSR set to: 0
  4417  00238C  0E00               	movlw	0
  4418  00238E  6E2F               	movwf	utoa@p+1,c
  4419  002390  0E01               	movlw	1
  4420  002392  6E2E               	movwf	utoa@p,c
  4421  002394  D005               	goto	l428
  4422  002396                     l426:
  4423  002396  FFFF               	dw	65535	; assembler added errata NOP
  4424                           
  4425                           ; BSR set to: 0
  4426  002398  C093  F02E         	movff	_prec,utoa@p
  4427  00239C  C094  F02F         	movff	_prec+1,utoa@p+1
  4428  0023A0                     l428:
  4429  0023A0  FFFF               	dw	65535	; assembler added errata NOP
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 603:     w = width;
  4433  0023A2  C091  F030         	movff	_width,utoa@w
  4434  0023A6  C092  F031         	movff	_width+1,utoa@w+1
  4435                           
  4436                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 606:     n = d;
  4437  0023AA  C01E  F032         	movff	utoa@d,utoa@n
  4438  0023AE  C01F  F033         	movff	utoa@d+1,utoa@n+1
  4439  0023B2  C020  F034         	movff	utoa@d+2,utoa@n+2
  4440  0023B6  C021  F035         	movff	utoa@d+3,utoa@n+3
  4441  0023BA  C022  F036         	movff	utoa@d+4,utoa@n+4
  4442  0023BE  C023  F037         	movff	utoa@d+5,utoa@n+5
  4443  0023C2  C024  F038         	movff	utoa@d+6,utoa@n+6
  4444  0023C6  C025  F039         	movff	utoa@d+7,utoa@n+7
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  4448  0023CA  0E00               	movlw	0
  4449  0023CC  6E3B               	movwf	utoa@i+1,c
  4450  0023CE  0E1F               	movlw	31
  4451  0023D0  6E3A               	movwf	utoa@i,c
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  4455  0023D2  0E00               	movlw	0
  4456  0023D4  6FBA               	movwf	(_dbuf+31)& (0+255),b
  4457                           
  4458                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4459  0023D6  D077               	goto	l3608
  4460  0023D8                     l3598:
  4461  0023D8  FFFF               	dw	65535	; assembler added errata NOP
  4462                           
  4463                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 610:         --i;
  4464  0023DA  063A               	decf	utoa@i,f,c
  4465  0023DC  A0D8               	btfss	status,0,c
  4466  0023DE  063B               	decf	utoa@i+1,f,c
  4467                           
  4468                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  4469  0023E0  0E9B               	movlw	low _dbuf
  4470  0023E2  243A               	addwf	utoa@i,w,c
  4471  0023E4  6ED9               	movwf	fsr2l,c
  4472  0023E6  0E00               	movlw	high _dbuf
  4473  0023E8  203B               	addwfc	utoa@i+1,w,c
  4474  0023EA  6EDA               	movwf	fsr2h,c
  4475  0023EC  C032  F001         	movff	utoa@n,___lomod@dividend
  4476  0023F0  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  4477  0023F4  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  4478  0023F8  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  4479  0023FC  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  4480  002400  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  4481  002404  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  4482  002408  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  4483  00240C  0E0A               	movlw	10
  4484  00240E  6E09               	movwf	___lomod@divisor,c
  4485  002410  0E00               	movlw	0
  4486  002412  6E0A               	movwf	___lomod@divisor+1,c
  4487  002414  0E00               	movlw	0
  4488  002416  6E0B               	movwf	___lomod@divisor+2,c
  4489  002418  0E00               	movlw	0
  4490  00241A  6E0C               	movwf	___lomod@divisor+3,c
  4491  00241C  0E00               	movlw	0
  4492  00241E  6E0D               	movwf	___lomod@divisor+4,c
  4493  002420  0E00               	movlw	0
  4494  002422  6E0E               	movwf	___lomod@divisor+5,c
  4495  002424  0E00               	movlw	0
  4496  002426  6E0F               	movwf	___lomod@divisor+6,c
  4497  002428  0E00               	movlw	0
  4498  00242A  6E10               	movwf	___lomod@divisor+7,c
  4499  00242C  ECB4  F018         	call	___lomod	;wreg free
  4500  002430  C001  F026         	movff	?___lomod,??_utoa
  4501  002434  C002  F027         	movff	?___lomod+1,??_utoa+1
  4502  002438  C003  F028         	movff	?___lomod+2,??_utoa+2
  4503  00243C  C004  F029         	movff	?___lomod+3,??_utoa+3
  4504  002440  C005  F02A         	movff	?___lomod+4,??_utoa+4
  4505  002444  C006  F02B         	movff	?___lomod+5,??_utoa+5
  4506  002448  C007  F02C         	movff	?___lomod+6,??_utoa+6
  4507  00244C  C008  F02D         	movff	?___lomod+7,??_utoa+7
  4508  002450  5026               	movf	??_utoa,w,c
  4509  002452  0F30               	addlw	48
  4510  002454  6EDF               	movwf	indf2,c
  4511                           
  4512                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 612:         --p;
  4513  002456  062E               	decf	utoa@p,f,c
  4514  002458  A0D8               	btfss	status,0,c
  4515  00245A  062F               	decf	utoa@p+1,f,c
  4516                           
  4517                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 613:         --w;
  4518  00245C  0630               	decf	utoa@w,f,c
  4519  00245E  A0D8               	btfss	status,0,c
  4520  002460  0631               	decf	utoa@w+1,f,c
  4521                           
  4522                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  4523  002462  C032  F001         	movff	utoa@n,___lodiv@dividend
  4524  002466  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  4525  00246A  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  4526  00246E  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  4527  002472  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  4528  002476  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  4529  00247A  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  4530  00247E  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  4531  002482  0E0A               	movlw	10
  4532  002484  6E09               	movwf	___lodiv@divisor,c
  4533  002486  0E00               	movlw	0
  4534  002488  6E0A               	movwf	___lodiv@divisor+1,c
  4535  00248A  0E00               	movlw	0
  4536  00248C  6E0B               	movwf	___lodiv@divisor+2,c
  4537  00248E  0E00               	movlw	0
  4538  002490  6E0C               	movwf	___lodiv@divisor+3,c
  4539  002492  0E00               	movlw	0
  4540  002494  6E0D               	movwf	___lodiv@divisor+4,c
  4541  002496  0E00               	movlw	0
  4542  002498  6E0E               	movwf	___lodiv@divisor+5,c
  4543  00249A  0E00               	movlw	0
  4544  00249C  6E0F               	movwf	___lodiv@divisor+6,c
  4545  00249E  0E00               	movlw	0
  4546  0024A0  6E10               	movwf	___lodiv@divisor+7,c
  4547  0024A2  ECB5  F016         	call	___lodiv	;wreg free
  4548  0024A6  C001  F032         	movff	?___lodiv,utoa@n
  4549  0024AA  C002  F033         	movff	?___lodiv+1,utoa@n+1
  4550  0024AE  C003  F034         	movff	?___lodiv+2,utoa@n+2
  4551  0024B2  C004  F035         	movff	?___lodiv+3,utoa@n+3
  4552  0024B6  C005  F036         	movff	?___lodiv+4,utoa@n+4
  4553  0024BA  C006  F037         	movff	?___lodiv+5,utoa@n+5
  4554  0024BE  C007  F038         	movff	?___lodiv+6,utoa@n+6
  4555  0024C2  C008  F039         	movff	?___lodiv+7,utoa@n+7
  4556  0024C6                     l3608:
  4557  0024C6  FFFF               	dw	65535	; assembler added errata NOP
  4558                           
  4559                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4560  0024C8  503A               	movf	utoa@i,w,c
  4561  0024CA  103B               	iorwf	utoa@i+1,w,c
  4562  0024CC  B4D8               	btfsc	status,2,c
  4563  0024CE  D01C               	goto	u3510
  4564  0024D0  5032               	movf	utoa@n,w,c
  4565  0024D2  1033               	iorwf	utoa@n+1,w,c
  4566  0024D4  1034               	iorwf	utoa@n+2,w,c
  4567  0024D6  1035               	iorwf	utoa@n+3,w,c
  4568  0024D8  1036               	iorwf	utoa@n+4,w,c
  4569  0024DA  1037               	iorwf	utoa@n+5,w,c
  4570  0024DC  1038               	iorwf	utoa@n+6,w,c
  4571  0024DE  1039               	iorwf	utoa@n+7,w,c
  4572  0024E0  A4D8               	btfss	status,2,c
  4573  0024E2  D77A               	goto	l3598
  4574  0024E4  BE2F               	btfsc	utoa@p+1,7,c
  4575  0024E6  D005               	goto	u3490
  4576  0024E8  502F               	movf	utoa@p+1,w,c
  4577  0024EA  E102               	bnz	u3491
  4578  0024EC  042E               	decf	utoa@p,w,c
  4579  0024EE  B0D8               	btfsc	status,0,c
  4580  0024F0                     u3491:
  4581  0024F0  D773               	goto	l3598
  4582  0024F2                     u3490:
  4583  0024F2  FFFF               	dw	65535	; assembler added errata NOP
  4584  0024F4  BE31               	btfsc	utoa@w+1,7,c
  4585  0024F6  D008               	goto	u3510
  4586  0024F8  5031               	movf	utoa@w+1,w,c
  4587  0024FA  E103               	bnz	u3500
  4588  0024FC  0430               	decf	utoa@w,w,c
  4589  0024FE  A0D8               	btfss	status,0,c
  4590  002500  D003               	goto	u3510
  4591  002502                     u3500:
  4592  002502  0100               	movlb	0	; () banked
  4593  002504  B395               	btfsc	_flags& (0+255),1,b
  4594  002506  D768               	goto	l3598
  4595  002508                     u3510:
  4596  002508  FFFF               	dw	65535	; assembler added errata NOP
  4597                           
  4598                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  4599  00250A  C01C  F011         	movff	utoa@fp,pad@fp
  4600  00250E  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  4601  002512  0E9B               	movlw	low _dbuf
  4602  002514  243A               	addwf	utoa@i,w,c
  4603  002516  6E13               	movwf	pad@buf,c
  4604  002518  0E00               	movlw	high _dbuf
  4605  00251A  203B               	addwfc	utoa@i+1,w,c
  4606  00251C  6E14               	movwf	pad@buf+1,c
  4607  00251E  C030  F015         	movff	utoa@w,pad@p
  4608  002522  C031  F016         	movff	utoa@w+1,pad@p+1
  4609  002526  EC68  F019         	call	_pad	;wreg free
  4610  00252A  C011  F01C         	movff	?_pad,?_utoa
  4611  00252E  C012  F01D         	movff	?_pad+1,?_utoa+1
  4612  002532  0012               	return		;funcret
  4613  002534  FFFF               	dw	65535	; errata NOP
  4614  002536                     __end_of_utoa:
  4615                           	opt callstack 0
  4616                           
  4617 ;; *************** function ___lomod *****************
  4618 ;; Defined at:
  4619 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lomod.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;  dividend        8    0[COMRAM] unsigned long long 
  4622 ;;  divisor         8    8[COMRAM] unsigned long long 
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;  counter         1   16[COMRAM] unsigned char 
  4625 ;; Return value:  Size  Location     Type
  4626 ;;                  8    0[COMRAM] unsigned long long 
  4627 ;; Registers used:
  4628 ;;		wreg, status,2, status,0
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4634 ;;      Params:        16       0       0       0       0       0       0
  4635 ;;      Locals:         1       0       0       0       0       0       0
  4636 ;;      Temps:          0       0       0       0       0       0       0
  4637 ;;      Totals:        17       0       0       0       0       0       0
  4638 ;;Total ram usage:       17 bytes
  4639 ;; Hardware stack levels used:    1
  4640 ;; Hardware stack levels required when called:    2
  4641 ;; This function calls:
  4642 ;;		Nothing
  4643 ;; This function is called by:
  4644 ;;		_utoa
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           	psect	text12
  4649  003168                     __ptext12:
  4650                           	opt callstack 0
  4651  003168                     ___lomod:
  4652                           	opt callstack 0
  4653  003168  FFFF               	dw	65535	; assembler added errata NOP
  4654                           
  4655                           ;incstack = 0
  4656  00316A  5009               	movf	___lomod@divisor,w,c
  4657  00316C  100A               	iorwf	___lomod@divisor+1,w,c
  4658  00316E  100B               	iorwf	___lomod@divisor+2,w,c
  4659  003170  100C               	iorwf	___lomod@divisor+3,w,c
  4660  003172  100D               	iorwf	___lomod@divisor+4,w,c
  4661  003174  100E               	iorwf	___lomod@divisor+5,w,c
  4662  003176  100F               	iorwf	___lomod@divisor+6,w,c
  4663  003178  1010               	iorwf	___lomod@divisor+7,w,c
  4664  00317A  B4D8               	btfsc	status,2,c
  4665  00317C  D040               	goto	l1008
  4666  00317E  0E01               	movlw	1
  4667  003180  6E11               	movwf	___lomod@counter,c
  4668  003182  D00B               	goto	l3398
  4669  003184                     l3396:
  4670  003184  FFFF               	dw	65535	; assembler added errata NOP
  4671  003186  90D8               	bcf	status,0,c
  4672  003188  3609               	rlcf	___lomod@divisor,f,c
  4673  00318A  360A               	rlcf	___lomod@divisor+1,f,c
  4674  00318C  360B               	rlcf	___lomod@divisor+2,f,c
  4675  00318E  360C               	rlcf	___lomod@divisor+3,f,c
  4676  003190  360D               	rlcf	___lomod@divisor+4,f,c
  4677  003192  360E               	rlcf	___lomod@divisor+5,f,c
  4678  003194  360F               	rlcf	___lomod@divisor+6,f,c
  4679  003196  3610               	rlcf	___lomod@divisor+7,f,c
  4680  003198  2A11               	incf	___lomod@counter,f,c
  4681  00319A                     l3398:
  4682  00319A  FFFF               	dw	65535	; assembler added errata NOP
  4683  00319C  AE10               	btfss	___lomod@divisor+7,7,c
  4684  00319E  D7F2               	goto	l3396
  4685  0031A0                     u3060:
  4686  0031A0  FFFF               	dw	65535	; assembler added errata NOP
  4687  0031A2  5009               	movf	___lomod@divisor,w,c
  4688  0031A4  5C01               	subwf	___lomod@dividend,w,c
  4689  0031A6  500A               	movf	___lomod@divisor+1,w,c
  4690  0031A8  5802               	subwfb	___lomod@dividend+1,w,c
  4691  0031AA  500B               	movf	___lomod@divisor+2,w,c
  4692  0031AC  5803               	subwfb	___lomod@dividend+2,w,c
  4693  0031AE  500C               	movf	___lomod@divisor+3,w,c
  4694  0031B0  5804               	subwfb	___lomod@dividend+3,w,c
  4695  0031B2  500D               	movf	___lomod@divisor+4,w,c
  4696  0031B4  5805               	subwfb	___lomod@dividend+4,w,c
  4697  0031B6  500E               	movf	___lomod@divisor+5,w,c
  4698  0031B8  5806               	subwfb	___lomod@dividend+5,w,c
  4699  0031BA  500F               	movf	___lomod@divisor+6,w,c
  4700  0031BC  5807               	subwfb	___lomod@dividend+6,w,c
  4701  0031BE  5010               	movf	___lomod@divisor+7,w,c
  4702  0031C0  5808               	subwfb	___lomod@dividend+7,w,c
  4703  0031C2  A0D8               	btfss	status,0,c
  4704  0031C4  D010               	goto	l3404
  4705  0031C6  5009               	movf	___lomod@divisor,w,c
  4706  0031C8  5E01               	subwf	___lomod@dividend,f,c
  4707  0031CA  500A               	movf	___lomod@divisor+1,w,c
  4708  0031CC  5A02               	subwfb	___lomod@dividend+1,f,c
  4709  0031CE  500B               	movf	___lomod@divisor+2,w,c
  4710  0031D0  5A03               	subwfb	___lomod@dividend+2,f,c
  4711  0031D2  500C               	movf	___lomod@divisor+3,w,c
  4712  0031D4  5A04               	subwfb	___lomod@dividend+3,f,c
  4713  0031D6  500D               	movf	___lomod@divisor+4,w,c
  4714  0031D8  5A05               	subwfb	___lomod@dividend+4,f,c
  4715  0031DA  500E               	movf	___lomod@divisor+5,w,c
  4716  0031DC  5A06               	subwfb	___lomod@dividend+5,f,c
  4717  0031DE  500F               	movf	___lomod@divisor+6,w,c
  4718  0031E0  5A07               	subwfb	___lomod@dividend+6,f,c
  4719  0031E2  5010               	movf	___lomod@divisor+7,w,c
  4720  0031E4  5A08               	subwfb	___lomod@dividend+7,f,c
  4721  0031E6                     l3404:
  4722  0031E6  FFFF               	dw	65535	; assembler added errata NOP
  4723  0031E8  90D8               	bcf	status,0,c
  4724  0031EA  3210               	rrcf	___lomod@divisor+7,f,c
  4725  0031EC  320F               	rrcf	___lomod@divisor+6,f,c
  4726  0031EE  320E               	rrcf	___lomod@divisor+5,f,c
  4727  0031F0  320D               	rrcf	___lomod@divisor+4,f,c
  4728  0031F2  320C               	rrcf	___lomod@divisor+3,f,c
  4729  0031F4  320B               	rrcf	___lomod@divisor+2,f,c
  4730  0031F6  320A               	rrcf	___lomod@divisor+1,f,c
  4731  0031F8  3209               	rrcf	___lomod@divisor,f,c
  4732  0031FA  2E11               	decfsz	___lomod@counter,f,c
  4733  0031FC  D7D1               	goto	u3060
  4734  0031FE                     l1008:
  4735  0031FE  FFFF               	dw	65535	; assembler added errata NOP
  4736  003200  C001  F001         	movff	___lomod@dividend,?___lomod
  4737  003204  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  4738  003208  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  4739  00320C  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  4740  003210  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  4741  003214  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  4742  003218  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  4743  00321C  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  4744  003220  0012               	return		;funcret
  4745  003222  FFFF               	dw	65535	; errata NOP
  4746  003224                     __end_of___lomod:
  4747                           	opt callstack 0
  4748                           
  4749 ;; *************** function ___lodiv *****************
  4750 ;; Defined at:
  4751 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lodiv.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  dividend        8    0[COMRAM] unsigned long long 
  4754 ;;  divisor         8    8[COMRAM] unsigned long long 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  quotient        8   16[COMRAM] unsigned long long 
  4757 ;;  counter         1   24[COMRAM] unsigned char 
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  8    0[COMRAM] unsigned long long 
  4760 ;; Registers used:
  4761 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4767 ;;      Params:        16       0       0       0       0       0       0
  4768 ;;      Locals:         9       0       0       0       0       0       0
  4769 ;;      Temps:          0       0       0       0       0       0       0
  4770 ;;      Totals:        25       0       0       0       0       0       0
  4771 ;;Total ram usage:       25 bytes
  4772 ;; Hardware stack levels used:    1
  4773 ;; Hardware stack levels required when called:    2
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_utoa
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text13
  4782  002D6A                     __ptext13:
  4783                           	opt callstack 0
  4784  002D6A                     ___lodiv:
  4785                           	opt callstack 0
  4786  002D6A  FFFF               	dw	65535	; assembler added errata NOP
  4787                           
  4788                           ;incstack = 0
  4789  002D6C  EE20  F011         	lfsr	2,___lodiv@quotient
  4790  002D70  0E07               	movlw	7
  4791  002D72                     u3011:
  4792  002D72  6ADE               	clrf	postinc2,c
  4793  002D74  06E8               	decf	wreg,f,c
  4794  002D76  E2FD               	bc	u3011
  4795  002D78  5009               	movf	___lodiv@divisor,w,c
  4796  002D7A  100A               	iorwf	___lodiv@divisor+1,w,c
  4797  002D7C  100B               	iorwf	___lodiv@divisor+2,w,c
  4798  002D7E  100C               	iorwf	___lodiv@divisor+3,w,c
  4799  002D80  100D               	iorwf	___lodiv@divisor+4,w,c
  4800  002D82  100E               	iorwf	___lodiv@divisor+5,w,c
  4801  002D84  100F               	iorwf	___lodiv@divisor+6,w,c
  4802  002D86  1010               	iorwf	___lodiv@divisor+7,w,c
  4803  002D88  B4D8               	btfsc	status,2,c
  4804  002D8A  D04A               	goto	l998
  4805  002D8C  0E01               	movlw	1
  4806  002D8E  6E19               	movwf	___lodiv@counter,c
  4807  002D90  D00B               	goto	l3378
  4808  002D92                     l3376:
  4809  002D92  FFFF               	dw	65535	; assembler added errata NOP
  4810  002D94  90D8               	bcf	status,0,c
  4811  002D96  3609               	rlcf	___lodiv@divisor,f,c
  4812  002D98  360A               	rlcf	___lodiv@divisor+1,f,c
  4813  002D9A  360B               	rlcf	___lodiv@divisor+2,f,c
  4814  002D9C  360C               	rlcf	___lodiv@divisor+3,f,c
  4815  002D9E  360D               	rlcf	___lodiv@divisor+4,f,c
  4816  002DA0  360E               	rlcf	___lodiv@divisor+5,f,c
  4817  002DA2  360F               	rlcf	___lodiv@divisor+6,f,c
  4818  002DA4  3610               	rlcf	___lodiv@divisor+7,f,c
  4819  002DA6  2A19               	incf	___lodiv@counter,f,c
  4820  002DA8                     l3378:
  4821  002DA8  FFFF               	dw	65535	; assembler added errata NOP
  4822  002DAA  AE10               	btfss	___lodiv@divisor+7,7,c
  4823  002DAC  D7F2               	goto	l3376
  4824  002DAE                     u3030:
  4825  002DAE  FFFF               	dw	65535	; assembler added errata NOP
  4826  002DB0  90D8               	bcf	status,0,c
  4827  002DB2  3611               	rlcf	___lodiv@quotient,f,c
  4828  002DB4  3612               	rlcf	___lodiv@quotient+1,f,c
  4829  002DB6  3613               	rlcf	___lodiv@quotient+2,f,c
  4830  002DB8  3614               	rlcf	___lodiv@quotient+3,f,c
  4831  002DBA  3615               	rlcf	___lodiv@quotient+4,f,c
  4832  002DBC  3616               	rlcf	___lodiv@quotient+5,f,c
  4833  002DBE  3617               	rlcf	___lodiv@quotient+6,f,c
  4834  002DC0  3618               	rlcf	___lodiv@quotient+7,f,c
  4835  002DC2  5009               	movf	___lodiv@divisor,w,c
  4836  002DC4  5C01               	subwf	___lodiv@dividend,w,c
  4837  002DC6  500A               	movf	___lodiv@divisor+1,w,c
  4838  002DC8  5802               	subwfb	___lodiv@dividend+1,w,c
  4839  002DCA  500B               	movf	___lodiv@divisor+2,w,c
  4840  002DCC  5803               	subwfb	___lodiv@dividend+2,w,c
  4841  002DCE  500C               	movf	___lodiv@divisor+3,w,c
  4842  002DD0  5804               	subwfb	___lodiv@dividend+3,w,c
  4843  002DD2  500D               	movf	___lodiv@divisor+4,w,c
  4844  002DD4  5805               	subwfb	___lodiv@dividend+4,w,c
  4845  002DD6  500E               	movf	___lodiv@divisor+5,w,c
  4846  002DD8  5806               	subwfb	___lodiv@dividend+5,w,c
  4847  002DDA  500F               	movf	___lodiv@divisor+6,w,c
  4848  002DDC  5807               	subwfb	___lodiv@dividend+6,w,c
  4849  002DDE  5010               	movf	___lodiv@divisor+7,w,c
  4850  002DE0  5808               	subwfb	___lodiv@dividend+7,w,c
  4851  002DE2  A0D8               	btfss	status,0,c
  4852  002DE4  D011               	goto	l3388
  4853  002DE6  5009               	movf	___lodiv@divisor,w,c
  4854  002DE8  5E01               	subwf	___lodiv@dividend,f,c
  4855  002DEA  500A               	movf	___lodiv@divisor+1,w,c
  4856  002DEC  5A02               	subwfb	___lodiv@dividend+1,f,c
  4857  002DEE  500B               	movf	___lodiv@divisor+2,w,c
  4858  002DF0  5A03               	subwfb	___lodiv@dividend+2,f,c
  4859  002DF2  500C               	movf	___lodiv@divisor+3,w,c
  4860  002DF4  5A04               	subwfb	___lodiv@dividend+3,f,c
  4861  002DF6  500D               	movf	___lodiv@divisor+4,w,c
  4862  002DF8  5A05               	subwfb	___lodiv@dividend+4,f,c
  4863  002DFA  500E               	movf	___lodiv@divisor+5,w,c
  4864  002DFC  5A06               	subwfb	___lodiv@dividend+5,f,c
  4865  002DFE  500F               	movf	___lodiv@divisor+6,w,c
  4866  002E00  5A07               	subwfb	___lodiv@dividend+6,f,c
  4867  002E02  5010               	movf	___lodiv@divisor+7,w,c
  4868  002E04  5A08               	subwfb	___lodiv@dividend+7,f,c
  4869  002E06  8011               	bsf	___lodiv@quotient,0,c
  4870  002E08                     l3388:
  4871  002E08  FFFF               	dw	65535	; assembler added errata NOP
  4872  002E0A  90D8               	bcf	status,0,c
  4873  002E0C  3210               	rrcf	___lodiv@divisor+7,f,c
  4874  002E0E  320F               	rrcf	___lodiv@divisor+6,f,c
  4875  002E10  320E               	rrcf	___lodiv@divisor+5,f,c
  4876  002E12  320D               	rrcf	___lodiv@divisor+4,f,c
  4877  002E14  320C               	rrcf	___lodiv@divisor+3,f,c
  4878  002E16  320B               	rrcf	___lodiv@divisor+2,f,c
  4879  002E18  320A               	rrcf	___lodiv@divisor+1,f,c
  4880  002E1A  3209               	rrcf	___lodiv@divisor,f,c
  4881  002E1C  2E19               	decfsz	___lodiv@counter,f,c
  4882  002E1E  D7C7               	goto	u3030
  4883  002E20                     l998:
  4884  002E20  FFFF               	dw	65535	; assembler added errata NOP
  4885  002E22  C011  F001         	movff	___lodiv@quotient,?___lodiv
  4886  002E26  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  4887  002E2A  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  4888  002E2E  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  4889  002E32  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  4890  002E36  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  4891  002E3A  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  4892  002E3E  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  4893  002E42  0012               	return		;funcret
  4894  002E44  FFFF               	dw	65535	; errata NOP
  4895  002E46                     __end_of___lodiv:
  4896                           	opt callstack 0
  4897                           
  4898 ;; *************** function _strncmp *****************
  4899 ;; Defined at:
  4900 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4903 ;;		 -> STR_2(3), STR_1(4), 
  4904 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4905 ;;		 -> STR_132(3), STR_128(3), STR_123(3), STR_119(3), 
  4906 ;;		 -> STR_114(3), STR_110(3), STR_105(4), STR_101(4), 
  4907 ;;		 -> STR_96(3), STR_91(3), STR_86(3), STR_81(4), 
  4908 ;;		 -> STR_76(3), STR_71(3), STR_66(3), STR_61(4), 
  4909 ;;		 -> STR_56(3), STR_51(3), STR_46(3), STR_41(4), 
  4910 ;;		 -> STR_36(3), STR_32(3), STR_27(3), STR_23(3), 
  4911 ;;		 -> STR_18(3), STR_14(3), STR_9(4), STR_5(4), 
  4912 ;;  n               2    4[COMRAM] unsigned int 
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4915 ;;		 -> STR_132(3), STR_128(3), STR_123(3), STR_119(3), 
  4916 ;;		 -> STR_114(3), STR_110(3), STR_105(4), STR_101(4), 
  4917 ;;		 -> STR_96(3), STR_91(3), STR_86(3), STR_81(4), 
  4918 ;;		 -> STR_76(3), STR_71(3), STR_66(3), STR_61(4), 
  4919 ;;		 -> STR_56(3), STR_51(3), STR_46(3), STR_41(4), 
  4920 ;;		 -> STR_36(3), STR_32(3), STR_27(3), STR_23(3), 
  4921 ;;		 -> STR_18(3), STR_14(3), STR_9(4), STR_5(4), 
  4922 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4923 ;;		 -> STR_2(3), STR_1(4), 
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  2    0[COMRAM] int 
  4926 ;; Registers used:
  4927 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4933 ;;      Params:         6       0       0       0       0       0       0
  4934 ;;      Locals:         4       0       0       0       0       0       0
  4935 ;;      Temps:          1       0       0       0       0       0       0
  4936 ;;      Totals:        11       0       0       0       0       0       0
  4937 ;;Total ram usage:       11 bytes
  4938 ;; Hardware stack levels used:    1
  4939 ;; Hardware stack levels required when called:    2
  4940 ;; This function calls:
  4941 ;;		Nothing
  4942 ;; This function is called by:
  4943 ;;		_vfpfcnvrt
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947                           	psect	text14
  4948  0030A6                     __ptext14:
  4949                           	opt callstack 0
  4950  0030A6                     _strncmp:
  4951                           	opt callstack 0
  4952  0030A6  FFFF               	dw	65535	; assembler added errata NOP
  4953                           
  4954                           ;incstack = 0
  4955  0030A8  C001  F008         	movff	strncmp@_l,strncmp@l
  4956  0030AC  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4957  0030B0  C003  F00A         	movff	strncmp@_r,strncmp@r
  4958  0030B4  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4959  0030B8  0605               	decf	strncmp@n,f,c
  4960  0030BA  A0D8               	btfss	status,0,c
  4961  0030BC  0606               	decf	strncmp@n+1,f,c
  4962  0030BE  2805               	incf	strncmp@n,w,c
  4963  0030C0  E110               	bnz	l3738
  4964  0030C2  2806               	incf	strncmp@n+1,w,c
  4965  0030C4  A4D8               	btfss	status,2,c
  4966  0030C6  D00D               	goto	l3738
  4967  0030C8  0E00               	movlw	0
  4968  0030CA  6E02               	movwf	?_strncmp+1,c
  4969  0030CC  0E00               	movlw	0
  4970  0030CE  6E01               	movwf	?_strncmp,c
  4971  0030D0  D048               	goto	l1366
  4972  0030D2                     l3736:
  4973  0030D2  FFFF               	dw	65535	; assembler added errata NOP
  4974  0030D4  4A08               	infsnz	strncmp@l,f,c
  4975  0030D6  2A09               	incf	strncmp@l+1,f,c
  4976  0030D8  4A0A               	infsnz	strncmp@r,f,c
  4977  0030DA  2A0B               	incf	strncmp@r+1,f,c
  4978  0030DC  0605               	decf	strncmp@n,f,c
  4979  0030DE  A0D8               	btfss	status,0,c
  4980  0030E0  0606               	decf	strncmp@n+1,f,c
  4981  0030E2                     l3738:
  4982  0030E2  FFFF               	dw	65535	; assembler added errata NOP
  4983  0030E4  C008  FFF6         	movff	strncmp@l,tblptrl
  4984  0030E8  C009  FFF7         	movff	strncmp@l+1,tblptrh
  4985  0030EC                     	if	0	;tblptru may be non-zero
  4986  0030EC                     	endif
  4987  0030EC                     	if	0	;tblptru may be non-zero
  4988  0030EC                     	endif
  4989  0030EC  0008               	tblrd		*
  4990  0030EE  FFFF               	dw	65535	; errata NOP
  4991  0030F0  50F5               	movf	tablat,w,c
  4992  0030F2  0900               	iorlw	0
  4993  0030F4  B4D8               	btfsc	status,2,c
  4994  0030F6  D020               	goto	u3800
  4995  0030F8  C00A  FFF6         	movff	strncmp@r,tblptrl
  4996  0030FC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4997  003100                     	if	0	;tblptru may be non-zero
  4998  003100                     	endif
  4999  003100                     	if	0	;tblptru may be non-zero
  5000  003100                     	endif
  5001  003100  0008               	tblrd		*
  5002  003102  FFFF               	dw	65535	; errata NOP
  5003  003104  50F5               	movf	tablat,w,c
  5004  003106  0900               	iorlw	0
  5005  003108  B4D8               	btfsc	status,2,c
  5006  00310A  D016               	goto	u3800
  5007  00310C  5005               	movf	strncmp@n,w,c
  5008  00310E  1006               	iorwf	strncmp@n+1,w,c
  5009  003110  B4D8               	btfsc	status,2,c
  5010  003112  D012               	goto	u3800
  5011  003114  C008  FFF6         	movff	strncmp@l,tblptrl
  5012  003118  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5013  00311C                     	if	0	;tblptru may be non-zero
  5014  00311C                     	endif
  5015  00311C                     	if	0	;tblptru may be non-zero
  5016  00311C                     	endif
  5017  00311C  0008               	tblrd		*
  5018  00311E  FFFF               	dw	65535	; errata NOP
  5019  003120  CFF5 F007          	movff	tablat,??_strncmp
  5020  003124  C00A  FFF6         	movff	strncmp@r,tblptrl
  5021  003128  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5022  00312C                     	if	0	;tblptru may be non-zero
  5023  00312C                     	endif
  5024  00312C                     	if	0	;tblptru may be non-zero
  5025  00312C                     	endif
  5026  00312C  0008               	tblrd		*
  5027  00312E  FFFF               	dw	65535	; errata NOP
  5028  003130  50F5               	movf	tablat,w,c
  5029  003132  1807               	xorwf	??_strncmp,w,c
  5030  003134  B4D8               	btfsc	status,2,c
  5031  003136  D7CD               	goto	l3736
  5032  003138                     u3800:
  5033  003138  FFFF               	dw	65535	; assembler added errata NOP
  5034  00313A  C008  FFF6         	movff	strncmp@l,tblptrl
  5035  00313E  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5036  003142                     	if	0	;tblptru may be non-zero
  5037  003142                     	endif
  5038  003142                     	if	0	;tblptru may be non-zero
  5039  003142                     	endif
  5040  003142  0008               	tblrd		*
  5041  003144  FFFF               	dw	65535	; errata NOP
  5042  003146  CFF5 F007          	movff	tablat,??_strncmp
  5043  00314A  C00A  FFF6         	movff	strncmp@r,tblptrl
  5044  00314E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5045  003152                     	if	0	;tblptru may be non-zero
  5046  003152                     	endif
  5047  003152                     	if	0	;tblptru may be non-zero
  5048  003152                     	endif
  5049  003152  0008               	tblrd		*
  5050  003154  FFFF               	dw	65535	; errata NOP
  5051  003156  50F5               	movf	tablat,w,c
  5052  003158  5C07               	subwf	??_strncmp,w,c
  5053  00315A  6E01               	movwf	?_strncmp,c
  5054  00315C  6A02               	clrf	?_strncmp+1,c
  5055  00315E  A0D8               	btfss	status,0,c
  5056  003160  0602               	decf	?_strncmp+1,f,c
  5057  003162                     l1366:
  5058  003162  FFFF               	dw	65535	; assembler added errata NOP
  5059  003164  0012               	return		;funcret
  5060  003166  FFFF               	dw	65535	; errata NOP
  5061  003168                     __end_of_strncmp:
  5062                           	opt callstack 0
  5063                           
  5064 ;; *************** function _stoa *****************
  5065 ;; Defined at:
  5066 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5069 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5070 ;;  s               2   11[COMRAM] PTR unsigned char 
  5071 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;  nuls            7   14[COMRAM] unsigned char [7]
  5074 ;;  l               2   29[COMRAM] int 
  5075 ;;  p               2   27[COMRAM] int 
  5076 ;;  cp              2   25[COMRAM] PTR unsigned char 
  5077 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), 
  5078 ;;  w               2   23[COMRAM] int 
  5079 ;;  i               2   21[COMRAM] int 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  2    9[COMRAM] int 
  5082 ;; Registers used:
  5083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5089 ;;      Params:         4       0       0       0       0       0       0
  5090 ;;      Locals:        17       0       0       0       0       0       0
  5091 ;;      Temps:          1       0       0       0       0       0       0
  5092 ;;      Totals:        22       0       0       0       0       0       0
  5093 ;;Total ram usage:       22 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:    4
  5096 ;; This function calls:
  5097 ;;		_fputc
  5098 ;;		_strlen
  5099 ;; This function is called by:
  5100 ;;		_vfpfcnvrt
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text15
  5105  002AEE                     __ptext15:
  5106                           	opt callstack 0
  5107  002AEE                     _stoa:
  5108                           	opt callstack 0
  5109  002AEE  FFFF               	dw	65535	; assembler added errata NOP
  5110                           
  5111                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  5112                           
  5113                           ;incstack = 0
  5114  002AF0  EE20  F0E5         	lfsr	2,stoa@F1152
  5115  002AF4  EE10  F00F         	lfsr	1,stoa@nuls
  5116  002AF8  0E06               	movlw	6
  5117  002AFA                     u3361:
  5118  002AFA  CFDB FFE3          	movff	plusw2,plusw1
  5119  002AFE  06E8               	decf	wreg,f,c
  5120  002B00  E2FC               	bc	u3361
  5121                           
  5122                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  5123  002B02  C00C  F01A         	movff	stoa@s,stoa@cp
  5124  002B06  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  5125                           
  5126                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  5127  002B0A  501A               	movf	stoa@cp,w,c
  5128  002B0C  101B               	iorwf	stoa@cp+1,w,c
  5129  002B0E  A4D8               	btfss	status,2,c
  5130  002B10  D004               	goto	l3552
  5131                           
  5132                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  5133  002B12  0E0F               	movlw	low stoa@nuls
  5134  002B14  6E1A               	movwf	stoa@cp,c
  5135  002B16  0E00               	movlw	high stoa@nuls
  5136  002B18  6E1B               	movwf	stoa@cp+1,c
  5137  002B1A                     l3552:
  5138  002B1A  FFFF               	dw	65535	; assembler added errata NOP
  5139                           
  5140                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  5141  002B1C  C01A  F001         	movff	stoa@cp,strlen@s
  5142  002B20  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  5143  002B24  EC39  F01C         	call	_strlen	;wreg free
  5144  002B28  C001  F01E         	movff	?_strlen,stoa@l
  5145  002B2C  C002  F01F         	movff	?_strlen+1,stoa@l+1
  5146                           
  5147                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  5148  002B30  C093  F01C         	movff	_prec,stoa@p
  5149  002B34  C094  F01D         	movff	_prec+1,stoa@p+1
  5150                           
  5151                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  5152  002B38  BE1D               	btfsc	stoa@p+1,7,c
  5153  002B3A  D00E               	goto	l407
  5154  002B3C  501E               	movf	stoa@l,w,c
  5155  002B3E  5C1C               	subwf	stoa@p,w,c
  5156  002B40  501D               	movf	stoa@p+1,w,c
  5157  002B42  0A80               	xorlw	128
  5158  002B44  6E0E               	movwf	??_stoa& (0+255),c
  5159  002B46  501F               	movf	stoa@l+1,w,c
  5160  002B48  0A80               	xorlw	128
  5161  002B4A  580E               	subwfb	??_stoa& (0+255),w,c
  5162  002B4C  B0D8               	btfsc	status,0,c
  5163  002B4E  D004               	goto	l407
  5164  002B50  C01C  F01E         	movff	stoa@p,stoa@l
  5165  002B54  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  5166  002B58                     l407:
  5167  002B58  FFFF               	dw	65535	; assembler added errata NOP
  5168                           
  5169                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  5170  002B5A  C01E  F01C         	movff	stoa@l,stoa@p
  5171  002B5E  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  5172                           
  5173                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  5174  002B62  C091  F018         	movff	_width,stoa@w
  5175  002B66  C092  F019         	movff	_width+1,stoa@w+1
  5176                           
  5177                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  5178  002B6A  0100               	movlb	0	; () banked
  5179  002B6C  A195               	btfss	_flags& (0+255),0,b
  5180  002B6E  D00E               	goto	l3566
  5181  002B70  D018               	goto	u3410
  5182  002B72                     l3562:
  5183  002B72  FFFF               	dw	65535	; assembler added errata NOP
  5184                           
  5185                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  5186  002B74  0E00               	movlw	0
  5187  002B76  6E02               	movwf	fputc@c+1,c
  5188  002B78  0E20               	movlw	32
  5189  002B7A  6E01               	movwf	fputc@c,c
  5190  002B7C  C00A  F003         	movff	stoa@fp,fputc@fp
  5191  002B80  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5192  002B84  EC12  F019         	call	_fputc	;wreg free
  5193                           
  5194                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  5195  002B88  4A1E               	infsnz	stoa@l,f,c
  5196  002B8A  2A1F               	incf	stoa@l+1,f,c
  5197  002B8C                     l3566:
  5198  002B8C  FFFF               	dw	65535	; assembler added errata NOP
  5199                           
  5200                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  5201  002B8E  5018               	movf	stoa@w,w,c
  5202  002B90  5C1E               	subwf	stoa@l,w,c
  5203  002B92  501F               	movf	stoa@l+1,w,c
  5204  002B94  0A80               	xorlw	128
  5205  002B96  6E0E               	movwf	??_stoa& (0+255),c
  5206  002B98  5019               	movf	stoa@w+1,w,c
  5207  002B9A  0A80               	xorlw	128
  5208  002B9C  580E               	subwfb	??_stoa& (0+255),w,c
  5209  002B9E  A0D8               	btfss	status,0,c
  5210  002BA0  D7E8               	goto	l3562
  5211  002BA2                     u3410:
  5212  002BA2  FFFF               	dw	65535	; assembler added errata NOP
  5213                           
  5214                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  5215  002BA4  0E00               	movlw	0
  5216  002BA6  6E17               	movwf	stoa@i+1,c
  5217  002BA8  0E00               	movlw	0
  5218  002BAA  6E16               	movwf	stoa@i,c
  5219                           
  5220                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  5221  002BAC  D014               	goto	l3576
  5222  002BAE                     l3570:
  5223  002BAE  FFFF               	dw	65535	; assembler added errata NOP
  5224                           
  5225                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  5226  002BB0  C01A  FFD9         	movff	stoa@cp,fsr2l
  5227  002BB4  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  5228  002BB8  50DF               	movf	indf2,w,c
  5229  002BBA  6E0E               	movwf	??_stoa& (0+255),c
  5230  002BBC  500E               	movf	??_stoa,w,c
  5231  002BBE  6E01               	movwf	fputc@c,c
  5232  002BC0  6A02               	clrf	fputc@c+1,c
  5233  002BC2  C00A  F003         	movff	stoa@fp,fputc@fp
  5234  002BC6  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5235  002BCA  EC12  F019         	call	_fputc	;wreg free
  5236                           
  5237                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  5238  002BCE  4A1A               	infsnz	stoa@cp,f,c
  5239  002BD0  2A1B               	incf	stoa@cp+1,f,c
  5240                           
  5241                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  5242  002BD2  4A16               	infsnz	stoa@i,f,c
  5243  002BD4  2A17               	incf	stoa@i+1,f,c
  5244  002BD6                     l3576:
  5245  002BD6  FFFF               	dw	65535	; assembler added errata NOP
  5246                           
  5247                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  5248  002BD8  501C               	movf	stoa@p,w,c
  5249  002BDA  5C16               	subwf	stoa@i,w,c
  5250  002BDC  5017               	movf	stoa@i+1,w,c
  5251  002BDE  0A80               	xorlw	128
  5252  002BE0  6E0E               	movwf	??_stoa& (0+255),c
  5253  002BE2  501D               	movf	stoa@p+1,w,c
  5254  002BE4  0A80               	xorlw	128
  5255  002BE6  580E               	subwfb	??_stoa& (0+255),w,c
  5256  002BE8  A0D8               	btfss	status,0,c
  5257  002BEA  D7E1               	goto	l3570
  5258                           
  5259                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  5260  002BEC  0100               	movlb	0	; () banked
  5261  002BEE  B195               	btfsc	_flags& (0+255),0,b
  5262  002BF0  D00E               	goto	l3584
  5263  002BF2  D018               	goto	u3440
  5264  002BF4                     l3580:
  5265  002BF4  FFFF               	dw	65535	; assembler added errata NOP
  5266                           
  5267                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  5268  002BF6  0E00               	movlw	0
  5269  002BF8  6E02               	movwf	fputc@c+1,c
  5270  002BFA  0E20               	movlw	32
  5271  002BFC  6E01               	movwf	fputc@c,c
  5272  002BFE  C00A  F003         	movff	stoa@fp,fputc@fp
  5273  002C02  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5274  002C06  EC12  F019         	call	_fputc	;wreg free
  5275                           
  5276                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  5277  002C0A  4A1E               	infsnz	stoa@l,f,c
  5278  002C0C  2A1F               	incf	stoa@l+1,f,c
  5279  002C0E                     l3584:
  5280  002C0E  FFFF               	dw	65535	; assembler added errata NOP
  5281                           
  5282                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  5283  002C10  5018               	movf	stoa@w,w,c
  5284  002C12  5C1E               	subwf	stoa@l,w,c
  5285  002C14  501F               	movf	stoa@l+1,w,c
  5286  002C16  0A80               	xorlw	128
  5287  002C18  6E0E               	movwf	??_stoa& (0+255),c
  5288  002C1A  5019               	movf	stoa@w+1,w,c
  5289  002C1C  0A80               	xorlw	128
  5290  002C1E  580E               	subwfb	??_stoa& (0+255),w,c
  5291  002C20  A0D8               	btfss	status,0,c
  5292  002C22  D7E8               	goto	l3580
  5293  002C24                     u3440:
  5294  002C24  FFFF               	dw	65535	; assembler added errata NOP
  5295                           
  5296                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  5297                           
  5298                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 586:     }
  5299  002C26  C01E  F00A         	movff	stoa@l,?_stoa
  5300  002C2A  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  5301  002C2E  0012               	return		;funcret
  5302  002C30  FFFF               	dw	65535	; errata NOP
  5303  002C32                     __end_of_stoa:
  5304                           	opt callstack 0
  5305                           
  5306 ;; *************** function _otoa *****************
  5307 ;; Defined at:
  5308 ;;		line 507 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5311 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5312 ;;  d               8   29[COMRAM] unsigned long long 
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;  n               8   51[COMRAM] unsigned long long 
  5315 ;;  i               2   59[COMRAM] int 
  5316 ;;  w               2   49[COMRAM] int 
  5317 ;;  t               2   47[COMRAM] int 
  5318 ;;  p               2   45[COMRAM] int 
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  2   27[COMRAM] int 
  5321 ;; Registers used:
  5322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5328 ;;      Params:        10       0       0       0       0       0       0
  5329 ;;      Locals:        16       0       0       0       0       0       0
  5330 ;;      Temps:          8       0       0       0       0       0       0
  5331 ;;      Totals:        34       0       0       0       0       0       0
  5332 ;;Total ram usage:       34 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; Hardware stack levels required when called:    6
  5335 ;; This function calls:
  5336 ;;		_pad
  5337 ;; This function is called by:
  5338 ;;		_vfpfcnvrt
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           	psect	text16
  5343  002536                     __ptext16:
  5344                           	opt callstack 0
  5345  002536                     _otoa:
  5346                           	opt callstack 0
  5347  002536  FFFF               	dw	65535	; assembler added errata NOP
  5348                           
  5349                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 507: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 508: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 509:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 510:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 513:     if (!(prec < 0)) {
  5350                           
  5351                           ;incstack = 0
  5352  002538  0100               	movlb	0	; () banked
  5353  00253A  AF94               	btfss	(_prec+1)& (0+255),7,b
  5354                           
  5355                           ; BSR set to: 0
  5356                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 514:         flags &= ~(1 << 
      +                          1);
  5357  00253C  9395               	bcf	_flags& (0+255),1,b
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 516:     p = (0 < prec) ? pre
      +                          c : 1;
  5361  00253E  BF94               	btfsc	(_prec+1)& (0+255),7,b
  5362  002540  D005               	goto	u3270
  5363  002542  5194               	movf	(_prec+1)& (0+255),w,b
  5364  002544  E109               	bnz	l387
  5365  002546  0593               	decf	_prec& (0+255),w,b
  5366  002548  B0D8               	btfsc	status,0,c
  5367  00254A  D006               	goto	l387
  5368  00254C                     u3270:
  5369  00254C  FFFF               	dw	65535	; assembler added errata NOP
  5370                           
  5371                           ; BSR set to: 0
  5372  00254E  0E00               	movlw	0
  5373  002550  6E2F               	movwf	otoa@p+1,c
  5374  002552  0E01               	movlw	1
  5375  002554  6E2E               	movwf	otoa@p,c
  5376  002556  D005               	goto	l389
  5377  002558                     l387:
  5378  002558  FFFF               	dw	65535	; assembler added errata NOP
  5379                           
  5380                           ; BSR set to: 0
  5381  00255A  C093  F02E         	movff	_prec,otoa@p
  5382  00255E  C094  F02F         	movff	_prec+1,otoa@p+1
  5383  002562                     l389:
  5384  002562  FFFF               	dw	65535	; assembler added errata NOP
  5385                           
  5386                           ; BSR set to: 0
  5387                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 517:     w = width;
  5388  002564  C091  F032         	movff	_width,otoa@w
  5389  002568  C092  F033         	movff	_width+1,otoa@w+1
  5390                           
  5391                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 520:     n = d;
  5392  00256C  C01E  F034         	movff	otoa@d,otoa@n
  5393  002570  C01F  F035         	movff	otoa@d+1,otoa@n+1
  5394  002574  C020  F036         	movff	otoa@d+2,otoa@n+2
  5395  002578  C021  F037         	movff	otoa@d+3,otoa@n+3
  5396  00257C  C022  F038         	movff	otoa@d+4,otoa@n+4
  5397  002580  C023  F039         	movff	otoa@d+5,otoa@n+5
  5398  002584  C024  F03A         	movff	otoa@d+6,otoa@n+6
  5399  002588  C025  F03B         	movff	otoa@d+7,otoa@n+7
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 521:     i = sizeof(dbuf) - 1
      +                          ;
  5403  00258C  0E00               	movlw	0
  5404  00258E  6E3D               	movwf	otoa@i+1,c
  5405  002590  0E1F               	movlw	31
  5406  002592  6E3C               	movwf	otoa@i,c
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 522:     dbuf[i] = '\0';
  5410  002594  0E00               	movlw	0
  5411  002596  6FBA               	movwf	(_dbuf+31)& (0+255),b
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 523:     t = 0;
  5415  002598  0E00               	movlw	0
  5416  00259A  6E31               	movwf	otoa@t+1,c
  5417  00259C  0E00               	movlw	0
  5418  00259E  6E30               	movwf	otoa@t,c
  5419                           
  5420                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5421  0025A0  D046               	goto	l3522
  5422  0025A2                     l3510:
  5423  0025A2  FFFF               	dw	65535	; assembler added errata NOP
  5424                           
  5425                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 525:         --i;
  5426  0025A4  063C               	decf	otoa@i,f,c
  5427  0025A6  A0D8               	btfss	status,0,c
  5428  0025A8  063D               	decf	otoa@i+1,f,c
  5429                           
  5430                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 526:         t = n & 07;
  5431  0025AA  0E07               	movlw	7
  5432  0025AC  1434               	andwf	otoa@n,w,c
  5433  0025AE  6E30               	movwf	otoa@t,c
  5434  0025B0  6A31               	clrf	otoa@t+1,c
  5435                           
  5436                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 527:         dbuf[i] = '0' + 
      +                          t;
  5437  0025B2  0E9B               	movlw	low _dbuf
  5438  0025B4  243C               	addwf	otoa@i,w,c
  5439  0025B6  6ED9               	movwf	fsr2l,c
  5440  0025B8  0E00               	movlw	high _dbuf
  5441  0025BA  203D               	addwfc	otoa@i+1,w,c
  5442  0025BC  6EDA               	movwf	fsr2h,c
  5443  0025BE  5030               	movf	otoa@t,w,c
  5444  0025C0  0F30               	addlw	48
  5445  0025C2  6EDF               	movwf	indf2,c
  5446                           
  5447                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 528:         --p;
  5448  0025C4  062E               	decf	otoa@p,f,c
  5449  0025C6  A0D8               	btfss	status,0,c
  5450  0025C8  062F               	decf	otoa@p+1,f,c
  5451                           
  5452                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 529:         --w;
  5453  0025CA  0632               	decf	otoa@w,f,c
  5454  0025CC  A0D8               	btfss	status,0,c
  5455  0025CE  0633               	decf	otoa@w+1,f,c
  5456                           
  5457                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 530:         n = n >> 3;
  5458  0025D0  C034  F026         	movff	otoa@n,??_otoa
  5459  0025D4  C035  F027         	movff	otoa@n+1,??_otoa+1
  5460  0025D8  C036  F028         	movff	otoa@n+2,??_otoa+2
  5461  0025DC  C037  F029         	movff	otoa@n+3,??_otoa+3
  5462  0025E0  C038  F02A         	movff	otoa@n+4,??_otoa+4
  5463  0025E4  C039  F02B         	movff	otoa@n+5,??_otoa+5
  5464  0025E8  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  5465  0025EC  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  5466  0025F0  0E04               	movlw	4
  5467  0025F2  D00A               	goto	u3280
  5468  0025F4                     u3285:
  5469  0025F4  FFFF               	dw	65535	; assembler added errata NOP
  5470  0025F6  90D8               	bcf	status,0,c
  5471  0025F8  322D               	rrcf	??_otoa+7,f,c
  5472  0025FA  322C               	rrcf	??_otoa+6,f,c
  5473  0025FC  322B               	rrcf	??_otoa+5,f,c
  5474  0025FE  322A               	rrcf	??_otoa+4,f,c
  5475  002600  3229               	rrcf	??_otoa+3,f,c
  5476  002602  3228               	rrcf	??_otoa+2,f,c
  5477  002604  3227               	rrcf	??_otoa+1,f,c
  5478  002606  3226               	rrcf	??_otoa,f,c
  5479  002608                     u3280:
  5480  002608  FFFF               	dw	65535	; assembler added errata NOP
  5481  00260A  2EE8               	decfsz	wreg,f,c
  5482  00260C  D7F3               	goto	u3285
  5483  00260E  C026  F034         	movff	??_otoa,otoa@n
  5484  002612  C027  F035         	movff	??_otoa+1,otoa@n+1
  5485  002616  C028  F036         	movff	??_otoa+2,otoa@n+2
  5486  00261A  C029  F037         	movff	??_otoa+3,otoa@n+3
  5487  00261E  C02A  F038         	movff	??_otoa+4,otoa@n+4
  5488  002622  C02B  F039         	movff	??_otoa+5,otoa@n+5
  5489  002626  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  5490  00262A  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  5491  00262E                     l3522:
  5492  00262E  FFFF               	dw	65535	; assembler added errata NOP
  5493                           
  5494                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5495  002630  BE3D               	btfsc	otoa@i+1,7,c
  5496  002632  D021               	goto	u3330
  5497  002634  503D               	movf	otoa@i+1,w,c
  5498  002636  E103               	bnz	u3290
  5499  002638  043C               	decf	otoa@i,w,c
  5500  00263A  A0D8               	btfss	status,0,c
  5501  00263C  D01C               	goto	u3330
  5502  00263E                     u3290:
  5503  00263E  5034               	movf	otoa@n,w,c
  5504  002640  1035               	iorwf	otoa@n+1,w,c
  5505  002642  1036               	iorwf	otoa@n+2,w,c
  5506  002644  1037               	iorwf	otoa@n+3,w,c
  5507  002646  1038               	iorwf	otoa@n+4,w,c
  5508  002648  1039               	iorwf	otoa@n+5,w,c
  5509  00264A  103A               	iorwf	otoa@n+6,w,c
  5510  00264C  103B               	iorwf	otoa@n+7,w,c
  5511  00264E  A4D8               	btfss	status,2,c
  5512  002650  D7A8               	goto	l3510
  5513  002652  BE2F               	btfsc	otoa@p+1,7,c
  5514  002654  D005               	goto	u3310
  5515  002656  502F               	movf	otoa@p+1,w,c
  5516  002658  E1A4               	bnz	l3510
  5517  00265A  042E               	decf	otoa@p,w,c
  5518  00265C  B0D8               	btfsc	status,0,c
  5519  00265E  D7A1               	goto	l3510
  5520  002660                     u3310:
  5521  002660  FFFF               	dw	65535	; assembler added errata NOP
  5522  002662  BE33               	btfsc	otoa@w+1,7,c
  5523  002664  D008               	goto	u3330
  5524  002666  5033               	movf	otoa@w+1,w,c
  5525  002668  E103               	bnz	u3320
  5526  00266A  0432               	decf	otoa@w,w,c
  5527  00266C  A0D8               	btfss	status,0,c
  5528  00266E  D003               	goto	u3330
  5529  002670                     u3320:
  5530  002670  0100               	movlb	0	; () banked
  5531  002672  B395               	btfsc	_flags& (0+255),1,b
  5532  002674  D796               	goto	l3510
  5533  002676                     u3330:
  5534  002676  FFFF               	dw	65535	; assembler added errata NOP
  5535                           
  5536                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 534:     if ((flags & (1 << 4
      +                          )) && t) {
  5537  002678  0100               	movlb	0	; () banked
  5538  00267A  A995               	btfss	_flags& (0+255),4,b
  5539  00267C  D012               	goto	l3540
  5540                           
  5541                           ; BSR set to: 0
  5542  00267E  5030               	movf	otoa@t,w,c
  5543  002680  1031               	iorwf	otoa@t+1,w,c
  5544  002682  B4D8               	btfsc	status,2,c
  5545  002684  D00E               	goto	l3540
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 535:         --i;
  5549  002686  063C               	decf	otoa@i,f,c
  5550  002688  A0D8               	btfss	status,0,c
  5551  00268A  063D               	decf	otoa@i+1,f,c
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 536:         dbuf[i] = '0';
  5555  00268C  0E9B               	movlw	low _dbuf
  5556  00268E  243C               	addwf	otoa@i,w,c
  5557  002690  6ED9               	movwf	fsr2l,c
  5558  002692  0E00               	movlw	high _dbuf
  5559  002694  203D               	addwfc	otoa@i+1,w,c
  5560  002696  6EDA               	movwf	fsr2h,c
  5561  002698  0E30               	movlw	48
  5562  00269A  6EDF               	movwf	indf2,c
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 537:         --w;
  5566  00269C  0632               	decf	otoa@w,f,c
  5567  00269E  A0D8               	btfss	status,0,c
  5568  0026A0  0633               	decf	otoa@w+1,f,c
  5569  0026A2                     l3540:
  5570  0026A2  FFFF               	dw	65535	; assembler added errata NOP
  5571                           
  5572                           ; BSR set to: 0
  5573                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 541:     return pad(fp, &dbuf
      +                          [i], w);
  5574  0026A4  C01C  F011         	movff	otoa@fp,pad@fp
  5575  0026A8  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  5576  0026AC  0E9B               	movlw	low _dbuf
  5577  0026AE  243C               	addwf	otoa@i,w,c
  5578  0026B0  6E13               	movwf	pad@buf,c
  5579  0026B2  0E00               	movlw	high _dbuf
  5580  0026B4  203D               	addwfc	otoa@i+1,w,c
  5581  0026B6  6E14               	movwf	pad@buf+1,c
  5582  0026B8  C032  F015         	movff	otoa@w,pad@p
  5583  0026BC  C033  F016         	movff	otoa@w+1,pad@p+1
  5584  0026C0  EC68  F019         	call	_pad	;wreg free
  5585  0026C4  C011  F01C         	movff	?_pad,?_otoa
  5586  0026C8  C012  F01D         	movff	?_pad+1,?_otoa+1
  5587  0026CC  0012               	return		;funcret
  5588  0026CE  FFFF               	dw	65535	; errata NOP
  5589  0026D0                     __end_of_otoa:
  5590                           	opt callstack 0
  5591                           
  5592 ;; *************** function _dtoa *****************
  5593 ;; Defined at:
  5594 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5597 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5598 ;;  d               8   29[COMRAM] long long 
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;  n               8   53[COMRAM] long long 
  5601 ;;  i               2   61[COMRAM] int 
  5602 ;;  s               2   51[COMRAM] int 
  5603 ;;  w               2   49[COMRAM] int 
  5604 ;;  p               2   47[COMRAM] int 
  5605 ;; Return value:  Size  Location     Type
  5606 ;;                  2   27[COMRAM] int 
  5607 ;; Registers used:
  5608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5609 ;; Tracked objects:
  5610 ;;		On entry : 0/0
  5611 ;;		On exit  : 0/0
  5612 ;;		Unchanged: 0/0
  5613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5614 ;;      Params:        10       0       0       0       0       0       0
  5615 ;;      Locals:        18       0       0       0       0       0       0
  5616 ;;      Temps:          8       0       0       0       0       0       0
  5617 ;;      Totals:        36       0       0       0       0       0       0
  5618 ;;Total ram usage:       36 bytes
  5619 ;; Hardware stack levels used:    1
  5620 ;; Hardware stack levels required when called:    6
  5621 ;; This function calls:
  5622 ;;		___aodiv
  5623 ;;		___aomod
  5624 ;;		_abs
  5625 ;;		_pad
  5626 ;; This function is called by:
  5627 ;;		_vfpfcnvrt
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           	psect	text17
  5632  001EB2                     __ptext17:
  5633                           	opt callstack 0
  5634  001EB2                     _dtoa:
  5635                           	opt callstack 0
  5636  001EB2  FFFF               	dw	65535	; assembler added errata NOP
  5637                           
  5638                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  5639                           
  5640                           ;incstack = 0
  5641  001EB4  C01E  F036         	movff	dtoa@d,dtoa@n
  5642  001EB8  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5643  001EBC  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5644  001EC0  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5645  001EC4  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5646  001EC8  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5647  001ECC  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5648  001ED0  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5649                           
  5650                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  5651  001ED4  AE3D               	btfss	dtoa@n+7,7,c
  5652  001ED6  D002               	goto	u3110
  5653  001ED8  0E01               	movlw	1
  5654  001EDA  D002               	goto	u3120
  5655  001EDC                     u3110:
  5656  001EDC  FFFF               	dw	65535	; assembler added errata NOP
  5657  001EDE  0E00               	movlw	0
  5658  001EE0                     u3120:
  5659  001EE0  FFFF               	dw	65535	; assembler added errata NOP
  5660  001EE2  6E34               	movwf	dtoa@s,c
  5661  001EE4  6A35               	clrf	dtoa@s+1,c
  5662                           
  5663                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  5664  001EE6  5034               	movf	dtoa@s,w,c
  5665  001EE8  1035               	iorwf	dtoa@s+1,w,c
  5666  001EEA  B4D8               	btfsc	status,2,c
  5667  001EEC  D010               	goto	l3440
  5668                           
  5669                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  5670  001EEE  1E3D               	comf	dtoa@n+7,f,c
  5671  001EF0  1E3C               	comf	dtoa@n+6,f,c
  5672  001EF2  1E3B               	comf	dtoa@n+5,f,c
  5673  001EF4  1E3A               	comf	dtoa@n+4,f,c
  5674  001EF6  1E39               	comf	dtoa@n+3,f,c
  5675  001EF8  1E38               	comf	dtoa@n+2,f,c
  5676  001EFA  1E37               	comf	dtoa@n+1,f,c
  5677  001EFC  6C36               	negf	dtoa@n,c
  5678  001EFE  0E00               	movlw	0
  5679  001F00  2237               	addwfc	dtoa@n+1,f,c
  5680  001F02  2238               	addwfc	dtoa@n+2,f,c
  5681  001F04  2239               	addwfc	dtoa@n+3,f,c
  5682  001F06  223A               	addwfc	dtoa@n+4,f,c
  5683  001F08  223B               	addwfc	dtoa@n+5,f,c
  5684  001F0A  223C               	addwfc	dtoa@n+6,f,c
  5685  001F0C  223D               	addwfc	dtoa@n+7,f,c
  5686  001F0E                     l3440:
  5687  001F0E  FFFF               	dw	65535	; assembler added errata NOP
  5688                           
  5689                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  5690  001F10  0100               	movlb	0	; () banked
  5691  001F12  AF94               	btfss	(_prec+1)& (0+255),7,b
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  5695  001F14  9395               	bcf	_flags& (0+255),1,b
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  5699  001F16  BF94               	btfsc	(_prec+1)& (0+255),7,b
  5700  001F18  D005               	goto	u3150
  5701  001F1A  5194               	movf	(_prec+1)& (0+255),w,b
  5702  001F1C  E109               	bnz	l362
  5703  001F1E  0593               	decf	_prec& (0+255),w,b
  5704  001F20  B0D8               	btfsc	status,0,c
  5705  001F22  D006               	goto	l362
  5706  001F24                     u3150:
  5707  001F24  FFFF               	dw	65535	; assembler added errata NOP
  5708                           
  5709                           ; BSR set to: 0
  5710  001F26  0E00               	movlw	0
  5711  001F28  6E31               	movwf	dtoa@p+1,c
  5712  001F2A  0E01               	movlw	1
  5713  001F2C  6E30               	movwf	dtoa@p,c
  5714  001F2E  D005               	goto	l364
  5715  001F30                     l362:
  5716  001F30  FFFF               	dw	65535	; assembler added errata NOP
  5717                           
  5718                           ; BSR set to: 0
  5719  001F32  C093  F030         	movff	_prec,dtoa@p
  5720  001F36  C094  F031         	movff	_prec+1,dtoa@p+1
  5721  001F3A                     l364:
  5722  001F3A  FFFF               	dw	65535	; assembler added errata NOP
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  5726  001F3C  C091  F032         	movff	_width,dtoa@w
  5727  001F40  C092  F033         	movff	_width+1,dtoa@w+1
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  5731  001F44  5034               	movf	dtoa@s,w,c
  5732  001F46  1035               	iorwf	dtoa@s+1,w,c
  5733  001F48  A4D8               	btfss	status,2,c
  5734  001F4A  D002               	goto	u3170
  5735                           
  5736                           ; BSR set to: 0
  5737  001F4C  A595               	btfss	_flags& (0+255),2,b
  5738  001F4E  D004               	goto	l3454
  5739  001F50                     u3170:
  5740  001F50  FFFF               	dw	65535	; assembler added errata NOP
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  5744  001F52  0632               	decf	dtoa@w,f,c
  5745  001F54  A0D8               	btfss	status,0,c
  5746  001F56  0633               	decf	dtoa@w+1,f,c
  5747  001F58                     l3454:
  5748  001F58  FFFF               	dw	65535	; assembler added errata NOP
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  5752  001F5A  0E00               	movlw	0
  5753  001F5C  6E3F               	movwf	dtoa@i+1,c
  5754  001F5E  0E1F               	movlw	31
  5755  001F60  6E3E               	movwf	dtoa@i,c
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  5759  001F62  0E00               	movlw	0
  5760  001F64  6FBA               	movwf	(_dbuf+31)& (0+255),b
  5761                           
  5762                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5763  001F66  D07D               	goto	l3468
  5764  001F68                     l3458:
  5765  001F68  FFFF               	dw	65535	; assembler added errata NOP
  5766                           
  5767                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  5768  001F6A  063E               	decf	dtoa@i,f,c
  5769  001F6C  A0D8               	btfss	status,0,c
  5770  001F6E  063F               	decf	dtoa@i+1,f,c
  5771                           
  5772                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  5773  001F70  0E9B               	movlw	low _dbuf
  5774  001F72  243E               	addwf	dtoa@i,w,c
  5775  001F74  6ED9               	movwf	fsr2l,c
  5776  001F76  0E00               	movlw	high _dbuf
  5777  001F78  203F               	addwfc	dtoa@i+1,w,c
  5778  001F7A  6EDA               	movwf	fsr2h,c
  5779  001F7C  C036  F001         	movff	dtoa@n,___aomod@dividend
  5780  001F80  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5781  001F84  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5782  001F88  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5783  001F8C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5784  001F90  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5785  001F94  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5786  001F98  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5787  001F9C  0E0A               	movlw	10
  5788  001F9E  6E09               	movwf	___aomod@divisor,c
  5789  001FA0  0E00               	movlw	0
  5790  001FA2  6E0A               	movwf	___aomod@divisor+1,c
  5791  001FA4  0E00               	movlw	0
  5792  001FA6  6E0B               	movwf	___aomod@divisor+2,c
  5793  001FA8  0E00               	movlw	0
  5794  001FAA  6E0C               	movwf	___aomod@divisor+3,c
  5795  001FAC  0E00               	movlw	0
  5796  001FAE  6E0D               	movwf	___aomod@divisor+4,c
  5797  001FB0  0E00               	movlw	0
  5798  001FB2  6E0E               	movwf	___aomod@divisor+5,c
  5799  001FB4  0E00               	movlw	0
  5800  001FB6  6E0F               	movwf	___aomod@divisor+6,c
  5801  001FB8  0E00               	movlw	0
  5802  001FBA  6E10               	movwf	___aomod@divisor+7,c
  5803  001FBC  EC19  F016         	call	___aomod	;wreg free
  5804  001FC0  C001  F026         	movff	?___aomod,??_dtoa
  5805  001FC4  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5806  001FC8  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5807  001FCC  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5808  001FD0  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5809  001FD4  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5810  001FD8  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5811  001FDC  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5812  001FE0  C026  F013         	movff	??_dtoa,abs@a
  5813  001FE4  C028  F014         	movff	??_dtoa+2,abs@a+1
  5814  001FE8  ECC7  F01B         	call	_abs	;wreg free
  5815  001FEC  5013               	movf	?_abs,w,c
  5816  001FEE  0F30               	addlw	48
  5817  001FF0  6EDF               	movwf	indf2,c
  5818                           
  5819                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  5820  001FF2  0630               	decf	dtoa@p,f,c
  5821  001FF4  A0D8               	btfss	status,0,c
  5822  001FF6  0631               	decf	dtoa@p+1,f,c
  5823                           
  5824                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  5825  001FF8  0632               	decf	dtoa@w,f,c
  5826  001FFA  A0D8               	btfss	status,0,c
  5827  001FFC  0633               	decf	dtoa@w+1,f,c
  5828                           
  5829                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  5830  001FFE  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5831  002002  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5832  002006  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5833  00200A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5834  00200E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5835  002012  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5836  002016  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5837  00201A  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5838  00201E  0E0A               	movlw	10
  5839  002020  6E09               	movwf	___aodiv@divisor,c
  5840  002022  0E00               	movlw	0
  5841  002024  6E0A               	movwf	___aodiv@divisor+1,c
  5842  002026  0E00               	movlw	0
  5843  002028  6E0B               	movwf	___aodiv@divisor+2,c
  5844  00202A  0E00               	movlw	0
  5845  00202C  6E0C               	movwf	___aodiv@divisor+3,c
  5846  00202E  0E00               	movlw	0
  5847  002030  6E0D               	movwf	___aodiv@divisor+4,c
  5848  002032  0E00               	movlw	0
  5849  002034  6E0E               	movwf	___aodiv@divisor+5,c
  5850  002036  0E00               	movlw	0
  5851  002038  6E0F               	movwf	___aodiv@divisor+6,c
  5852  00203A  0E00               	movlw	0
  5853  00203C  6E10               	movwf	___aodiv@divisor+7,c
  5854  00203E  EC1B  F014         	call	___aodiv	;wreg free
  5855  002042  C001  F036         	movff	?___aodiv,dtoa@n
  5856  002046  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5857  00204A  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5858  00204E  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5859  002052  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5860  002056  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5861  00205A  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5862  00205E  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5863  002062                     l3468:
  5864  002062  FFFF               	dw	65535	; assembler added errata NOP
  5865                           
  5866                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5867  002064  BE3F               	btfsc	dtoa@i+1,7,c
  5868  002066  D021               	goto	u3220
  5869  002068  503F               	movf	dtoa@i+1,w,c
  5870  00206A  E103               	bnz	u3180
  5871  00206C  043E               	decf	dtoa@i,w,c
  5872  00206E  A0D8               	btfss	status,0,c
  5873  002070  D01C               	goto	u3220
  5874  002072                     u3180:
  5875  002072  5036               	movf	dtoa@n,w,c
  5876  002074  1037               	iorwf	dtoa@n+1,w,c
  5877  002076  1038               	iorwf	dtoa@n+2,w,c
  5878  002078  1039               	iorwf	dtoa@n+3,w,c
  5879  00207A  103A               	iorwf	dtoa@n+4,w,c
  5880  00207C  103B               	iorwf	dtoa@n+5,w,c
  5881  00207E  103C               	iorwf	dtoa@n+6,w,c
  5882  002080  103D               	iorwf	dtoa@n+7,w,c
  5883  002082  A4D8               	btfss	status,2,c
  5884  002084  D771               	goto	l3458
  5885  002086  BE31               	btfsc	dtoa@p+1,7,c
  5886  002088  D005               	goto	u3200
  5887  00208A  5031               	movf	dtoa@p+1,w,c
  5888  00208C  E102               	bnz	u3201
  5889  00208E  0430               	decf	dtoa@p,w,c
  5890  002090  B0D8               	btfsc	status,0,c
  5891  002092                     u3201:
  5892  002092  D76A               	goto	l3458
  5893  002094                     u3200:
  5894  002094  FFFF               	dw	65535	; assembler added errata NOP
  5895  002096  BE33               	btfsc	dtoa@w+1,7,c
  5896  002098  D008               	goto	u3220
  5897  00209A  5033               	movf	dtoa@w+1,w,c
  5898  00209C  E103               	bnz	u3210
  5899  00209E  0432               	decf	dtoa@w,w,c
  5900  0020A0  A0D8               	btfss	status,0,c
  5901  0020A2  D003               	goto	u3220
  5902  0020A4                     u3210:
  5903  0020A4  0100               	movlb	0	; () banked
  5904  0020A6  B395               	btfsc	_flags& (0+255),1,b
  5905  0020A8  D75F               	goto	l3458
  5906  0020AA                     u3220:
  5907  0020AA  FFFF               	dw	65535	; assembler added errata NOP
  5908                           
  5909                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  5910  0020AC  5034               	movf	dtoa@s,w,c
  5911  0020AE  1035               	iorwf	dtoa@s+1,w,c
  5912  0020B0  A4D8               	btfss	status,2,c
  5913  0020B2  D003               	goto	u3240
  5914  0020B4  0100               	movlb	0	; () banked
  5915  0020B6  A595               	btfss	_flags& (0+255),2,b
  5916  0020B8  D01A               	goto	l3492
  5917  0020BA                     u3240:
  5918  0020BA  FFFF               	dw	65535	; assembler added errata NOP
  5919                           
  5920                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  5921  0020BC  063E               	decf	dtoa@i,f,c
  5922  0020BE  A0D8               	btfss	status,0,c
  5923  0020C0  063F               	decf	dtoa@i+1,f,c
  5924                           
  5925                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  5926  0020C2  5034               	movf	dtoa@s,w,c
  5927  0020C4  1035               	iorwf	dtoa@s+1,w,c
  5928  0020C6  A4D8               	btfss	status,2,c
  5929  0020C8  D004               	goto	l3488
  5930  0020CA  0E00               	movlw	0
  5931  0020CC  6E2F               	movwf	_dtoa$1144+1,c
  5932  0020CE  0E2B               	movlw	43
  5933  0020D0  D004               	goto	L20
  5934  0020D2                     l3488:
  5935  0020D2  FFFF               	dw	65535	; assembler added errata NOP
  5936  0020D4  0E00               	movlw	0
  5937  0020D6  6E2F               	movwf	_dtoa$1144+1,c
  5938  0020D8  0E2D               	movlw	45
  5939  0020DA                     L20:
  5940  0020DA  FFFF               	dw	65535	; assembler added errata NOP
  5941  0020DC  6E2E               	movwf	_dtoa$1144,c
  5942  0020DE  0E9B               	movlw	low _dbuf
  5943  0020E0  243E               	addwf	dtoa@i,w,c
  5944  0020E2  6ED9               	movwf	fsr2l,c
  5945  0020E4  0E00               	movlw	high _dbuf
  5946  0020E6  203F               	addwfc	dtoa@i+1,w,c
  5947  0020E8  6EDA               	movwf	fsr2h,c
  5948  0020EA  C02E  FFDF         	movff	_dtoa$1144,indf2
  5949  0020EE                     l3492:
  5950  0020EE  FFFF               	dw	65535	; assembler added errata NOP
  5951                           
  5952                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  5953  0020F0  C01C  F011         	movff	dtoa@fp,pad@fp
  5954  0020F4  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5955  0020F8  0E9B               	movlw	low _dbuf
  5956  0020FA  243E               	addwf	dtoa@i,w,c
  5957  0020FC  6E13               	movwf	pad@buf,c
  5958  0020FE  0E00               	movlw	high _dbuf
  5959  002100  203F               	addwfc	dtoa@i+1,w,c
  5960  002102  6E14               	movwf	pad@buf+1,c
  5961  002104  C032  F015         	movff	dtoa@w,pad@p
  5962  002108  C033  F016         	movff	dtoa@w+1,pad@p+1
  5963  00210C  EC68  F019         	call	_pad	;wreg free
  5964  002110  C011  F01C         	movff	?_pad,?_dtoa
  5965  002114  C012  F01D         	movff	?_pad+1,?_dtoa+1
  5966  002118  0012               	return		;funcret
  5967  00211A  FFFF               	dw	65535	; errata NOP
  5968  00211C                     __end_of_dtoa:
  5969                           	opt callstack 0
  5970                           
  5971 ;; *************** function _abs *****************
  5972 ;; Defined at:
  5973 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;  a               2   18[COMRAM] int 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;		None
  5978 ;; Return value:  Size  Location     Type
  5979 ;;                  2   18[COMRAM] int 
  5980 ;; Registers used:
  5981 ;;		wreg, status,2, status,0
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5987 ;;      Params:         2       0       0       0       0       0       0
  5988 ;;      Locals:         0       0       0       0       0       0       0
  5989 ;;      Temps:          2       0       0       0       0       0       0
  5990 ;;      Totals:         4       0       0       0       0       0       0
  5991 ;;Total ram usage:        4 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; Hardware stack levels required when called:    2
  5994 ;; This function calls:
  5995 ;;		Nothing
  5996 ;; This function is called by:
  5997 ;;		_dtoa
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text18
  6002  00378E                     __ptext18:
  6003                           	opt callstack 0
  6004  00378E                     _abs:
  6005                           	opt callstack 0
  6006  00378E  FFFF               	dw	65535	; assembler added errata NOP
  6007                           
  6008                           ;incstack = 0
  6009  003790  BE14               	btfsc	abs@a+1,7,c
  6010  003792  D005               	goto	u2780
  6011  003794  5014               	movf	abs@a+1,w,c
  6012  003796  E111               	bnz	l1235
  6013  003798  0413               	decf	abs@a,w,c
  6014  00379A  B0D8               	btfsc	status,0,c
  6015  00379C  D00E               	goto	l1235
  6016  00379E                     u2780:
  6017  00379E  FFFF               	dw	65535	; assembler added errata NOP
  6018  0037A0  C013  F015         	movff	abs@a,??_abs
  6019  0037A4  C014  F016         	movff	abs@a+1,??_abs+1
  6020  0037A8  1E15               	comf	??_abs,f,c
  6021  0037AA  1E16               	comf	??_abs+1,f,c
  6022  0037AC  4A15               	infsnz	??_abs,f,c
  6023  0037AE  2A16               	incf	??_abs+1,f,c
  6024  0037B0  C015  F013         	movff	??_abs,?_abs
  6025  0037B4  C016  F014         	movff	??_abs+1,?_abs+1
  6026  0037B8  D005               	goto	l1238
  6027  0037BA                     l1235:
  6028  0037BA  FFFF               	dw	65535	; assembler added errata NOP
  6029  0037BC  C013  F013         	movff	abs@a,?_abs
  6030  0037C0  C014  F014         	movff	abs@a+1,?_abs+1
  6031  0037C4                     l1238:
  6032  0037C4  FFFF               	dw	65535	; assembler added errata NOP
  6033  0037C6  0012               	return		;funcret
  6034  0037C8  FFFF               	dw	65535	; errata NOP
  6035  0037CA                     __end_of_abs:
  6036                           	opt callstack 0
  6037                           
  6038 ;; *************** function ___aomod *****************
  6039 ;; Defined at:
  6040 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;  dividend        8    0[COMRAM] long long 
  6043 ;;  divisor         8    8[COMRAM] long long 
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  sign            1   17[COMRAM] unsigned char 
  6046 ;;  counter         1   16[COMRAM] unsigned char 
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  8    0[COMRAM] long long 
  6049 ;; Registers used:
  6050 ;;		wreg, status,2, status,0
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6056 ;;      Params:        16       0       0       0       0       0       0
  6057 ;;      Locals:         2       0       0       0       0       0       0
  6058 ;;      Temps:          0       0       0       0       0       0       0
  6059 ;;      Totals:        18       0       0       0       0       0       0
  6060 ;;Total ram usage:       18 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    2
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_dtoa
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text19
  6071  002C32                     __ptext19:
  6072                           	opt callstack 0
  6073  002C32                     ___aomod:
  6074                           	opt callstack 0
  6075  002C32  FFFF               	dw	65535	; assembler added errata NOP
  6076                           
  6077                           ;incstack = 0
  6078  002C34  0E00               	movlw	0
  6079  002C36  6E12               	movwf	___aomod@sign,c
  6080  002C38  AE08               	btfss	___aomod@dividend+7,7,c
  6081  002C3A  D012               	goto	l3342
  6082  002C3C  1E08               	comf	___aomod@dividend+7,f,c
  6083  002C3E  1E07               	comf	___aomod@dividend+6,f,c
  6084  002C40  1E06               	comf	___aomod@dividend+5,f,c
  6085  002C42  1E05               	comf	___aomod@dividend+4,f,c
  6086  002C44  1E04               	comf	___aomod@dividend+3,f,c
  6087  002C46  1E03               	comf	___aomod@dividend+2,f,c
  6088  002C48  1E02               	comf	___aomod@dividend+1,f,c
  6089  002C4A  6C01               	negf	___aomod@dividend,c
  6090  002C4C  0E00               	movlw	0
  6091  002C4E  2202               	addwfc	___aomod@dividend+1,f,c
  6092  002C50  2203               	addwfc	___aomod@dividend+2,f,c
  6093  002C52  2204               	addwfc	___aomod@dividend+3,f,c
  6094  002C54  2205               	addwfc	___aomod@dividend+4,f,c
  6095  002C56  2206               	addwfc	___aomod@dividend+5,f,c
  6096  002C58  2207               	addwfc	___aomod@dividend+6,f,c
  6097  002C5A  2208               	addwfc	___aomod@dividend+7,f,c
  6098  002C5C  0E01               	movlw	1
  6099  002C5E  6E12               	movwf	___aomod@sign,c
  6100  002C60                     l3342:
  6101  002C60  FFFF               	dw	65535	; assembler added errata NOP
  6102  002C62  AE10               	btfss	___aomod@divisor+7,7,c
  6103  002C64  D010               	goto	l3346
  6104  002C66  1E10               	comf	___aomod@divisor+7,f,c
  6105  002C68  1E0F               	comf	___aomod@divisor+6,f,c
  6106  002C6A  1E0E               	comf	___aomod@divisor+5,f,c
  6107  002C6C  1E0D               	comf	___aomod@divisor+4,f,c
  6108  002C6E  1E0C               	comf	___aomod@divisor+3,f,c
  6109  002C70  1E0B               	comf	___aomod@divisor+2,f,c
  6110  002C72  1E0A               	comf	___aomod@divisor+1,f,c
  6111  002C74  6C09               	negf	___aomod@divisor,c
  6112  002C76  0E00               	movlw	0
  6113  002C78  220A               	addwfc	___aomod@divisor+1,f,c
  6114  002C7A  220B               	addwfc	___aomod@divisor+2,f,c
  6115  002C7C  220C               	addwfc	___aomod@divisor+3,f,c
  6116  002C7E  220D               	addwfc	___aomod@divisor+4,f,c
  6117  002C80  220E               	addwfc	___aomod@divisor+5,f,c
  6118  002C82  220F               	addwfc	___aomod@divisor+6,f,c
  6119  002C84  2210               	addwfc	___aomod@divisor+7,f,c
  6120  002C86                     l3346:
  6121  002C86  FFFF               	dw	65535	; assembler added errata NOP
  6122  002C88  5009               	movf	___aomod@divisor,w,c
  6123  002C8A  100A               	iorwf	___aomod@divisor+1,w,c
  6124  002C8C  100B               	iorwf	___aomod@divisor+2,w,c
  6125  002C8E  100C               	iorwf	___aomod@divisor+3,w,c
  6126  002C90  100D               	iorwf	___aomod@divisor+4,w,c
  6127  002C92  100E               	iorwf	___aomod@divisor+5,w,c
  6128  002C94  100F               	iorwf	___aomod@divisor+6,w,c
  6129  002C96  1010               	iorwf	___aomod@divisor+7,w,c
  6130  002C98  B4D8               	btfsc	status,2,c
  6131  002C9A  D040               	goto	l3362
  6132  002C9C  0E01               	movlw	1
  6133  002C9E  6E11               	movwf	___aomod@counter,c
  6134  002CA0  D00B               	goto	l3352
  6135  002CA2                     l3350:
  6136  002CA2  FFFF               	dw	65535	; assembler added errata NOP
  6137  002CA4  90D8               	bcf	status,0,c
  6138  002CA6  3609               	rlcf	___aomod@divisor,f,c
  6139  002CA8  360A               	rlcf	___aomod@divisor+1,f,c
  6140  002CAA  360B               	rlcf	___aomod@divisor+2,f,c
  6141  002CAC  360C               	rlcf	___aomod@divisor+3,f,c
  6142  002CAE  360D               	rlcf	___aomod@divisor+4,f,c
  6143  002CB0  360E               	rlcf	___aomod@divisor+5,f,c
  6144  002CB2  360F               	rlcf	___aomod@divisor+6,f,c
  6145  002CB4  3610               	rlcf	___aomod@divisor+7,f,c
  6146  002CB6  2A11               	incf	___aomod@counter,f,c
  6147  002CB8                     l3352:
  6148  002CB8  FFFF               	dw	65535	; assembler added errata NOP
  6149  002CBA  AE10               	btfss	___aomod@divisor+7,7,c
  6150  002CBC  D7F2               	goto	l3350
  6151  002CBE                     u2980:
  6152  002CBE  FFFF               	dw	65535	; assembler added errata NOP
  6153  002CC0  5009               	movf	___aomod@divisor,w,c
  6154  002CC2  5C01               	subwf	___aomod@dividend,w,c
  6155  002CC4  500A               	movf	___aomod@divisor+1,w,c
  6156  002CC6  5802               	subwfb	___aomod@dividend+1,w,c
  6157  002CC8  500B               	movf	___aomod@divisor+2,w,c
  6158  002CCA  5803               	subwfb	___aomod@dividend+2,w,c
  6159  002CCC  500C               	movf	___aomod@divisor+3,w,c
  6160  002CCE  5804               	subwfb	___aomod@dividend+3,w,c
  6161  002CD0  500D               	movf	___aomod@divisor+4,w,c
  6162  002CD2  5805               	subwfb	___aomod@dividend+4,w,c
  6163  002CD4  500E               	movf	___aomod@divisor+5,w,c
  6164  002CD6  5806               	subwfb	___aomod@dividend+5,w,c
  6165  002CD8  500F               	movf	___aomod@divisor+6,w,c
  6166  002CDA  5807               	subwfb	___aomod@dividend+6,w,c
  6167  002CDC  5010               	movf	___aomod@divisor+7,w,c
  6168  002CDE  5808               	subwfb	___aomod@dividend+7,w,c
  6169  002CE0  A0D8               	btfss	status,0,c
  6170  002CE2  D010               	goto	l3358
  6171  002CE4  5009               	movf	___aomod@divisor,w,c
  6172  002CE6  5E01               	subwf	___aomod@dividend,f,c
  6173  002CE8  500A               	movf	___aomod@divisor+1,w,c
  6174  002CEA  5A02               	subwfb	___aomod@dividend+1,f,c
  6175  002CEC  500B               	movf	___aomod@divisor+2,w,c
  6176  002CEE  5A03               	subwfb	___aomod@dividend+2,f,c
  6177  002CF0  500C               	movf	___aomod@divisor+3,w,c
  6178  002CF2  5A04               	subwfb	___aomod@dividend+3,f,c
  6179  002CF4  500D               	movf	___aomod@divisor+4,w,c
  6180  002CF6  5A05               	subwfb	___aomod@dividend+4,f,c
  6181  002CF8  500E               	movf	___aomod@divisor+5,w,c
  6182  002CFA  5A06               	subwfb	___aomod@dividend+5,f,c
  6183  002CFC  500F               	movf	___aomod@divisor+6,w,c
  6184  002CFE  5A07               	subwfb	___aomod@dividend+6,f,c
  6185  002D00  5010               	movf	___aomod@divisor+7,w,c
  6186  002D02  5A08               	subwfb	___aomod@dividend+7,f,c
  6187  002D04                     l3358:
  6188  002D04  FFFF               	dw	65535	; assembler added errata NOP
  6189  002D06  90D8               	bcf	status,0,c
  6190  002D08  3210               	rrcf	___aomod@divisor+7,f,c
  6191  002D0A  320F               	rrcf	___aomod@divisor+6,f,c
  6192  002D0C  320E               	rrcf	___aomod@divisor+5,f,c
  6193  002D0E  320D               	rrcf	___aomod@divisor+4,f,c
  6194  002D10  320C               	rrcf	___aomod@divisor+3,f,c
  6195  002D12  320B               	rrcf	___aomod@divisor+2,f,c
  6196  002D14  320A               	rrcf	___aomod@divisor+1,f,c
  6197  002D16  3209               	rrcf	___aomod@divisor,f,c
  6198  002D18  2E11               	decfsz	___aomod@counter,f,c
  6199  002D1A  D7D1               	goto	u2980
  6200  002D1C                     l3362:
  6201  002D1C  FFFF               	dw	65535	; assembler added errata NOP
  6202  002D1E  5012               	movf	___aomod@sign,w,c
  6203  002D20  B4D8               	btfsc	status,2,c
  6204  002D22  D010               	goto	l3366
  6205  002D24  1E08               	comf	___aomod@dividend+7,f,c
  6206  002D26  1E07               	comf	___aomod@dividend+6,f,c
  6207  002D28  1E06               	comf	___aomod@dividend+5,f,c
  6208  002D2A  1E05               	comf	___aomod@dividend+4,f,c
  6209  002D2C  1E04               	comf	___aomod@dividend+3,f,c
  6210  002D2E  1E03               	comf	___aomod@dividend+2,f,c
  6211  002D30  1E02               	comf	___aomod@dividend+1,f,c
  6212  002D32  6C01               	negf	___aomod@dividend,c
  6213  002D34  0E00               	movlw	0
  6214  002D36  2202               	addwfc	___aomod@dividend+1,f,c
  6215  002D38  2203               	addwfc	___aomod@dividend+2,f,c
  6216  002D3A  2204               	addwfc	___aomod@dividend+3,f,c
  6217  002D3C  2205               	addwfc	___aomod@dividend+4,f,c
  6218  002D3E  2206               	addwfc	___aomod@dividend+5,f,c
  6219  002D40  2207               	addwfc	___aomod@dividend+6,f,c
  6220  002D42  2208               	addwfc	___aomod@dividend+7,f,c
  6221  002D44                     l3366:
  6222  002D44  FFFF               	dw	65535	; assembler added errata NOP
  6223  002D46  C001  F001         	movff	___aomod@dividend,?___aomod
  6224  002D4A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6225  002D4E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6226  002D52  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6227  002D56  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6228  002D5A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6229  002D5E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6230  002D62  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6231  002D66  0012               	return		;funcret
  6232  002D68  FFFF               	dw	65535	; errata NOP
  6233  002D6A                     __end_of___aomod:
  6234                           	opt callstack 0
  6235                           
  6236 ;; *************** function ___aodiv *****************
  6237 ;; Defined at:
  6238 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  dividend        8    0[COMRAM] long long 
  6241 ;;  divisor         8    8[COMRAM] long long 
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;  quotient        8   18[COMRAM] long long 
  6244 ;;  sign            1   17[COMRAM] unsigned char 
  6245 ;;  counter         1   16[COMRAM] unsigned char 
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  8    0[COMRAM] long long 
  6248 ;; Registers used:
  6249 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6255 ;;      Params:        16       0       0       0       0       0       0
  6256 ;;      Locals:        10       0       0       0       0       0       0
  6257 ;;      Temps:          0       0       0       0       0       0       0
  6258 ;;      Totals:        26       0       0       0       0       0       0
  6259 ;;Total ram usage:       26 bytes
  6260 ;; Hardware stack levels used:    1
  6261 ;; Hardware stack levels required when called:    2
  6262 ;; This function calls:
  6263 ;;		Nothing
  6264 ;; This function is called by:
  6265 ;;		_dtoa
  6266 ;; This function uses a non-reentrant model
  6267 ;;
  6268                           
  6269                           	psect	text20
  6270  002836                     __ptext20:
  6271                           	opt callstack 0
  6272  002836                     ___aodiv:
  6273                           	opt callstack 0
  6274  002836  FFFF               	dw	65535	; assembler added errata NOP
  6275                           
  6276                           ;incstack = 0
  6277  002838  0E00               	movlw	0
  6278  00283A  6E12               	movwf	___aodiv@sign,c
  6279  00283C  AE10               	btfss	___aodiv@divisor+7,7,c
  6280  00283E  D012               	goto	l3298
  6281  002840  1E10               	comf	___aodiv@divisor+7,f,c
  6282  002842  1E0F               	comf	___aodiv@divisor+6,f,c
  6283  002844  1E0E               	comf	___aodiv@divisor+5,f,c
  6284  002846  1E0D               	comf	___aodiv@divisor+4,f,c
  6285  002848  1E0C               	comf	___aodiv@divisor+3,f,c
  6286  00284A  1E0B               	comf	___aodiv@divisor+2,f,c
  6287  00284C  1E0A               	comf	___aodiv@divisor+1,f,c
  6288  00284E  6C09               	negf	___aodiv@divisor,c
  6289  002850  0E00               	movlw	0
  6290  002852  220A               	addwfc	___aodiv@divisor+1,f,c
  6291  002854  220B               	addwfc	___aodiv@divisor+2,f,c
  6292  002856  220C               	addwfc	___aodiv@divisor+3,f,c
  6293  002858  220D               	addwfc	___aodiv@divisor+4,f,c
  6294  00285A  220E               	addwfc	___aodiv@divisor+5,f,c
  6295  00285C  220F               	addwfc	___aodiv@divisor+6,f,c
  6296  00285E  2210               	addwfc	___aodiv@divisor+7,f,c
  6297  002860  0E01               	movlw	1
  6298  002862  6E12               	movwf	___aodiv@sign,c
  6299  002864                     l3298:
  6300  002864  FFFF               	dw	65535	; assembler added errata NOP
  6301  002866  AE08               	btfss	___aodiv@dividend+7,7,c
  6302  002868  D012               	goto	l3304
  6303  00286A  1E08               	comf	___aodiv@dividend+7,f,c
  6304  00286C  1E07               	comf	___aodiv@dividend+6,f,c
  6305  00286E  1E06               	comf	___aodiv@dividend+5,f,c
  6306  002870  1E05               	comf	___aodiv@dividend+4,f,c
  6307  002872  1E04               	comf	___aodiv@dividend+3,f,c
  6308  002874  1E03               	comf	___aodiv@dividend+2,f,c
  6309  002876  1E02               	comf	___aodiv@dividend+1,f,c
  6310  002878  6C01               	negf	___aodiv@dividend,c
  6311  00287A  0E00               	movlw	0
  6312  00287C  2202               	addwfc	___aodiv@dividend+1,f,c
  6313  00287E  2203               	addwfc	___aodiv@dividend+2,f,c
  6314  002880  2204               	addwfc	___aodiv@dividend+3,f,c
  6315  002882  2205               	addwfc	___aodiv@dividend+4,f,c
  6316  002884  2206               	addwfc	___aodiv@dividend+5,f,c
  6317  002886  2207               	addwfc	___aodiv@dividend+6,f,c
  6318  002888  2208               	addwfc	___aodiv@dividend+7,f,c
  6319  00288A  0E01               	movlw	1
  6320  00288C  1A12               	xorwf	___aodiv@sign,f,c
  6321  00288E                     l3304:
  6322  00288E  FFFF               	dw	65535	; assembler added errata NOP
  6323  002890  EE20  F013         	lfsr	2,___aodiv@quotient
  6324  002894  0E07               	movlw	7
  6325  002896                     u2901:
  6326  002896  6ADE               	clrf	postinc2,c
  6327  002898  06E8               	decf	wreg,f,c
  6328  00289A  E2FD               	bc	u2901
  6329  00289C  5009               	movf	___aodiv@divisor,w,c
  6330  00289E  100A               	iorwf	___aodiv@divisor+1,w,c
  6331  0028A0  100B               	iorwf	___aodiv@divisor+2,w,c
  6332  0028A2  100C               	iorwf	___aodiv@divisor+3,w,c
  6333  0028A4  100D               	iorwf	___aodiv@divisor+4,w,c
  6334  0028A6  100E               	iorwf	___aodiv@divisor+5,w,c
  6335  0028A8  100F               	iorwf	___aodiv@divisor+6,w,c
  6336  0028AA  1010               	iorwf	___aodiv@divisor+7,w,c
  6337  0028AC  B4D8               	btfsc	status,2,c
  6338  0028AE  D04A               	goto	l3326
  6339  0028B0  0E01               	movlw	1
  6340  0028B2  6E11               	movwf	___aodiv@counter,c
  6341  0028B4  D00B               	goto	l3312
  6342  0028B6                     l3310:
  6343  0028B6  FFFF               	dw	65535	; assembler added errata NOP
  6344  0028B8  90D8               	bcf	status,0,c
  6345  0028BA  3609               	rlcf	___aodiv@divisor,f,c
  6346  0028BC  360A               	rlcf	___aodiv@divisor+1,f,c
  6347  0028BE  360B               	rlcf	___aodiv@divisor+2,f,c
  6348  0028C0  360C               	rlcf	___aodiv@divisor+3,f,c
  6349  0028C2  360D               	rlcf	___aodiv@divisor+4,f,c
  6350  0028C4  360E               	rlcf	___aodiv@divisor+5,f,c
  6351  0028C6  360F               	rlcf	___aodiv@divisor+6,f,c
  6352  0028C8  3610               	rlcf	___aodiv@divisor+7,f,c
  6353  0028CA  2A11               	incf	___aodiv@counter,f,c
  6354  0028CC                     l3312:
  6355  0028CC  FFFF               	dw	65535	; assembler added errata NOP
  6356  0028CE  AE10               	btfss	___aodiv@divisor+7,7,c
  6357  0028D0  D7F2               	goto	l3310
  6358  0028D2                     u2920:
  6359  0028D2  FFFF               	dw	65535	; assembler added errata NOP
  6360  0028D4  90D8               	bcf	status,0,c
  6361  0028D6  3613               	rlcf	___aodiv@quotient,f,c
  6362  0028D8  3614               	rlcf	___aodiv@quotient+1,f,c
  6363  0028DA  3615               	rlcf	___aodiv@quotient+2,f,c
  6364  0028DC  3616               	rlcf	___aodiv@quotient+3,f,c
  6365  0028DE  3617               	rlcf	___aodiv@quotient+4,f,c
  6366  0028E0  3618               	rlcf	___aodiv@quotient+5,f,c
  6367  0028E2  3619               	rlcf	___aodiv@quotient+6,f,c
  6368  0028E4  361A               	rlcf	___aodiv@quotient+7,f,c
  6369  0028E6  5009               	movf	___aodiv@divisor,w,c
  6370  0028E8  5C01               	subwf	___aodiv@dividend,w,c
  6371  0028EA  500A               	movf	___aodiv@divisor+1,w,c
  6372  0028EC  5802               	subwfb	___aodiv@dividend+1,w,c
  6373  0028EE  500B               	movf	___aodiv@divisor+2,w,c
  6374  0028F0  5803               	subwfb	___aodiv@dividend+2,w,c
  6375  0028F2  500C               	movf	___aodiv@divisor+3,w,c
  6376  0028F4  5804               	subwfb	___aodiv@dividend+3,w,c
  6377  0028F6  500D               	movf	___aodiv@divisor+4,w,c
  6378  0028F8  5805               	subwfb	___aodiv@dividend+4,w,c
  6379  0028FA  500E               	movf	___aodiv@divisor+5,w,c
  6380  0028FC  5806               	subwfb	___aodiv@dividend+5,w,c
  6381  0028FE  500F               	movf	___aodiv@divisor+6,w,c
  6382  002900  5807               	subwfb	___aodiv@dividend+6,w,c
  6383  002902  5010               	movf	___aodiv@divisor+7,w,c
  6384  002904  5808               	subwfb	___aodiv@dividend+7,w,c
  6385  002906  A0D8               	btfss	status,0,c
  6386  002908  D011               	goto	l3322
  6387  00290A  5009               	movf	___aodiv@divisor,w,c
  6388  00290C  5E01               	subwf	___aodiv@dividend,f,c
  6389  00290E  500A               	movf	___aodiv@divisor+1,w,c
  6390  002910  5A02               	subwfb	___aodiv@dividend+1,f,c
  6391  002912  500B               	movf	___aodiv@divisor+2,w,c
  6392  002914  5A03               	subwfb	___aodiv@dividend+2,f,c
  6393  002916  500C               	movf	___aodiv@divisor+3,w,c
  6394  002918  5A04               	subwfb	___aodiv@dividend+3,f,c
  6395  00291A  500D               	movf	___aodiv@divisor+4,w,c
  6396  00291C  5A05               	subwfb	___aodiv@dividend+4,f,c
  6397  00291E  500E               	movf	___aodiv@divisor+5,w,c
  6398  002920  5A06               	subwfb	___aodiv@dividend+5,f,c
  6399  002922  500F               	movf	___aodiv@divisor+6,w,c
  6400  002924  5A07               	subwfb	___aodiv@dividend+6,f,c
  6401  002926  5010               	movf	___aodiv@divisor+7,w,c
  6402  002928  5A08               	subwfb	___aodiv@dividend+7,f,c
  6403  00292A  8013               	bsf	___aodiv@quotient,0,c
  6404  00292C                     l3322:
  6405  00292C  FFFF               	dw	65535	; assembler added errata NOP
  6406  00292E  90D8               	bcf	status,0,c
  6407  002930  3210               	rrcf	___aodiv@divisor+7,f,c
  6408  002932  320F               	rrcf	___aodiv@divisor+6,f,c
  6409  002934  320E               	rrcf	___aodiv@divisor+5,f,c
  6410  002936  320D               	rrcf	___aodiv@divisor+4,f,c
  6411  002938  320C               	rrcf	___aodiv@divisor+3,f,c
  6412  00293A  320B               	rrcf	___aodiv@divisor+2,f,c
  6413  00293C  320A               	rrcf	___aodiv@divisor+1,f,c
  6414  00293E  3209               	rrcf	___aodiv@divisor,f,c
  6415  002940  2E11               	decfsz	___aodiv@counter,f,c
  6416  002942  D7C7               	goto	u2920
  6417  002944                     l3326:
  6418  002944  FFFF               	dw	65535	; assembler added errata NOP
  6419  002946  5012               	movf	___aodiv@sign,w,c
  6420  002948  B4D8               	btfsc	status,2,c
  6421  00294A  D010               	goto	l3330
  6422  00294C  1E1A               	comf	___aodiv@quotient+7,f,c
  6423  00294E  1E19               	comf	___aodiv@quotient+6,f,c
  6424  002950  1E18               	comf	___aodiv@quotient+5,f,c
  6425  002952  1E17               	comf	___aodiv@quotient+4,f,c
  6426  002954  1E16               	comf	___aodiv@quotient+3,f,c
  6427  002956  1E15               	comf	___aodiv@quotient+2,f,c
  6428  002958  1E14               	comf	___aodiv@quotient+1,f,c
  6429  00295A  6C13               	negf	___aodiv@quotient,c
  6430  00295C  0E00               	movlw	0
  6431  00295E  2214               	addwfc	___aodiv@quotient+1,f,c
  6432  002960  2215               	addwfc	___aodiv@quotient+2,f,c
  6433  002962  2216               	addwfc	___aodiv@quotient+3,f,c
  6434  002964  2217               	addwfc	___aodiv@quotient+4,f,c
  6435  002966  2218               	addwfc	___aodiv@quotient+5,f,c
  6436  002968  2219               	addwfc	___aodiv@quotient+6,f,c
  6437  00296A  221A               	addwfc	___aodiv@quotient+7,f,c
  6438  00296C                     l3330:
  6439  00296C  FFFF               	dw	65535	; assembler added errata NOP
  6440  00296E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6441  002972  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6442  002976  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6443  00297A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6444  00297E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6445  002982  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6446  002986  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6447  00298A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6448  00298E  0012               	return		;funcret
  6449  002990  FFFF               	dw	65535	; errata NOP
  6450  002992                     __end_of___aodiv:
  6451                           	opt callstack 0
  6452                           
  6453 ;; *************** function _ctoa *****************
  6454 ;; Defined at:
  6455 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6458 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6459 ;;  c               1   29[COMRAM] unsigned char 
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;  w               2   30[COMRAM] int 
  6462 ;;  l               2    0        int 
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  2   27[COMRAM] int 
  6465 ;; Registers used:
  6466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6472 ;;      Params:         3       0       0       0       0       0       0
  6473 ;;      Locals:         2       0       0       0       0       0       0
  6474 ;;      Temps:          0       0       0       0       0       0       0
  6475 ;;      Totals:         5       0       0       0       0       0       0
  6476 ;;Total ram usage:        5 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:    6
  6479 ;; This function calls:
  6480 ;;		_pad
  6481 ;; This function is called by:
  6482 ;;		_vfpfcnvrt
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text21
  6487  003510                     __ptext21:
  6488                           	opt callstack 0
  6489  003510                     _ctoa:
  6490                           	opt callstack 0
  6491  003510  FFFF               	dw	65535	; assembler added errata NOP
  6492                           
  6493                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  6494                           
  6495                           ;incstack = 0
  6496  003512  0100               	movlb	0	; () banked
  6497  003514  5191               	movf	_width& (0+255),w,b
  6498  003516  1192               	iorwf	(_width+1)& (0+255),w,b
  6499  003518  A4D8               	btfss	status,2,c
  6500  00351A  D005               	goto	l3424
  6501                           
  6502                           ; BSR set to: 0
  6503  00351C  C091  F01F         	movff	_width,ctoa@w
  6504  003520  C092  F020         	movff	_width+1,ctoa@w+1
  6505  003524  D007               	goto	l3426
  6506  003526                     l3424:
  6507  003526  FFFF               	dw	65535	; assembler added errata NOP
  6508                           
  6509                           ; BSR set to: 0
  6510  003528  0EFF               	movlw	255
  6511  00352A  2591               	addwf	_width& (0+255),w,b
  6512  00352C  6E1F               	movwf	ctoa@w,c
  6513  00352E  0EFF               	movlw	255
  6514  003530  2192               	addwfc	(_width+1)& (0+255),w,b
  6515  003532  6E20               	movwf	ctoa@w+1,c
  6516  003534                     l3426:
  6517  003534  FFFF               	dw	65535	; assembler added errata NOP
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  6521  003536  C01E  F09B         	movff	ctoa@c,_dbuf
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  6525  00353A  0E00               	movlw	0
  6526  00353C  6F9C               	movwf	(_dbuf+1)& (0+255),b
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  6530  00353E  C01C  F011         	movff	ctoa@fp,pad@fp
  6531  003542  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  6532  003546  0E9B               	movlw	low _dbuf
  6533  003548  6E13               	movwf	pad@buf,c
  6534  00354A  0E00               	movlw	high _dbuf
  6535  00354C  6E14               	movwf	pad@buf+1,c
  6536  00354E  C01F  F015         	movff	ctoa@w,pad@p
  6537  003552  C020  F016         	movff	ctoa@w+1,pad@p+1
  6538  003556  EC68  F019         	call	_pad	;wreg free
  6539  00355A  C011  F01C         	movff	?_pad,?_ctoa
  6540  00355E  C012  F01D         	movff	?_pad+1,?_ctoa+1
  6541  003562  0012               	return		;funcret
  6542  003564  FFFF               	dw	65535	; errata NOP
  6543  003566                     __end_of_ctoa:
  6544                           	opt callstack 0
  6545                           
  6546 ;; *************** function _pad *****************
  6547 ;; Defined at:
  6548 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6549 ;; Parameters:    Size  Location     Type
  6550 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6551 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6552 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6553 ;;		 -> dbuf(32), 
  6554 ;;  p               2   20[COMRAM] int 
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;  w               2   25[COMRAM] int 
  6557 ;;  i               2   23[COMRAM] int 
  6558 ;; Return value:  Size  Location     Type
  6559 ;;                  2   16[COMRAM] int 
  6560 ;; Registers used:
  6561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6567 ;;      Params:         6       0       0       0       0       0       0
  6568 ;;      Locals:         4       0       0       0       0       0       0
  6569 ;;      Temps:          1       0       0       0       0       0       0
  6570 ;;      Totals:        11       0       0       0       0       0       0
  6571 ;;Total ram usage:       11 bytes
  6572 ;; Hardware stack levels used:    1
  6573 ;; Hardware stack levels required when called:    5
  6574 ;; This function calls:
  6575 ;;		_fputc
  6576 ;;		_fputs
  6577 ;;		_strlen
  6578 ;; This function is called by:
  6579 ;;		_ctoa
  6580 ;;		_dtoa
  6581 ;;		_otoa
  6582 ;;		_utoa
  6583 ;;		_xtoa
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           	psect	text22
  6588  0032D0                     __ptext22:
  6589                           	opt callstack 0
  6590  0032D0                     _pad:
  6591                           	opt callstack 0
  6592  0032D0  FFFF               	dw	65535	; assembler added errata NOP
  6593                           
  6594                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  6595                           
  6596                           ;incstack = 0
  6597  0032D2  0100               	movlb	0	; () banked
  6598  0032D4  A195               	btfss	_flags& (0+255),0,b
  6599  0032D6  D00A               	goto	l3240
  6600                           
  6601                           ; BSR set to: 0
  6602                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  6603  0032D8  C013  F00A         	movff	pad@buf,fputs@s
  6604  0032DC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6605  0032E0  C011  F00C         	movff	pad@fp,fputs@fp
  6606  0032E4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6607  0032E8  EC6A  F01B         	call	_fputs	;wreg free
  6608  0032EC                     l3240:
  6609  0032EC  FFFF               	dw	65535	; assembler added errata NOP
  6610                           
  6611                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  6612  0032EE  BE16               	btfsc	pad@p+1,7,c
  6613  0032F0  D005               	goto	l3244
  6614  0032F2  C015  F01A         	movff	pad@p,pad@w
  6615  0032F6  C016  F01B         	movff	pad@p+1,pad@w+1
  6616  0032FA  D005               	goto	l344
  6617  0032FC                     l3244:
  6618  0032FC  FFFF               	dw	65535	; assembler added errata NOP
  6619  0032FE  0E00               	movlw	0
  6620  003300  6E1B               	movwf	pad@w+1,c
  6621  003302  0E00               	movlw	0
  6622  003304  6E1A               	movwf	pad@w,c
  6623  003306                     l344:
  6624  003306  FFFF               	dw	65535	; assembler added errata NOP
  6625                           
  6626                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  6627  003308  0E00               	movlw	0
  6628  00330A  6E19               	movwf	pad@i+1,c
  6629  00330C  0E00               	movlw	0
  6630  00330E  6E18               	movwf	pad@i,c
  6631                           
  6632                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6633  003310  D00D               	goto	l3250
  6634  003312                     l3246:
  6635  003312  FFFF               	dw	65535	; assembler added errata NOP
  6636                           
  6637                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  6638  003314  0E00               	movlw	0
  6639  003316  6E02               	movwf	fputc@c+1,c
  6640  003318  0E20               	movlw	32
  6641  00331A  6E01               	movwf	fputc@c,c
  6642  00331C  C011  F003         	movff	pad@fp,fputc@fp
  6643  003320  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6644  003324  EC12  F019         	call	_fputc	;wreg free
  6645                           
  6646                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  6647  003328  4A18               	infsnz	pad@i,f,c
  6648  00332A  2A19               	incf	pad@i+1,f,c
  6649  00332C                     l3250:
  6650  00332C  FFFF               	dw	65535	; assembler added errata NOP
  6651                           
  6652                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6653  00332E  501A               	movf	pad@w,w,c
  6654  003330  5C18               	subwf	pad@i,w,c
  6655  003332  5019               	movf	pad@i+1,w,c
  6656  003334  0A80               	xorlw	128
  6657  003336  6E17               	movwf	??_pad& (0+255),c
  6658  003338  501B               	movf	pad@w+1,w,c
  6659  00333A  0A80               	xorlw	128
  6660  00333C  5817               	subwfb	??_pad& (0+255),w,c
  6661  00333E  A0D8               	btfss	status,0,c
  6662  003340  D7E8               	goto	l3246
  6663                           
  6664                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  6665  003342  0100               	movlb	0	; () banked
  6666  003344  B195               	btfsc	_flags& (0+255),0,b
  6667  003346  D00A               	goto	l3254
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  6671  003348  C013  F00A         	movff	pad@buf,fputs@s
  6672  00334C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6673  003350  C011  F00C         	movff	pad@fp,fputs@fp
  6674  003354  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6675  003358  EC6A  F01B         	call	_fputs	;wreg free
  6676  00335C                     l3254:
  6677  00335C  FFFF               	dw	65535	; assembler added errata NOP
  6678                           
  6679                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  6680  00335E  C013  F001         	movff	pad@buf,strlen@s
  6681  003362  C014  F002         	movff	pad@buf+1,strlen@s+1
  6682  003366  EC39  F01C         	call	_strlen	;wreg free
  6683  00336A  501A               	movf	pad@w,w,c
  6684  00336C  2401               	addwf	?_strlen,w,c
  6685  00336E  6E11               	movwf	?_pad,c
  6686  003370  501B               	movf	pad@w+1,w,c
  6687  003372  2002               	addwfc	?_strlen+1,w,c
  6688  003374  6E12               	movwf	?_pad+1,c
  6689  003376  0012               	return		;funcret
  6690  003378  FFFF               	dw	65535	; errata NOP
  6691  00337A                     __end_of_pad:
  6692                           	opt callstack 0
  6693                           
  6694 ;; *************** function _strlen *****************
  6695 ;; Defined at:
  6696 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6699 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6702 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  6703 ;; Return value:  Size  Location     Type
  6704 ;;                  2    0[COMRAM] unsigned int 
  6705 ;; Registers used:
  6706 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6712 ;;      Params:         2       0       0       0       0       0       0
  6713 ;;      Locals:         2       0       0       0       0       0       0
  6714 ;;      Temps:          0       0       0       0       0       0       0
  6715 ;;      Totals:         4       0       0       0       0       0       0
  6716 ;;Total ram usage:        4 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; Hardware stack levels required when called:    2
  6719 ;; This function calls:
  6720 ;;		Nothing
  6721 ;; This function is called by:
  6722 ;;		_pad
  6723 ;;		_stoa
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           	psect	text23
  6728  003872                     __ptext23:
  6729                           	opt callstack 0
  6730  003872                     _strlen:
  6731                           	opt callstack 0
  6732  003872  FFFF               	dw	65535	; assembler added errata NOP
  6733                           
  6734                           ;incstack = 0
  6735  003874  C001  F003         	movff	strlen@s,strlen@a
  6736  003878  C002  F004         	movff	strlen@s+1,strlen@a+1
  6737  00387C  D003               	goto	l3226
  6738  00387E                     l3224:
  6739  00387E  FFFF               	dw	65535	; assembler added errata NOP
  6740  003880  4A01               	infsnz	strlen@s,f,c
  6741  003882  2A02               	incf	strlen@s+1,f,c
  6742  003884                     l3226:
  6743  003884  FFFF               	dw	65535	; assembler added errata NOP
  6744  003886  C001  FFD9         	movff	strlen@s,fsr2l
  6745  00388A  C002  FFDA         	movff	strlen@s+1,fsr2h
  6746  00388E  50DF               	movf	indf2,w,c
  6747  003890  A4D8               	btfss	status,2,c
  6748  003892  D7F5               	goto	l3224
  6749  003894  5003               	movf	strlen@a,w,c
  6750  003896  5C01               	subwf	strlen@s,w,c
  6751  003898  6E01               	movwf	?_strlen,c
  6752  00389A  5004               	movf	strlen@a+1,w,c
  6753  00389C  5802               	subwfb	strlen@s+1,w,c
  6754  00389E  6E02               	movwf	?_strlen+1,c
  6755  0038A0  0012               	return		;funcret
  6756  0038A2  FFFF               	dw	65535	; errata NOP
  6757  0038A4                     __end_of_strlen:
  6758                           	opt callstack 0
  6759                           
  6760 ;; *************** function _fputs *****************
  6761 ;; Defined at:
  6762 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  6763 ;; Parameters:    Size  Location     Type
  6764 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6765 ;;		 -> dbuf(32), 
  6766 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6767 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;  i               2   14[COMRAM] int 
  6770 ;;  c               1   13[COMRAM] unsigned char 
  6771 ;; Return value:  Size  Location     Type
  6772 ;;                  2    9[COMRAM] int 
  6773 ;; Registers used:
  6774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6775 ;; Tracked objects:
  6776 ;;		On entry : 0/0
  6777 ;;		On exit  : 0/0
  6778 ;;		Unchanged: 0/0
  6779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6780 ;;      Params:         4       0       0       0       0       0       0
  6781 ;;      Locals:         3       0       0       0       0       0       0
  6782 ;;      Temps:          0       0       0       0       0       0       0
  6783 ;;      Totals:         7       0       0       0       0       0       0
  6784 ;;Total ram usage:        7 bytes
  6785 ;; Hardware stack levels used:    1
  6786 ;; Hardware stack levels required when called:    4
  6787 ;; This function calls:
  6788 ;;		_fputc
  6789 ;; This function is called by:
  6790 ;;		_pad
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           	psect	text24
  6795  0036D4                     __ptext24:
  6796                           	opt callstack 0
  6797  0036D4                     _fputs:
  6798                           	opt callstack 0
  6799  0036D4  FFFF               	dw	65535	; assembler added errata NOP
  6800                           
  6801                           ;incstack = 0
  6802  0036D6  0E00               	movlw	0
  6803  0036D8  6E10               	movwf	fputs@i+1,c
  6804  0036DA  0E00               	movlw	0
  6805  0036DC  6E0F               	movwf	fputs@i,c
  6806  0036DE  D00C               	goto	l3220
  6807  0036E0                     l3216:
  6808  0036E0  FFFF               	dw	65535	; assembler added errata NOP
  6809  0036E2  C00E  F001         	movff	fputs@c,fputc@c
  6810  0036E6  6A02               	clrf	fputc@c+1,c
  6811  0036E8  C00C  F003         	movff	fputs@fp,fputc@fp
  6812  0036EC  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6813  0036F0  EC12  F019         	call	_fputc	;wreg free
  6814  0036F4  4A0F               	infsnz	fputs@i,f,c
  6815  0036F6  2A10               	incf	fputs@i+1,f,c
  6816  0036F8                     l3220:
  6817  0036F8  FFFF               	dw	65535	; assembler added errata NOP
  6818  0036FA  500F               	movf	fputs@i,w,c
  6819  0036FC  240A               	addwf	fputs@s,w,c
  6820  0036FE  6ED9               	movwf	fsr2l,c
  6821  003700  5010               	movf	fputs@i+1,w,c
  6822  003702  200B               	addwfc	fputs@s+1,w,c
  6823  003704  6EDA               	movwf	fsr2h,c
  6824  003706  50DF               	movf	indf2,w,c
  6825  003708  6E0E               	movwf	fputs@c,c
  6826  00370A  500E               	movf	fputs@c,w,c
  6827  00370C  B4D8               	btfsc	status,2,c
  6828  00370E  0012               	return		;funcret
  6829  003710  FFFF               	dw	65535	; assembler added errata NOP
  6830  003712  D7E6               	goto	l3216
  6831  003714  FFFF               	dw	65535	; errata NOP
  6832  003716                     __end_of_fputs:
  6833                           	opt callstack 0
  6834                           
  6835 ;; *************** function _fputc *****************
  6836 ;; Defined at:
  6837 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  6838 ;; Parameters:    Size  Location     Type
  6839 ;;  c               2    0[COMRAM] int 
  6840 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6841 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;		None
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  2    0[COMRAM] int 
  6846 ;; Registers used:
  6847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6853 ;;      Params:         4       0       0       0       0       0       0
  6854 ;;      Locals:         0       0       0       0       0       0       0
  6855 ;;      Temps:          5       0       0       0       0       0       0
  6856 ;;      Totals:         9       0       0       0       0       0       0
  6857 ;;Total ram usage:        9 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:    3
  6860 ;; This function calls:
  6861 ;;		_putch
  6862 ;; This function is called by:
  6863 ;;		_pad
  6864 ;;		_stoa
  6865 ;;		_vfpfcnvrt
  6866 ;;		_fputs
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           	psect	text25
  6871  003224                     __ptext25:
  6872                           	opt callstack 0
  6873  003224                     _fputc:
  6874                           	opt callstack 0
  6875  003224  FFFF               	dw	65535	; assembler added errata NOP
  6876                           
  6877                           ;incstack = 0
  6878  003226  5003               	movf	fputc@fp,w,c
  6879  003228  1004               	iorwf	fputc@fp+1,w,c
  6880  00322A  B4D8               	btfsc	status,2,c
  6881  00322C  D004               	goto	u2670
  6882  00322E  5003               	movf	fputc@fp,w,c
  6883  003230  1004               	iorwf	fputc@fp+1,w,c
  6884  003232  A4D8               	btfss	status,2,c
  6885  003234  D005               	goto	l3206
  6886  003236                     u2670:
  6887  003236  FFFF               	dw	65535	; assembler added errata NOP
  6888  003238  5001               	movf	fputc@c,w,c
  6889  00323A  ECE0  F01C         	call	_putch
  6890  00323E  D045               	goto	l1312
  6891  003240                     l3206:
  6892  003240  FFFF               	dw	65535	; assembler added errata NOP
  6893  003242  EE20 F004          	lfsr	2,4
  6894  003246  5003               	movf	fputc@fp,w,c
  6895  003248  26D9               	addwf	fsr2l,f,c
  6896  00324A  5004               	movf	fputc@fp+1,w,c
  6897  00324C  22DA               	addwfc	fsr2h,f,c
  6898  00324E  50DE               	movf	postinc2,w,c
  6899  003250  10DE               	iorwf	postinc2,w,c
  6900  003252  B4D8               	btfsc	status,2,c
  6901  003254  D016               	goto	u2690
  6902  003256  EE20 F004          	lfsr	2,4
  6903  00325A  5003               	movf	fputc@fp,w,c
  6904  00325C  26D9               	addwf	fsr2l,f,c
  6905  00325E  5004               	movf	fputc@fp+1,w,c
  6906  003260  22DA               	addwfc	fsr2h,f,c
  6907  003262  EE10 F002          	lfsr	1,2
  6908  003266  5003               	movf	fputc@fp,w,c
  6909  003268  26E1               	addwf	fsr1l,f,c
  6910  00326A  5004               	movf	fputc@fp+1,w,c
  6911  00326C  22E2               	addwfc	fsr1h,f,c
  6912  00326E  50DE               	movf	postinc2,w,c
  6913  003270  5CE6               	subwf	postinc1,w,c
  6914  003272  50E6               	movf	postinc1,w,c
  6915  003274  0A80               	xorlw	128
  6916  003276  6E09               	movwf	(??_fputc+4)& (0+255),c
  6917  003278  50DE               	movf	postinc2,w,c
  6918  00327A  0A80               	xorlw	128
  6919  00327C  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  6920  00327E  B0D8               	btfsc	status,0,c
  6921  003280  D024               	goto	l1312
  6922  003282                     u2690:
  6923  003282  FFFF               	dw	65535	; assembler added errata NOP
  6924  003284  EE20 F002          	lfsr	2,2
  6925  003288  5003               	movf	fputc@fp,w,c
  6926  00328A  26D9               	addwf	fsr2l,f,c
  6927  00328C  5004               	movf	fputc@fp+1,w,c
  6928  00328E  22DA               	addwfc	fsr2h,f,c
  6929  003290  CFDE F005          	movff	postinc2,??_fputc
  6930  003294  CFDD F006          	movff	postdec2,??_fputc+1
  6931  003298  C003  FFD9         	movff	fputc@fp,fsr2l
  6932  00329C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6933  0032A0  CFDE F007          	movff	postinc2,??_fputc+2
  6934  0032A4  CFDD F008          	movff	postdec2,??_fputc+3
  6935  0032A8  5005               	movf	??_fputc,w,c
  6936  0032AA  2407               	addwf	??_fputc+2,w,c
  6937  0032AC  6ED9               	movwf	fsr2l,c
  6938  0032AE  5006               	movf	??_fputc+1,w,c
  6939  0032B0  2008               	addwfc	??_fputc+3,w,c
  6940  0032B2  6EDA               	movwf	fsr2h,c
  6941  0032B4  C001  FFDF         	movff	fputc@c,indf2
  6942  0032B8  EE20 F002          	lfsr	2,2
  6943  0032BC  5003               	movf	fputc@fp,w,c
  6944  0032BE  26D9               	addwf	fsr2l,f,c
  6945  0032C0  5004               	movf	fputc@fp+1,w,c
  6946  0032C2  22DA               	addwfc	fsr2h,f,c
  6947  0032C4  2ADE               	incf	postinc2,f,c
  6948  0032C6  0E00               	movlw	0
  6949  0032C8  22DD               	addwfc	postdec2,f,c
  6950  0032CA                     l1312:
  6951  0032CA  FFFF               	dw	65535	; assembler added errata NOP
  6952  0032CC  0012               	return		;funcret
  6953  0032CE  FFFF               	dw	65535	; errata NOP
  6954  0032D0                     __end_of_fputc:
  6955                           	opt callstack 0
  6956                           
  6957 ;; *************** function _putch *****************
  6958 ;; Defined at:
  6959 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;  c               1    wreg     unsigned char 
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;  c               1    0[COMRAM] unsigned char 
  6964 ;; Return value:  Size  Location     Type
  6965 ;;                  1    wreg      void 
  6966 ;; Registers used:
  6967 ;;		wreg
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/0
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6973 ;;      Params:         0       0       0       0       0       0       0
  6974 ;;      Locals:         0       0       0       0       0       0       0
  6975 ;;      Temps:          0       0       0       0       0       0       0
  6976 ;;      Totals:         0       0       0       0       0       0       0
  6977 ;;Total ram usage:        0 bytes
  6978 ;; Hardware stack levels used:    1
  6979 ;; Hardware stack levels required when called:    2
  6980 ;; This function calls:
  6981 ;;		Nothing
  6982 ;; This function is called by:
  6983 ;;		_fputc
  6984 ;; This function uses a non-reentrant model
  6985 ;;
  6986                           
  6987                           	psect	text26
  6988  0039C0                     __ptext26:
  6989                           	opt callstack 0
  6990  0039C0                     _putch:
  6991                           	opt callstack 0
  6992  0039C0  FFFF               	dw	65535	; assembler added errata NOP
  6993                           
  6994                           ;incstack = 0
  6995  0039C2  0012               	return		;funcret
  6996  0039C4  FFFF               	dw	65535	; errata NOP
  6997  0039C6                     __end_of_putch:
  6998                           	opt callstack 0
  6999                           
  7000 ;; *************** function _atoi *****************
  7001 ;; Defined at:
  7002 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7005 ;;		 -> STR_2(3), STR_1(4), 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  n               2   20[COMRAM] int 
  7008 ;;  neg             2   13[COMRAM] int 
  7009 ;; Return value:  Size  Location     Type
  7010 ;;                  2    7[COMRAM] int 
  7011 ;; Registers used:
  7012 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7013 ;; Tracked objects:
  7014 ;;		On entry : 0/0
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7018 ;;      Params:         2       0       0       0       0       0       0
  7019 ;;      Locals:         9       0       0       0       0       0       0
  7020 ;;      Temps:          4       0       0       0       0       0       0
  7021 ;;      Totals:        15       0       0       0       0       0       0
  7022 ;;Total ram usage:       15 bytes
  7023 ;; Hardware stack levels used:    1
  7024 ;; Hardware stack levels required when called:    3
  7025 ;; This function calls:
  7026 ;;		___wmul
  7027 ;;		_isdigit
  7028 ;;		_isspace
  7029 ;; This function is called by:
  7030 ;;		_vfpfcnvrt
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text27
  7035  0026D0                     __ptext27:
  7036                           	opt callstack 0
  7037  0026D0                     _atoi:
  7038                           	opt callstack 0
  7039  0026D0  FFFF               	dw	65535	; assembler added errata NOP
  7040                           
  7041                           ;incstack = 0
  7042  0026D2  0E00               	movlw	0
  7043  0026D4  6E16               	movwf	atoi@n+1,c
  7044  0026D6  0E00               	movlw	0
  7045  0026D8  6E15               	movwf	atoi@n,c
  7046  0026DA  0E00               	movlw	0
  7047  0026DC  6E0F               	movwf	atoi@neg+1,c
  7048  0026DE  0E00               	movlw	0
  7049  0026E0  6E0E               	movwf	atoi@neg,c
  7050  0026E2  D003               	goto	l3692
  7051  0026E4                     l3690:
  7052  0026E4  FFFF               	dw	65535	; assembler added errata NOP
  7053  0026E6  4A08               	infsnz	atoi@s,f,c
  7054  0026E8  2A09               	incf	atoi@s+1,f,c
  7055  0026EA                     l3692:
  7056  0026EA  FFFF               	dw	65535	; assembler added errata NOP
  7057  0026EC  0E01               	movlw	1
  7058  0026EE  6E14               	movwf	_atoi$1791,c
  7059  0026F0  C008  FFF6         	movff	atoi@s,tblptrl
  7060  0026F4  C009  FFF7         	movff	atoi@s+1,tblptrh
  7061  0026F8                     	if	0	;tblptru may be non-zero
  7062  0026F8                     	endif
  7063  0026F8                     	if	0	;tblptru may be non-zero
  7064  0026F8                     	endif
  7065  0026F8  0008               	tblrd		*
  7066  0026FA  FFFF               	dw	65535	; errata NOP
  7067  0026FC  50F5               	movf	tablat,w,c
  7068  0026FE  0A20               	xorlw	32
  7069  002700  B4D8               	btfsc	status,2,c
  7070  002702  D019               	goto	l3700
  7071  002704  0EF7               	movlw	247
  7072  002706  6E0A               	movwf	??_atoi& (0+255),c
  7073  002708  0EFF               	movlw	255
  7074  00270A  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7075  00270C  C008  FFF6         	movff	atoi@s,tblptrl
  7076  002710  C009  FFF7         	movff	atoi@s+1,tblptrh
  7077  002714                     	if	0	;tblptru may be non-zero
  7078  002714                     	endif
  7079  002714                     	if	0	;tblptru may be non-zero
  7080  002714                     	endif
  7081  002714  0008               	tblrd		*
  7082  002716  FFFF               	dw	65535	; errata NOP
  7083  002718  50F5               	movf	tablat,w,c
  7084  00271A  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7085  00271C  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7086  00271E  500A               	movf	??_atoi,w,c
  7087  002720  260C               	addwf	??_atoi+2,f,c
  7088  002722  500B               	movf	??_atoi+1,w,c
  7089  002724  220D               	addwfc	??_atoi+3,f,c
  7090  002726  500D               	movf	??_atoi+3,w,c
  7091  002728  E104               	bnz	u3700
  7092  00272A  0E05               	movlw	5
  7093  00272C  5C0C               	subwf	??_atoi+2,w,c
  7094  00272E  A0D8               	btfss	status,0,c
  7095  002730  D002               	goto	l3700
  7096  002732                     u3700:
  7097  002732  0E00               	movlw	0
  7098  002734  6E14               	movwf	_atoi$1791,c
  7099  002736                     l3700:
  7100  002736  FFFF               	dw	65535	; assembler added errata NOP
  7101  002738  C014  F010         	movff	_atoi$1791,_atoi$1790
  7102  00273C  6A11               	clrf	_atoi$1790+1,c
  7103  00273E  5010               	movf	_atoi$1790,w,c
  7104  002740  1011               	iorwf	_atoi$1790+1,w,c
  7105  002742  B4D8               	btfsc	status,2,c
  7106  002744  D00A               	goto	l3710
  7107  002746  D7CE               	goto	l3690
  7108  002748                     l3706:
  7109  002748  FFFF               	dw	65535	; assembler added errata NOP
  7110  00274A  0E00               	movlw	0
  7111  00274C  6E0F               	movwf	atoi@neg+1,c
  7112  00274E  0E01               	movlw	1
  7113  002750  6E0E               	movwf	atoi@neg,c
  7114  002752                     l3708:
  7115  002752  FFFF               	dw	65535	; assembler added errata NOP
  7116  002754  4A08               	infsnz	atoi@s,f,c
  7117  002756  2A09               	incf	atoi@s+1,f,c
  7118  002758  D032               	goto	l3716
  7119  00275A                     l3710:
  7120  00275A  FFFF               	dw	65535	; assembler added errata NOP
  7121  00275C  C008  FFF6         	movff	atoi@s,tblptrl
  7122  002760  C009  FFF7         	movff	atoi@s+1,tblptrh
  7123  002764                     	if	0	;tblptru may be non-zero
  7124  002764                     	endif
  7125  002764                     	if	0	;tblptru may be non-zero
  7126  002764                     	endif
  7127  002764  0008               	tblrd		*
  7128  002766  FFFF               	dw	65535	; errata NOP
  7129  002768  50F5               	movf	tablat,w,c
  7130  00276A  6E0A               	movwf	??_atoi& (0+255),c
  7131  00276C  6A0B               	clrf	(??_atoi+1)& (0+255),c
  7132                           
  7133                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7134                           ; Switch size 1, requested type "simple"
  7135                           ; Number of cases is 1, Range of values is 0 to 0
  7136                           ; switch strategies available:
  7137                           ; Name         Instructions Cycles
  7138                           ; simple_byte            4     3 (average)
  7139                           ;	Chosen strategy is simple_byte
  7140  00276E  500B               	movf	??_atoi+1,w,c
  7141  002770  0A00               	xorlw	0	; case 0
  7142  002772  A4D8               	btfss	status,2,c
  7143  002774  D024               	goto	l3716
  7144                           
  7145                           ; Switch size 1, requested type "simple"
  7146                           ; Number of cases is 2, Range of values is 43 to 45
  7147                           ; switch strategies available:
  7148                           ; Name         Instructions Cycles
  7149                           ; simple_byte            7     4 (average)
  7150                           ;	Chosen strategy is simple_byte
  7151  002776  500A               	movf	??_atoi,w,c
  7152  002778  0A2B               	xorlw	43	; case 43
  7153  00277A  B4D8               	btfsc	status,2,c
  7154  00277C  D7EA               	goto	l3708
  7155  00277E  0A06               	xorlw	6	; case 45
  7156  002780  B4D8               	btfsc	status,2,c
  7157  002782  D7E2               	goto	l3706
  7158  002784  D01C               	goto	l3716
  7159  002786                     l3712:
  7160  002786  FFFF               	dw	65535	; assembler added errata NOP
  7161  002788  C015  F001         	movff	atoi@n,___wmul@multiplier
  7162  00278C  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7163  002790  0E00               	movlw	0
  7164  002792  6E04               	movwf	___wmul@multiplicand+1,c
  7165  002794  0E0A               	movlw	10
  7166  002796  6E03               	movwf	___wmul@multiplicand,c
  7167  002798  EC52  F01C         	call	___wmul	;wreg free
  7168  00279C  C008  FFF6         	movff	atoi@s,tblptrl
  7169  0027A0  C009  FFF7         	movff	atoi@s+1,tblptrh
  7170  0027A4                     	if	0	;tblptru may be non-zero
  7171  0027A4                     	endif
  7172  0027A4                     	if	0	;tblptru may be non-zero
  7173  0027A4                     	endif
  7174  0027A4  0008               	tblrd		*
  7175  0027A6  FFFF               	dw	65535	; errata NOP
  7176  0027A8  50F5               	movf	tablat,w,c
  7177  0027AA  5E01               	subwf	?___wmul,f,c
  7178  0027AC  0E00               	movlw	0
  7179  0027AE  5A02               	subwfb	?___wmul+1,f,c
  7180  0027B0  0E30               	movlw	48
  7181  0027B2  2401               	addwf	?___wmul,w,c
  7182  0027B4  6E15               	movwf	atoi@n,c
  7183  0027B6  0E00               	movlw	0
  7184  0027B8  2002               	addwfc	?___wmul+1,w,c
  7185  0027BA  6E16               	movwf	atoi@n+1,c
  7186  0027BC  D7CA               	goto	l3708
  7187  0027BE                     l3716:
  7188  0027BE  FFFF               	dw	65535	; assembler added errata NOP
  7189  0027C0  0ED0               	movlw	208
  7190  0027C2  6E0A               	movwf	??_atoi& (0+255),c
  7191  0027C4  0EFF               	movlw	255
  7192  0027C6  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7193  0027C8  C008  FFF6         	movff	atoi@s,tblptrl
  7194  0027CC  C009  FFF7         	movff	atoi@s+1,tblptrh
  7195  0027D0                     	if	0	;tblptru may be non-zero
  7196  0027D0                     	endif
  7197  0027D0                     	if	0	;tblptru may be non-zero
  7198  0027D0                     	endif
  7199  0027D0  0008               	tblrd		*
  7200  0027D2  FFFF               	dw	65535	; errata NOP
  7201  0027D4  50F5               	movf	tablat,w,c
  7202  0027D6  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7203  0027D8  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7204  0027DA  500A               	movf	??_atoi,w,c
  7205  0027DC  260C               	addwf	??_atoi+2,f,c
  7206  0027DE  500B               	movf	??_atoi+1,w,c
  7207  0027E0  220D               	addwfc	??_atoi+3,f,c
  7208  0027E2  500D               	movf	??_atoi+3,w,c
  7209  0027E4  E106               	bnz	u3720
  7210  0027E6  0E0A               	movlw	10
  7211  0027E8  5C0C               	subwf	??_atoi+2,w,c
  7212  0027EA  B0D8               	btfsc	status,0,c
  7213  0027EC  D002               	goto	u3720
  7214  0027EE  0E01               	movlw	1
  7215  0027F0  D002               	goto	u3730
  7216  0027F2                     u3720:
  7217  0027F2  FFFF               	dw	65535	; assembler added errata NOP
  7218  0027F4  0E00               	movlw	0
  7219  0027F6                     u3730:
  7220  0027F6  FFFF               	dw	65535	; assembler added errata NOP
  7221  0027F8  6E12               	movwf	_atoi$1792,c
  7222  0027FA  6A13               	clrf	_atoi$1792+1,c
  7223  0027FC  5012               	movf	_atoi$1792,w,c
  7224  0027FE  1013               	iorwf	_atoi$1792+1,w,c
  7225  002800  A4D8               	btfss	status,2,c
  7226  002802  D7C1               	goto	l3712
  7227  002804  500E               	movf	atoi@neg,w,c
  7228  002806  100F               	iorwf	atoi@neg+1,w,c
  7229  002808  A4D8               	btfss	status,2,c
  7230  00280A  D00D               	goto	l1266
  7231  00280C  C015  F00A         	movff	atoi@n,??_atoi
  7232  002810  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7233  002814  1E0A               	comf	??_atoi,f,c
  7234  002816  1E0B               	comf	??_atoi+1,f,c
  7235  002818  4A0A               	infsnz	??_atoi,f,c
  7236  00281A  2A0B               	incf	??_atoi+1,f,c
  7237  00281C  C00A  F008         	movff	??_atoi,?_atoi
  7238  002820  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7239  002824  D005               	goto	l1269
  7240  002826                     l1266:
  7241  002826  FFFF               	dw	65535	; assembler added errata NOP
  7242  002828  C015  F008         	movff	atoi@n,?_atoi
  7243  00282C  C016  F009         	movff	atoi@n+1,?_atoi+1
  7244  002830                     l1269:
  7245  002830  FFFF               	dw	65535	; assembler added errata NOP
  7246  002832  0012               	return		;funcret
  7247  002834  FFFF               	dw	65535	; errata NOP
  7248  002836                     __end_of_atoi:
  7249                           	opt callstack 0
  7250                           
  7251 ;; *************** function _isspace *****************
  7252 ;; Defined at:
  7253 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;  c               2    0[COMRAM] int 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;		None
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  2    0[COMRAM] int 
  7260 ;; Registers used:
  7261 ;;		wreg, status,2, status,0
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7267 ;;      Params:         2       0       0       0       0       0       0
  7268 ;;      Locals:         1       0       0       0       0       0       0
  7269 ;;      Temps:          4       0       0       0       0       0       0
  7270 ;;      Totals:         7       0       0       0       0       0       0
  7271 ;;Total ram usage:        7 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:    2
  7274 ;; This function calls:
  7275 ;;		Nothing
  7276 ;; This function is called by:
  7277 ;;		_atoi
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           	psect	text28
  7282  00364C                     __ptext28:
  7283                           	opt callstack 0
  7284  00364C                     _isspace:
  7285                           	opt callstack 0
  7286  00364C  FFFF               	dw	65535	; assembler added errata NOP
  7287                           
  7288                           ;incstack = 0
  7289  00364E  0E01               	movlw	1
  7290  003650  6E07               	movwf	_isspace$1827,c
  7291  003652  0E20               	movlw	32
  7292  003654  1801               	xorwf	isspace@c,w,c
  7293  003656  1002               	iorwf	isspace@c+1,w,c
  7294  003658  B4D8               	btfsc	status,2,c
  7295  00365A  D014               	goto	l3416
  7296  00365C  0EF7               	movlw	247
  7297  00365E  6E03               	movwf	??_isspace& (0+255),c
  7298  003660  0EFF               	movlw	255
  7299  003662  6E04               	movwf	(??_isspace+1)& (0+255),c
  7300  003664  C001  F005         	movff	isspace@c,??_isspace+2
  7301  003668  C002  F006         	movff	isspace@c+1,??_isspace+3
  7302  00366C  5003               	movf	??_isspace,w,c
  7303  00366E  2605               	addwf	??_isspace+2,f,c
  7304  003670  5004               	movf	??_isspace+1,w,c
  7305  003672  2206               	addwfc	??_isspace+3,f,c
  7306  003674  5006               	movf	??_isspace+3,w,c
  7307  003676  E104               	bnz	u3090
  7308  003678  0E05               	movlw	5
  7309  00367A  5C05               	subwf	??_isspace+2,w,c
  7310  00367C  A0D8               	btfss	status,0,c
  7311  00367E  D002               	goto	l3416
  7312  003680                     u3090:
  7313  003680  0E00               	movlw	0
  7314  003682  6E07               	movwf	_isspace$1827,c
  7315  003684                     l3416:
  7316  003684  FFFF               	dw	65535	; assembler added errata NOP
  7317  003686  C007  F001         	movff	_isspace$1827,?_isspace
  7318  00368A  6A02               	clrf	?_isspace+1,c
  7319  00368C  0012               	return		;funcret
  7320  00368E  FFFF               	dw	65535	; errata NOP
  7321  003690                     __end_of_isspace:
  7322                           	opt callstack 0
  7323                           
  7324 ;; *************** function _isdigit *****************
  7325 ;; Defined at:
  7326 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;  c               2    0[COMRAM] int 
  7329 ;; Auto vars:     Size  Location     Type
  7330 ;;		None
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  2    0[COMRAM] int 
  7333 ;; Registers used:
  7334 ;;		wreg, status,2, status,0
  7335 ;; Tracked objects:
  7336 ;;		On entry : 0/0
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7340 ;;      Params:         2       0       0       0       0       0       0
  7341 ;;      Locals:         0       0       0       0       0       0       0
  7342 ;;      Temps:          4       0       0       0       0       0       0
  7343 ;;      Totals:         6       0       0       0       0       0       0
  7344 ;;Total ram usage:        6 bytes
  7345 ;; Hardware stack levels used:    1
  7346 ;; Hardware stack levels required when called:    2
  7347 ;; This function calls:
  7348 ;;		Nothing
  7349 ;; This function is called by:
  7350 ;;		_vfpfcnvrt
  7351 ;;		_atoi
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           	psect	text29
  7356  00383A                     __ptext29:
  7357                           	opt callstack 0
  7358  00383A                     _isdigit:
  7359                           	opt callstack 0
  7360  00383A  FFFF               	dw	65535	; assembler added errata NOP
  7361                           
  7362                           ;incstack = 0
  7363  00383C  0ED0               	movlw	208
  7364  00383E  6E03               	movwf	??_isdigit& (0+255),c
  7365  003840  0EFF               	movlw	255
  7366  003842  6E04               	movwf	(??_isdigit+1)& (0+255),c
  7367  003844  C001  F005         	movff	isdigit@c,??_isdigit+2
  7368  003848  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7369  00384C  5003               	movf	??_isdigit,w,c
  7370  00384E  2605               	addwf	??_isdigit+2,f,c
  7371  003850  5004               	movf	??_isdigit+1,w,c
  7372  003852  2206               	addwfc	??_isdigit+3,f,c
  7373  003854  5006               	movf	??_isdigit+3,w,c
  7374  003856  E106               	bnz	u2860
  7375  003858  0E0A               	movlw	10
  7376  00385A  5C05               	subwf	??_isdigit+2,w,c
  7377  00385C  B0D8               	btfsc	status,0,c
  7378  00385E  D002               	goto	u2860
  7379  003860  0E01               	movlw	1
  7380  003862  D002               	goto	u2870
  7381  003864                     u2860:
  7382  003864  FFFF               	dw	65535	; assembler added errata NOP
  7383  003866  0E00               	movlw	0
  7384  003868                     u2870:
  7385  003868  FFFF               	dw	65535	; assembler added errata NOP
  7386  00386A  6E01               	movwf	?_isdigit,c
  7387  00386C  6A02               	clrf	?_isdigit+1,c
  7388  00386E  0012               	return		;funcret
  7389  003870  FFFF               	dw	65535	; errata NOP
  7390  003872                     __end_of_isdigit:
  7391                           	opt callstack 0
  7392                           
  7393 ;; *************** function ___wmul *****************
  7394 ;; Defined at:
  7395 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  7396 ;; Parameters:    Size  Location     Type
  7397 ;;  multiplier      2    0[COMRAM] unsigned int 
  7398 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7399 ;; Auto vars:     Size  Location     Type
  7400 ;;  product         2    4[COMRAM] unsigned int 
  7401 ;; Return value:  Size  Location     Type
  7402 ;;                  2    0[COMRAM] unsigned int 
  7403 ;; Registers used:
  7404 ;;		wreg, status,2, status,0, prodl, prodh
  7405 ;; Tracked objects:
  7406 ;;		On entry : 0/0
  7407 ;;		On exit  : 0/0
  7408 ;;		Unchanged: 0/0
  7409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7410 ;;      Params:         4       0       0       0       0       0       0
  7411 ;;      Locals:         2       0       0       0       0       0       0
  7412 ;;      Temps:          0       0       0       0       0       0       0
  7413 ;;      Totals:         6       0       0       0       0       0       0
  7414 ;;Total ram usage:        6 bytes
  7415 ;; Hardware stack levels used:    1
  7416 ;; Hardware stack levels required when called:    2
  7417 ;; This function calls:
  7418 ;;		Nothing
  7419 ;; This function is called by:
  7420 ;;		_atoi
  7421 ;; This function uses a non-reentrant model
  7422 ;;
  7423                           
  7424                           	psect	text30
  7425  0038A4                     __ptext30:
  7426                           	opt callstack 0
  7427  0038A4                     ___wmul:
  7428                           	opt callstack 0
  7429  0038A4  FFFF               	dw	65535	; assembler added errata NOP
  7430                           
  7431                           ;incstack = 0
  7432  0038A6  5001               	movf	___wmul@multiplier,w,c
  7433  0038A8  0203               	mulwf	___wmul@multiplicand,c
  7434  0038AA  CFF3 F005          	movff	prodl,___wmul@product
  7435  0038AE  CFF4 F006          	movff	prodh,___wmul@product+1
  7436  0038B2  5001               	movf	___wmul@multiplier,w,c
  7437  0038B4  0204               	mulwf	___wmul@multiplicand+1,c
  7438  0038B6  50F3               	movf	prodl,w,c
  7439  0038B8  2606               	addwf	___wmul@product+1,f,c
  7440  0038BA  5002               	movf	___wmul@multiplier+1,w,c
  7441  0038BC  0203               	mulwf	___wmul@multiplicand,c
  7442  0038BE  50F3               	movf	prodl,w,c
  7443  0038C0  2606               	addwf	___wmul@product+1,f,c
  7444  0038C2  C005  F001         	movff	___wmul@product,?___wmul
  7445  0038C6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7446  0038CA  0012               	return		;funcret
  7447  0038CC  FFFF               	dw	65535	; errata NOP
  7448  0038CE                     __end_of___wmul:
  7449                           	opt callstack 0
  7450                           
  7451 ;; *************** function _getchar *****************
  7452 ;; Defined at:
  7453 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getchar.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;		None
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;		None
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  2   32[None  ] int 
  7460 ;; Registers used:
  7461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7467 ;;      Params:         0       0       0       0       0       0       0
  7468 ;;      Locals:         0       0       0       0       0       0       0
  7469 ;;      Temps:          0       0       0       0       0       0       0
  7470 ;;      Totals:         0       0       0       0       0       0       0
  7471 ;;Total ram usage:        0 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:    4
  7474 ;; This function calls:
  7475 ;;		_fgetc
  7476 ;; This function is called by:
  7477 ;;		_int_to_char
  7478 ;;		_float_to_char
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           	psect	text31
  7483  00397E                     __ptext31:
  7484                           	opt callstack 0
  7485  00397E                     _getchar:
  7486                           	opt callstack 0
  7487  00397E  FFFF               	dw	65535	; assembler added errata NOP
  7488                           
  7489                           ;	Return value of _getchar is never used
  7490                           
  7491                           ;incstack = 0
  7492  003980  0E00               	movlw	0
  7493  003982  6E03               	movwf	fgetc@fp,c
  7494  003984  0E00               	movlw	0
  7495  003986  6E04               	movwf	fgetc@fp+1,c
  7496  003988  ECBD  F019         	call	_fgetc	;wreg free
  7497  00398C  0012               	return		;funcret
  7498  00398E  FFFF               	dw	65535	; errata NOP
  7499  003990                     __end_of_getchar:
  7500                           	opt callstack 0
  7501                           
  7502 ;; *************** function _fgetc *****************
  7503 ;; Defined at:
  7504 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_getc.c"
  7505 ;; Parameters:    Size  Location     Type
  7506 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7507 ;;		 -> NULL(0), 
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;  c               2    9[COMRAM] int 
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  2    2[COMRAM] int 
  7512 ;; Registers used:
  7513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7519 ;;      Params:         2       0       0       0       0       0       0
  7520 ;;      Locals:         2       0       0       0       0       0       0
  7521 ;;      Temps:          5       0       0       0       0       0       0
  7522 ;;      Totals:         9       0       0       0       0       0       0
  7523 ;;Total ram usage:        9 bytes
  7524 ;; Hardware stack levels used:    1
  7525 ;; Hardware stack levels required when called:    3
  7526 ;; This function calls:
  7527 ;;		_getch
  7528 ;; This function is called by:
  7529 ;;		_getchar
  7530 ;; This function uses a non-reentrant model
  7531 ;;
  7532                           
  7533                           	psect	text32
  7534  00337A                     __ptext32:
  7535                           	opt callstack 0
  7536  00337A                     _fgetc:
  7537                           	opt callstack 0
  7538  00337A  FFFF               	dw	65535	; assembler added errata NOP
  7539                           
  7540                           ;incstack = 0
  7541  00337C  5003               	movf	fgetc@fp,w,c
  7542  00337E  1004               	iorwf	fgetc@fp+1,w,c
  7543  003380  A4D8               	btfss	status,2,c
  7544  003382  D012               	goto	l4352
  7545  003384  507E               	movf	_ungetcnt,w,c
  7546  003386  B4D8               	btfsc	status,2,c
  7547  003388  D007               	goto	l4350
  7548  00338A  0E00               	movlw	0
  7549  00338C  6E0B               	movwf	fgetc@c+1,c
  7550  00338E  0E00               	movlw	0
  7551  003390  6E0A               	movwf	fgetc@c,c
  7552  003392  0E00               	movlw	0
  7553  003394  6E7E               	movwf	_ungetcnt,c
  7554  003396  D02F               	goto	l4354
  7555  003398                     l4350:
  7556  003398  FFFF               	dw	65535	; assembler added errata NOP
  7557  00339A  ECCF  F01C         	call	_getch	;wreg free
  7558  00339E  C001  F00A         	movff	?_getch,fgetc@c
  7559  0033A2  C002  F00B         	movff	?_getch+1,fgetc@c+1
  7560  0033A6  D027               	goto	l4354
  7561  0033A8                     l4352:
  7562  0033A8  FFFF               	dw	65535	; assembler added errata NOP
  7563  0033AA  EE20 F002          	lfsr	2,2
  7564  0033AE  5003               	movf	fgetc@fp,w,c
  7565  0033B0  26D9               	addwf	fsr2l,f,c
  7566  0033B2  5004               	movf	fgetc@fp+1,w,c
  7567  0033B4  22DA               	addwfc	fsr2h,f,c
  7568  0033B6  CFDE F005          	movff	postinc2,??_fgetc
  7569  0033BA  CFDD F006          	movff	postdec2,??_fgetc+1
  7570  0033BE  C003  FFD9         	movff	fgetc@fp,fsr2l
  7571  0033C2  C004  FFDA         	movff	fgetc@fp+1,fsr2h
  7572  0033C6  CFDE F007          	movff	postinc2,??_fgetc+2
  7573  0033CA  CFDD F008          	movff	postdec2,??_fgetc+3
  7574  0033CE  5005               	movf	??_fgetc,w,c
  7575  0033D0  2407               	addwf	??_fgetc+2,w,c
  7576  0033D2  6ED9               	movwf	fsr2l,c
  7577  0033D4  5006               	movf	??_fgetc+1,w,c
  7578  0033D6  2008               	addwfc	??_fgetc+3,w,c
  7579  0033D8  6EDA               	movwf	fsr2h,c
  7580  0033DA  50DF               	movf	indf2,w,c
  7581  0033DC  6E09               	movwf	(??_fgetc+4)& (0+255),c
  7582  0033DE  5009               	movf	??_fgetc+4,w,c
  7583  0033E0  6E0A               	movwf	fgetc@c,c
  7584  0033E2  6A0B               	clrf	fgetc@c+1,c
  7585  0033E4  EE20 F002          	lfsr	2,2
  7586  0033E8  5003               	movf	fgetc@fp,w,c
  7587  0033EA  26D9               	addwf	fsr2l,f,c
  7588  0033EC  5004               	movf	fgetc@fp+1,w,c
  7589  0033EE  22DA               	addwfc	fsr2h,f,c
  7590  0033F0  2ADE               	incf	postinc2,f,c
  7591  0033F2  0E00               	movlw	0
  7592  0033F4  22DD               	addwfc	postdec2,f,c
  7593  0033F6                     l4354:
  7594  0033F6  FFFF               	dw	65535	; assembler added errata NOP
  7595  0033F8  C00A  F003         	movff	fgetc@c,?_fgetc
  7596  0033FC  C00B  F004         	movff	fgetc@c+1,?_fgetc+1
  7597  003400  0012               	return		;funcret
  7598  003402  FFFF               	dw	65535	; errata NOP
  7599  003404                     __end_of_fgetc:
  7600                           	opt callstack 0
  7601                           
  7602 ;; *************** function _getch *****************
  7603 ;; Defined at:
  7604 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getch.c"
  7605 ;; Parameters:    Size  Location     Type
  7606 ;;		None
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;		None
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  2    0[COMRAM] int 
  7611 ;; Registers used:
  7612 ;;		None
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7618 ;;      Params:         2       0       0       0       0       0       0
  7619 ;;      Locals:         0       0       0       0       0       0       0
  7620 ;;      Temps:          0       0       0       0       0       0       0
  7621 ;;      Totals:         2       0       0       0       0       0       0
  7622 ;;Total ram usage:        2 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; Hardware stack levels required when called:    2
  7625 ;; This function calls:
  7626 ;;		Nothing
  7627 ;; This function is called by:
  7628 ;;		_fgetc
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text33
  7633  00399E                     __ptext33:
  7634                           	opt callstack 0
  7635  00399E                     _getch:
  7636                           	opt callstack 0
  7637  00399E  FFFF               	dw	65535	; assembler added errata NOP
  7638                           
  7639                           ;incstack = 0
  7640  0039A0  6801               	setf	?_getch,c
  7641  0039A2  6802               	setf	?_getch+1,c
  7642  0039A4  0012               	return		;funcret
  7643  0039A6  FFFF               	dw	65535	; errata NOP
  7644  0039A8                     __end_of_getch:
  7645                           	opt callstack 0
  7646                           
  7647 ;; *************** function _initialize_TX *****************
  7648 ;; Defined at:
  7649 ;;		line 23 in file "serial.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;		None
  7652 ;; Auto vars:     Size  Location     Type
  7653 ;;		None
  7654 ;; Return value:  Size  Location     Type
  7655 ;;                  1    wreg      void 
  7656 ;; Registers used:
  7657 ;;		wreg, status,2
  7658 ;; Tracked objects:
  7659 ;;		On entry : 0/0
  7660 ;;		On exit  : 0/0
  7661 ;;		Unchanged: 0/0
  7662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7663 ;;      Params:         0       0       0       0       0       0       0
  7664 ;;      Locals:         0       0       0       0       0       0       0
  7665 ;;      Temps:          0       0       0       0       0       0       0
  7666 ;;      Totals:         0       0       0       0       0       0       0
  7667 ;;Total ram usage:        0 bytes
  7668 ;; Hardware stack levels used:    1
  7669 ;; Hardware stack levels required when called:    2
  7670 ;; This function calls:
  7671 ;;		Nothing
  7672 ;; This function is called by:
  7673 ;;		_main
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           	psect	text34
  7678  00392E                     __ptext34:
  7679                           	opt callstack 0
  7680  00392E                     _initialize_TX:
  7681                           	opt callstack 0
  7682  00392E  FFFF               	dw	65535	; assembler added errata NOP
  7683                           
  7684                           ;serial.c: 24:   TXSTAbits.TX9 = 1;
  7685                           
  7686                           ;incstack = 0
  7687  003930  8CAC               	bsf	4012,6,c	;volatile
  7688                           
  7689                           ;serial.c: 25:   TXSTAbits.TXEN = 1;
  7690  003932  8AAC               	bsf	4012,5,c	;volatile
  7691                           
  7692                           ;serial.c: 26:   TXSTAbits.SYNC = 0;
  7693  003934  98AC               	bcf	4012,4,c	;volatile
  7694                           
  7695                           ;serial.c: 27:   TXSTAbits.BRGH = 0;
  7696  003936  94AC               	bcf	4012,2,c	;volatile
  7697                           
  7698                           ;serial.c: 28:   TXSTAbits.TX9D = 1;
  7699  003938  80AC               	bsf	4012,0,c	;volatile
  7700                           
  7701                           ;serial.c: 29:   SPBRG = 25;
  7702  00393A  0E19               	movlw	25
  7703  00393C  6EAF               	movwf	4015,c	;volatile
  7704  00393E  0012               	return		;funcret
  7705  003940  FFFF               	dw	65535	; errata NOP
  7706  003942                     __end_of_initialize_TX:
  7707                           	opt callstack 0
  7708                           
  7709 ;; *************** function _initialize_RX *****************
  7710 ;; Defined at:
  7711 ;;		line 32 in file "serial.c"
  7712 ;; Parameters:    Size  Location     Type
  7713 ;;		None
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;		None
  7716 ;; Return value:  Size  Location     Type
  7717 ;;                  1    wreg      void 
  7718 ;; Registers used:
  7719 ;;		wreg, status,2
  7720 ;; Tracked objects:
  7721 ;;		On entry : 0/0
  7722 ;;		On exit  : 0/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7725 ;;      Params:         0       0       0       0       0       0       0
  7726 ;;      Locals:         0       0       0       0       0       0       0
  7727 ;;      Temps:          0       0       0       0       0       0       0
  7728 ;;      Totals:         0       0       0       0       0       0       0
  7729 ;;Total ram usage:        0 bytes
  7730 ;; Hardware stack levels used:    1
  7731 ;; Hardware stack levels required when called:    2
  7732 ;; This function calls:
  7733 ;;		Nothing
  7734 ;; This function is called by:
  7735 ;;		_main
  7736 ;; This function uses a non-reentrant model
  7737 ;;
  7738                           
  7739                           	psect	text35
  7740  003942                     __ptext35:
  7741                           	opt callstack 0
  7742  003942                     _initialize_RX:
  7743                           	opt callstack 0
  7744  003942  FFFF               	dw	65535	; assembler added errata NOP
  7745                           
  7746                           ;serial.c: 33:   RCSTA = 0x00;
  7747                           
  7748                           ;incstack = 0
  7749  003944  0E00               	movlw	0
  7750  003946  6EAB               	movwf	4011,c	;volatile
  7751                           
  7752                           ;serial.c: 34:   RCSTAbits.SPEN = 1;
  7753  003948  8EAB               	bsf	4011,7,c	;volatile
  7754                           
  7755                           ;serial.c: 35:   RCSTAbits.RX9 = 1;
  7756  00394A  8CAB               	bsf	4011,6,c	;volatile
  7757                           
  7758                           ;serial.c: 36:   RCSTAbits.CREN = 1;
  7759  00394C  88AB               	bsf	4011,4,c	;volatile
  7760                           
  7761                           ;serial.c: 37:   RCSTAbits.ADDEN = 0;
  7762  00394E  96AB               	bcf	4011,3,c	;volatile
  7763                           
  7764                           ;serial.c: 38:   RCSTAbits.RX9D = 1;
  7765  003950  80AB               	bsf	4011,0,c	;volatile
  7766  003952  0012               	return		;funcret
  7767  003954  FFFF               	dw	65535	; errata NOP
  7768  003956                     __end_of_initialize_RX:
  7769                           	opt callstack 0
  7770                           
  7771 ;; *************** function _initialize_PWM *****************
  7772 ;; Defined at:
  7773 ;;		line 5 in file "pwm.c"
  7774 ;; Parameters:    Size  Location     Type
  7775 ;;		None
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;		None
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  1    wreg      void 
  7780 ;; Registers used:
  7781 ;;		wreg, status,2, status,0
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/0
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7787 ;;      Params:         0       0       0       0       0       0       0
  7788 ;;      Locals:         0       0       0       0       0       0       0
  7789 ;;      Temps:          0       0       0       0       0       0       0
  7790 ;;      Totals:         0       0       0       0       0       0       0
  7791 ;;Total ram usage:        0 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; Hardware stack levels required when called:    2
  7794 ;; This function calls:
  7795 ;;		Nothing
  7796 ;; This function is called by:
  7797 ;;		_main
  7798 ;; This function uses a non-reentrant model
  7799 ;;
  7800                           
  7801                           	psect	text36
  7802  003916                     __ptext36:
  7803                           	opt callstack 0
  7804  003916                     _initialize_PWM:
  7805                           	opt callstack 0
  7806  003916  FFFF               	dw	65535	; assembler added errata NOP
  7807                           
  7808                           ;pwm.c: 6:   PR2 = 0xFF;
  7809                           
  7810                           ;incstack = 0
  7811  003918  68CB               	setf	4043,c	;volatile
  7812                           
  7813                           ;pwm.c: 7:   CCPR1L = 0xFF;
  7814  00391A  68BE               	setf	4030,c	;volatile
  7815                           
  7816                           ;pwm.c: 8:   CCP1CON |= 0x30;
  7817  00391C  0E30               	movlw	48
  7818  00391E  12BD               	iorwf	4029,f,c	;volatile
  7819                           
  7820                           ;pwm.c: 9:   T2CON = 0x06;
  7821  003920  0E06               	movlw	6
  7822  003922  6ECA               	movwf	4042,c	;volatile
  7823                           
  7824                           ;pwm.c: 10:   CCP1CON |= 0x0C;
  7825  003924  0E0C               	movlw	12
  7826  003926  12BD               	iorwf	4029,f,c	;volatile
  7827                           
  7828                           ;pwm.c: 11:   TRISCbits.TRISC2 = 0;
  7829  003928  9494               	bcf	3988,2,c	;volatile
  7830  00392A  0012               	return		;funcret
  7831  00392C  FFFF               	dw	65535	; errata NOP
  7832  00392E                     __end_of_initialize_PWM:
  7833                           	opt callstack 0
  7834                           
  7835 ;; *************** function _get_temp *****************
  7836 ;; Defined at:
  7837 ;;		line 10 in file "temp_adc.c"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;		None
  7840 ;; Auto vars:     Size  Location     Type
  7841 ;;  temp            4   55[COMRAM] float 
  7842 ;;  real_voltage    4   51[COMRAM] float 
  7843 ;;  adc_voltage     2   59[COMRAM] unsigned int 
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  4   47[COMRAM] float 
  7846 ;; Registers used:
  7847 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7853 ;;      Params:         4       0       0       0       0       0       0
  7854 ;;      Locals:        10       0       0       0       0       0       0
  7855 ;;      Temps:          0       0       0       0       0       0       0
  7856 ;;      Totals:        14       0       0       0       0       0       0
  7857 ;;Total ram usage:       14 bytes
  7858 ;; Hardware stack levels used:    1
  7859 ;; Hardware stack levels required when called:    4
  7860 ;; This function calls:
  7861 ;;		_ADC_Init
  7862 ;;		_ADC_Read
  7863 ;;		___flmul
  7864 ;;		___flsub
  7865 ;;		___xxtofl
  7866 ;; This function is called by:
  7867 ;;		_main
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           	psect	text37
  7872  002F1A                     __ptext37:
  7873                           	opt callstack 0
  7874  002F1A                     _get_temp:
  7875                           	opt callstack 0
  7876  002F1A  FFFF               	dw	65535	; assembler added errata NOP
  7877                           
  7878                           ;temp_adc.c: 11:   ADC_Init();
  7879                           
  7880                           ;incstack = 0
  7881  002F1C  ECC8  F01C         	call	_ADC_Init	;wreg free
  7882                           
  7883                           ;temp_adc.c: 12:   ADCON1 &= ~(0x01);
  7884  002F20  90C1               	bcf	4033,0,c	;volatile
  7885                           
  7886                           ;temp_adc.c: 13:   TRISA |= 0x01;
  7887  002F22  8092               	bsf	3986,0,c	;volatile
  7888                           
  7889                           ;temp_adc.c: 14:   unsigned int adc_voltage = ADC_Read((unsigned char) 0);
  7890  002F24  0E00               	movlw	0
  7891  002F26  ECB3  F01A         	call	_ADC_Read
  7892  002F2A  C001  F03C         	movff	?_ADC_Read,get_temp@adc_voltage
  7893  002F2E  C002  F03D         	movff	?_ADC_Read+1,get_temp@adc_voltage+1
  7894                           
  7895                           ;temp_adc.c: 15:   float real_voltage = (adc_voltage * 0.0053);
  7896  002F32  C03C  F001         	movff	get_temp@adc_voltage,___xxtofl@val
  7897  002F36  C03D  F002         	movff	get_temp@adc_voltage+1,___xxtofl@val+1
  7898  002F3A  6A03               	clrf	___xxtofl@val+2,c
  7899  002F3C  6A04               	clrf	___xxtofl@val+3,c
  7900  002F3E  0E00               	movlw	0
  7901  002F40  ECC9  F014         	call	___xxtofl
  7902  002F44  C001  F00F         	movff	?___xxtofl,___flmul@b
  7903  002F48  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  7904  002F4C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  7905  002F50  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  7906  002F54  0E9F               	movlw	159
  7907  002F56  6E13               	movwf	___flmul@a,c
  7908  002F58  0EAB               	movlw	171
  7909  002F5A  6E14               	movwf	___flmul@a+1,c
  7910  002F5C  0EAD               	movlw	173
  7911  002F5E  6E15               	movwf	___flmul@a+2,c
  7912  002F60  0E3B               	movlw	59
  7913  002F62  6E16               	movwf	___flmul@a+3,c
  7914  002F64  ECF6  F00B         	call	___flmul	;wreg free
  7915  002F68  C00F  F034         	movff	?___flmul,get_temp@real_voltage
  7916  002F6C  C010  F035         	movff	?___flmul+1,get_temp@real_voltage+1
  7917  002F70  C011  F036         	movff	?___flmul+2,get_temp@real_voltage+2
  7918  002F74  C012  F037         	movff	?___flmul+3,get_temp@real_voltage+3
  7919                           
  7920                           ;temp_adc.c: 17:   float temp = 200 - 175.0 / 5.0 * real_voltage;
  7921  002F78  0E00               	movlw	0
  7922  002F7A  6E28               	movwf	___flsub@b,c
  7923  002F7C  0E00               	movlw	0
  7924  002F7E  6E29               	movwf	___flsub@b+1,c
  7925  002F80  0E48               	movlw	72
  7926  002F82  6E2A               	movwf	___flsub@b+2,c
  7927  002F84  0E43               	movlw	67
  7928  002F86  6E2B               	movwf	___flsub@b+3,c
  7929  002F88  0E00               	movlw	0
  7930  002F8A  6E13               	movwf	___flmul@a,c
  7931  002F8C  0E00               	movlw	0
  7932  002F8E  6E14               	movwf	___flmul@a+1,c
  7933  002F90  0E0C               	movlw	12
  7934  002F92  6E15               	movwf	___flmul@a+2,c
  7935  002F94  0E42               	movlw	66
  7936  002F96  6E16               	movwf	___flmul@a+3,c
  7937  002F98  C034  F00F         	movff	get_temp@real_voltage,___flmul@b
  7938  002F9C  C035  F010         	movff	get_temp@real_voltage+1,___flmul@b+1
  7939  002FA0  C036  F011         	movff	get_temp@real_voltage+2,___flmul@b+2
  7940  002FA4  C037  F012         	movff	get_temp@real_voltage+3,___flmul@b+3
  7941  002FA8  ECF6  F00B         	call	___flmul	;wreg free
  7942  002FAC  C00F  F02C         	movff	?___flmul,___flsub@a
  7943  002FB0  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  7944  002FB4  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  7945  002FB8  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  7946  002FBC  ECDD  F01A         	call	___flsub	;wreg free
  7947  002FC0  C028  F038         	movff	?___flsub,get_temp@temp
  7948  002FC4  C029  F039         	movff	?___flsub+1,get_temp@temp+1
  7949  002FC8  C02A  F03A         	movff	?___flsub+2,get_temp@temp+2
  7950  002FCC  C02B  F03B         	movff	?___flsub+3,get_temp@temp+3
  7951                           
  7952                           ;temp_adc.c: 18:   return temp;
  7953  002FD0  C038  F030         	movff	get_temp@temp,?_get_temp
  7954  002FD4  C039  F031         	movff	get_temp@temp+1,?_get_temp+1
  7955  002FD8  C03A  F032         	movff	get_temp@temp+2,?_get_temp+2
  7956  002FDC  C03B  F033         	movff	get_temp@temp+3,?_get_temp+3
  7957  002FE0  0012               	return		;funcret
  7958  002FE2  FFFF               	dw	65535	; errata NOP
  7959  002FE4                     __end_of_get_temp:
  7960                           	opt callstack 0
  7961                           
  7962 ;; *************** function ___xxtofl *****************
  7963 ;; Defined at:
  7964 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;  sign            1    wreg     unsigned char 
  7967 ;;  val             4    0[COMRAM] long 
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;  sign            1    8[COMRAM] unsigned char 
  7970 ;;  arg             4   10[COMRAM] unsigned long 
  7971 ;;  exp             1    9[COMRAM] unsigned char 
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  4    0[COMRAM] unsigned char 
  7974 ;; Registers used:
  7975 ;;		wreg, status,2, status,0
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7981 ;;      Params:         4       0       0       0       0       0       0
  7982 ;;      Locals:         6       0       0       0       0       0       0
  7983 ;;      Temps:          4       0       0       0       0       0       0
  7984 ;;      Totals:        14       0       0       0       0       0       0
  7985 ;;Total ram usage:       14 bytes
  7986 ;; Hardware stack levels used:    1
  7987 ;; Hardware stack levels required when called:    2
  7988 ;; This function calls:
  7989 ;;		Nothing
  7990 ;; This function is called by:
  7991 ;;		_get_temp
  7992 ;; This function uses a non-reentrant model
  7993 ;;
  7994                           
  7995                           	psect	text38
  7996  002992                     __ptext38:
  7997                           	opt callstack 0
  7998  002992                     ___xxtofl:
  7999                           	opt callstack 0
  8000  002992  FFFF               	dw	65535	; assembler added errata NOP
  8001                           
  8002                           ;incstack = 0
  8003                           ;___xxtofl@sign stored from wreg
  8004  002994  6E09               	movwf	___xxtofl@sign,c
  8005  002996  5009               	movf	___xxtofl@sign,w,c
  8006  002998  A4D8               	btfss	status,2,c
  8007  00299A  AE04               	btfss	___xxtofl@val+3,7,c
  8008  00299C  D01A               	goto	l1215
  8009  00299E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8010  0029A2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8011  0029A6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8012  0029AA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8013  0029AE  1E05               	comf	??___xxtofl,f,c
  8014  0029B0  1E06               	comf	??___xxtofl+1,f,c
  8015  0029B2  1E07               	comf	??___xxtofl+2,f,c
  8016  0029B4  1E08               	comf	??___xxtofl+3,f,c
  8017  0029B6  2A05               	incf	??___xxtofl,f,c
  8018  0029B8  0E00               	movlw	0
  8019  0029BA  2206               	addwfc	??___xxtofl+1,f,c
  8020  0029BC  2207               	addwfc	??___xxtofl+2,f,c
  8021  0029BE  2208               	addwfc	??___xxtofl+3,f,c
  8022  0029C0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8023  0029C4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8024  0029C8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8025  0029CC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8026  0029D0  D009               	goto	l4562
  8027  0029D2                     l1215:
  8028  0029D2  FFFF               	dw	65535	; assembler added errata NOP
  8029  0029D4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8030  0029D8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8031  0029DC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8032  0029E0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8033  0029E4                     l4562:
  8034  0029E4  FFFF               	dw	65535	; assembler added errata NOP
  8035  0029E6  5001               	movf	___xxtofl@val,w,c
  8036  0029E8  1002               	iorwf	___xxtofl@val+1,w,c
  8037  0029EA  1003               	iorwf	___xxtofl@val+2,w,c
  8038  0029EC  1004               	iorwf	___xxtofl@val+3,w,c
  8039  0029EE  A4D8               	btfss	status,2,c
  8040  0029F0  D009               	goto	l4568
  8041  0029F2  0E00               	movlw	0
  8042  0029F4  6E01               	movwf	?___xxtofl,c
  8043  0029F6  0E00               	movlw	0
  8044  0029F8  6E02               	movwf	?___xxtofl+1,c
  8045  0029FA  0E00               	movlw	0
  8046  0029FC  6E03               	movwf	?___xxtofl+2,c
  8047  0029FE  0E00               	movlw	0
  8048  002A00  6E04               	movwf	?___xxtofl+3,c
  8049  002A02  D072               	goto	l1218
  8050  002A04                     l4568:
  8051  002A04  FFFF               	dw	65535	; assembler added errata NOP
  8052  002A06  0E96               	movlw	150
  8053  002A08  6E0A               	movwf	___xxtofl@exp,c
  8054  002A0A  D007               	goto	l4572
  8055  002A0C                     l4570:
  8056  002A0C  FFFF               	dw	65535	; assembler added errata NOP
  8057  002A0E  2A0A               	incf	___xxtofl@exp,f,c
  8058  002A10  90D8               	bcf	status,0,c
  8059  002A12  320E               	rrcf	___xxtofl@arg+3,f,c
  8060  002A14  320D               	rrcf	___xxtofl@arg+2,f,c
  8061  002A16  320C               	rrcf	___xxtofl@arg+1,f,c
  8062  002A18  320B               	rrcf	___xxtofl@arg,f,c
  8063  002A1A                     l4572:
  8064  002A1A  FFFF               	dw	65535	; assembler added errata NOP
  8065  002A1C  0E00               	movlw	0
  8066  002A1E  140B               	andwf	___xxtofl@arg,w,c
  8067  002A20  6E05               	movwf	??___xxtofl& (0+255),c
  8068  002A22  0E00               	movlw	0
  8069  002A24  140C               	andwf	___xxtofl@arg+1,w,c
  8070  002A26  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8071  002A28  0E00               	movlw	0
  8072  002A2A  140D               	andwf	___xxtofl@arg+2,w,c
  8073  002A2C  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8074  002A2E  0EFE               	movlw	254
  8075  002A30  140E               	andwf	___xxtofl@arg+3,w,c
  8076  002A32  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8077  002A34  5005               	movf	??___xxtofl,w,c
  8078  002A36  1006               	iorwf	??___xxtofl+1,w,c
  8079  002A38  1007               	iorwf	??___xxtofl+2,w,c
  8080  002A3A  1008               	iorwf	??___xxtofl+3,w,c
  8081  002A3C  B4D8               	btfsc	status,2,c
  8082  002A3E  D00E               	goto	l1222
  8083  002A40  D7E5               	goto	l4570
  8084  002A42                     l4574:
  8085  002A42  FFFF               	dw	65535	; assembler added errata NOP
  8086  002A44  2A0A               	incf	___xxtofl@exp,f,c
  8087  002A46  0E01               	movlw	1
  8088  002A48  260B               	addwf	___xxtofl@arg,f,c
  8089  002A4A  0E00               	movlw	0
  8090  002A4C  220C               	addwfc	___xxtofl@arg+1,f,c
  8091  002A4E  220D               	addwfc	___xxtofl@arg+2,f,c
  8092  002A50  220E               	addwfc	___xxtofl@arg+3,f,c
  8093  002A52  90D8               	bcf	status,0,c
  8094  002A54  320E               	rrcf	___xxtofl@arg+3,f,c
  8095  002A56  320D               	rrcf	___xxtofl@arg+2,f,c
  8096  002A58  320C               	rrcf	___xxtofl@arg+1,f,c
  8097  002A5A  320B               	rrcf	___xxtofl@arg,f,c
  8098  002A5C                     l1222:
  8099  002A5C  FFFF               	dw	65535	; assembler added errata NOP
  8100  002A5E  0E00               	movlw	0
  8101  002A60  140B               	andwf	___xxtofl@arg,w,c
  8102  002A62  6E05               	movwf	??___xxtofl& (0+255),c
  8103  002A64  0E00               	movlw	0
  8104  002A66  140C               	andwf	___xxtofl@arg+1,w,c
  8105  002A68  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8106  002A6A  0E00               	movlw	0
  8107  002A6C  140D               	andwf	___xxtofl@arg+2,w,c
  8108  002A6E  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8109  002A70  0EFF               	movlw	255
  8110  002A72  140E               	andwf	___xxtofl@arg+3,w,c
  8111  002A74  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8112  002A76  5005               	movf	??___xxtofl,w,c
  8113  002A78  1006               	iorwf	??___xxtofl+1,w,c
  8114  002A7A  1007               	iorwf	??___xxtofl+2,w,c
  8115  002A7C  1008               	iorwf	??___xxtofl+3,w,c
  8116  002A7E  B4D8               	btfsc	status,2,c
  8117  002A80  D008               	goto	l4582
  8118  002A82  D7DF               	goto	l4574
  8119  002A84                     l4580:
  8120  002A84  FFFF               	dw	65535	; assembler added errata NOP
  8121  002A86  060A               	decf	___xxtofl@exp,f,c
  8122  002A88  90D8               	bcf	status,0,c
  8123  002A8A  360B               	rlcf	___xxtofl@arg,f,c
  8124  002A8C  360C               	rlcf	___xxtofl@arg+1,f,c
  8125  002A8E  360D               	rlcf	___xxtofl@arg+2,f,c
  8126  002A90  360E               	rlcf	___xxtofl@arg+3,f,c
  8127  002A92                     l4582:
  8128  002A92  FFFF               	dw	65535	; assembler added errata NOP
  8129  002A94  BE0D               	btfsc	___xxtofl@arg+2,7,c
  8130  002A96  D003               	goto	u5070
  8131  002A98  0E02               	movlw	2
  8132  002A9A  600A               	cpfslt	___xxtofl@exp,c
  8133  002A9C  D7F3               	goto	l4580
  8134  002A9E                     u5070:
  8135  002A9E  FFFF               	dw	65535	; assembler added errata NOP
  8136  002AA0  A00A               	btfss	___xxtofl@exp,0,c
  8137  002AA2  9E0D               	bcf	___xxtofl@arg+2,7,c
  8138  002AA4  90D8               	bcf	status,0,c
  8139  002AA6  320A               	rrcf	___xxtofl@exp,f,c
  8140  002AA8  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8141  002AAC  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  8142  002AAE  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  8143  002AB0  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  8144  002AB2  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8145  002AB6  6A07               	clrf	??___xxtofl+2,c
  8146  002AB8  6A06               	clrf	??___xxtofl+1,c
  8147  002ABA  6A05               	clrf	??___xxtofl,c
  8148  002ABC  5005               	movf	??___xxtofl,w,c
  8149  002ABE  120B               	iorwf	___xxtofl@arg,f,c
  8150  002AC0  5006               	movf	??___xxtofl+1,w,c
  8151  002AC2  120C               	iorwf	___xxtofl@arg+1,f,c
  8152  002AC4  5007               	movf	??___xxtofl+2,w,c
  8153  002AC6  120D               	iorwf	___xxtofl@arg+2,f,c
  8154  002AC8  5008               	movf	??___xxtofl+3,w,c
  8155  002ACA  120E               	iorwf	___xxtofl@arg+3,f,c
  8156  002ACC  5009               	movf	___xxtofl@sign,w,c
  8157  002ACE  A4D8               	btfss	status,2,c
  8158  002AD0  AE04               	btfss	___xxtofl@val+3,7,c
  8159  002AD2  D001               	goto	l4598
  8160  002AD4  8E0E               	bsf	___xxtofl@arg+3,7,c
  8161  002AD6                     l4598:
  8162  002AD6  FFFF               	dw	65535	; assembler added errata NOP
  8163  002AD8  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8164  002ADC  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8165  002AE0  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8166  002AE4  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8167  002AE8                     l1218:
  8168  002AE8  FFFF               	dw	65535	; assembler added errata NOP
  8169  002AEA  0012               	return		;funcret
  8170  002AEC  FFFF               	dw	65535	; errata NOP
  8171  002AEE                     __end_of___xxtofl:
  8172                           	opt callstack 0
  8173                           
  8174 ;; *************** function ___flsub *****************
  8175 ;; Defined at:
  8176 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;  b               4   39[COMRAM] unsigned char 
  8179 ;;  a               4   43[COMRAM] unsigned char 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;		None
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  4   39[COMRAM] unsigned char 
  8184 ;; Registers used:
  8185 ;;		wreg, status,2, status,0, cstack
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8191 ;;      Params:         8       0       0       0       0       0       0
  8192 ;;      Locals:         0       0       0       0       0       0       0
  8193 ;;      Temps:          0       0       0       0       0       0       0
  8194 ;;      Totals:         8       0       0       0       0       0       0
  8195 ;;Total ram usage:        8 bytes
  8196 ;; Hardware stack levels used:    1
  8197 ;; Hardware stack levels required when called:    3
  8198 ;; This function calls:
  8199 ;;		___fladd
  8200 ;; This function is called by:
  8201 ;;		_get_temp
  8202 ;; This function uses a non-reentrant model
  8203 ;;
  8204                           
  8205                           	psect	text39
  8206  0035BA                     __ptext39:
  8207                           	opt callstack 0
  8208  0035BA                     ___flsub:
  8209                           	opt callstack 0
  8210  0035BA  FFFF               	dw	65535	; assembler added errata NOP
  8211                           
  8212                           ;incstack = 0
  8213  0035BC  0E00               	movlw	0
  8214  0035BE  1A2C               	xorwf	___flsub@a,f,c
  8215  0035C0  0E00               	movlw	0
  8216  0035C2  1A2D               	xorwf	___flsub@a+1,f,c
  8217  0035C4  0E00               	movlw	0
  8218  0035C6  1A2E               	xorwf	___flsub@a+2,f,c
  8219  0035C8  0E80               	movlw	128
  8220  0035CA  1A2F               	xorwf	___flsub@a+3,f,c
  8221  0035CC  C028  F001         	movff	___flsub@b,___fladd@b
  8222  0035D0  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  8223  0035D4  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  8224  0035D8  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  8225  0035DC  C02C  F005         	movff	___flsub@a,___fladd@a
  8226  0035E0  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  8227  0035E4  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  8228  0035E8  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  8229  0035EC  ECB7  F00D         	call	___fladd	;wreg free
  8230  0035F0  C001  F028         	movff	?___fladd,?___flsub
  8231  0035F4  C002  F029         	movff	?___fladd+1,?___flsub+1
  8232  0035F8  C003  F02A         	movff	?___fladd+2,?___flsub+2
  8233  0035FC  C004  F02B         	movff	?___fladd+3,?___flsub+3
  8234  003600  0012               	return		;funcret
  8235  003602  FFFF               	dw	65535	; errata NOP
  8236  003604                     __end_of___flsub:
  8237                           	opt callstack 0
  8238                           
  8239 ;; *************** function ___fladd *****************
  8240 ;; Defined at:
  8241 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;  b               4    0[COMRAM] unsigned char 
  8244 ;;  a               4    4[COMRAM] unsigned char 
  8245 ;; Auto vars:     Size  Location     Type
  8246 ;;  grs             1   15[COMRAM] unsigned char 
  8247 ;;  bexp            1   14[COMRAM] unsigned char 
  8248 ;;  aexp            1   13[COMRAM] unsigned char 
  8249 ;;  signs           1   12[COMRAM] unsigned char 
  8250 ;; Return value:  Size  Location     Type
  8251 ;;                  4    0[COMRAM] unsigned char 
  8252 ;; Registers used:
  8253 ;;		wreg, status,2, status,0
  8254 ;; Tracked objects:
  8255 ;;		On entry : 0/0
  8256 ;;		On exit  : 0/0
  8257 ;;		Unchanged: 0/0
  8258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8259 ;;      Params:         8       0       0       0       0       0       0
  8260 ;;      Locals:         4       0       0       0       0       0       0
  8261 ;;      Temps:          4       0       0       0       0       0       0
  8262 ;;      Totals:        16       0       0       0       0       0       0
  8263 ;;Total ram usage:       16 bytes
  8264 ;; Hardware stack levels used:    1
  8265 ;; Hardware stack levels required when called:    2
  8266 ;; This function calls:
  8267 ;;		Nothing
  8268 ;; This function is called by:
  8269 ;;		___flsub
  8270 ;; This function uses a non-reentrant model
  8271 ;;
  8272                           
  8273                           	psect	text40
  8274  001B6E                     __ptext40:
  8275                           	opt callstack 0
  8276  001B6E                     ___fladd:
  8277                           	opt callstack 0
  8278  001B6E  FFFF               	dw	65535	; assembler added errata NOP
  8279                           
  8280                           ;incstack = 0
  8281  001B70  5004               	movf	___fladd@b+3,w,c
  8282  001B72  0B80               	andlw	128
  8283  001B74  6E0D               	movwf	___fladd@signs,c
  8284  001B76  5004               	movf	___fladd@b+3,w,c
  8285  001B78  2404               	addwf	___fladd@b+3,w,c
  8286  001B7A  6E0F               	movwf	___fladd@bexp,c
  8287  001B7C  BE03               	btfsc	___fladd@b+2,7,c
  8288  001B7E  800F               	bsf	___fladd@bexp,0,c
  8289  001B80  500F               	movf	___fladd@bexp,w,c
  8290  001B82  B4D8               	btfsc	status,2,c
  8291  001B84  D00E               	goto	l4158
  8292  001B86  280F               	incf	___fladd@bexp,w,c
  8293  001B88  A4D8               	btfss	status,2,c
  8294  001B8A  D008               	goto	l4154
  8295  001B8C  0E00               	movlw	0
  8296  001B8E  6E01               	movwf	___fladd@b,c
  8297  001B90  0E00               	movlw	0
  8298  001B92  6E02               	movwf	___fladd@b+1,c
  8299  001B94  0E00               	movlw	0
  8300  001B96  6E03               	movwf	___fladd@b+2,c
  8301  001B98  0E00               	movlw	0
  8302  001B9A  6E04               	movwf	___fladd@b+3,c
  8303  001B9C                     l4154:
  8304  001B9C  FFFF               	dw	65535	; assembler added errata NOP
  8305  001B9E  8E03               	bsf	___fladd@b+2,7,c
  8306  001BA0  D007               	goto	L21
  8307  001BA2                     l4158:
  8308  001BA2  FFFF               	dw	65535	; assembler added errata NOP
  8309  001BA4  0E00               	movlw	0
  8310  001BA6  6E01               	movwf	___fladd@b,c
  8311  001BA8  0E00               	movlw	0
  8312  001BAA  6E02               	movwf	___fladd@b+1,c
  8313  001BAC  0E00               	movlw	0
  8314  001BAE  6E03               	movwf	___fladd@b+2,c
  8315  001BB0                     L21:
  8316  001BB0  FFFF               	dw	65535	; assembler added errata NOP
  8317  001BB2  0E00               	movlw	0
  8318  001BB4  6E04               	movwf	___fladd@b+3,c
  8319  001BB6  5008               	movf	___fladd@a+3,w,c
  8320  001BB8  0B80               	andlw	128
  8321  001BBA  6E0E               	movwf	___fladd@aexp,c
  8322  001BBC  500D               	movf	___fladd@signs,w,c
  8323  001BBE  180E               	xorwf	___fladd@aexp,w,c
  8324  001BC0  A4D8               	btfss	status,2,c
  8325  001BC2  8C0D               	bsf	___fladd@signs,6,c
  8326  001BC4  5008               	movf	___fladd@a+3,w,c
  8327  001BC6  2408               	addwf	___fladd@a+3,w,c
  8328  001BC8  6E0E               	movwf	___fladd@aexp,c
  8329  001BCA  BE07               	btfsc	___fladd@a+2,7,c
  8330  001BCC  800E               	bsf	___fladd@aexp,0,c
  8331  001BCE  500E               	movf	___fladd@aexp,w,c
  8332  001BD0  B4D8               	btfsc	status,2,c
  8333  001BD2  D00E               	goto	l4182
  8334  001BD4  280E               	incf	___fladd@aexp,w,c
  8335  001BD6  A4D8               	btfss	status,2,c
  8336  001BD8  D008               	goto	l4178
  8337  001BDA  0E00               	movlw	0
  8338  001BDC  6E05               	movwf	___fladd@a,c
  8339  001BDE  0E00               	movlw	0
  8340  001BE0  6E06               	movwf	___fladd@a+1,c
  8341  001BE2  0E00               	movlw	0
  8342  001BE4  6E07               	movwf	___fladd@a+2,c
  8343  001BE6  0E00               	movlw	0
  8344  001BE8  6E08               	movwf	___fladd@a+3,c
  8345  001BEA                     l4178:
  8346  001BEA  FFFF               	dw	65535	; assembler added errata NOP
  8347  001BEC  8E07               	bsf	___fladd@a+2,7,c
  8348  001BEE  D007               	goto	L22
  8349  001BF0                     l4182:
  8350  001BF0  FFFF               	dw	65535	; assembler added errata NOP
  8351  001BF2  0E00               	movlw	0
  8352  001BF4  6E05               	movwf	___fladd@a,c
  8353  001BF6  0E00               	movlw	0
  8354  001BF8  6E06               	movwf	___fladd@a+1,c
  8355  001BFA  0E00               	movlw	0
  8356  001BFC  6E07               	movwf	___fladd@a+2,c
  8357  001BFE                     L22:
  8358  001BFE  FFFF               	dw	65535	; assembler added errata NOP
  8359  001C00  0E00               	movlw	0
  8360  001C02  6E08               	movwf	___fladd@a+3,c
  8361  001C04  500F               	movf	___fladd@bexp,w,c
  8362  001C06  5C0E               	subwf	___fladd@aexp,w,c
  8363  001C08  B0D8               	btfsc	status,0,c
  8364  001C0A  D023               	goto	l4220
  8365  001C0C  AC0D               	btfss	___fladd@signs,6,c
  8366  001C0E  D002               	goto	l4190
  8367  001C10  0E80               	movlw	128
  8368  001C12  1A0D               	xorwf	___fladd@signs,f,c
  8369  001C14                     l4190:
  8370  001C14  FFFF               	dw	65535	; assembler added errata NOP
  8371  001C16  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  8372  001C1A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8373  001C1E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  8374  001C22  C001  F010         	movff	___fladd@b,___fladd@grs
  8375  001C26  C005  F001         	movff	___fladd@a,___fladd@b
  8376  001C2A  C010  F005         	movff	___fladd@grs,___fladd@a
  8377  001C2E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  8378  001C32  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  8379  001C36  C010  F006         	movff	___fladd@grs,___fladd@a+1
  8380  001C3A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  8381  001C3E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  8382  001C42  C010  F007         	movff	___fladd@grs,___fladd@a+2
  8383  001C46  C004  F010         	movff	___fladd@b+3,___fladd@grs
  8384  001C4A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  8385  001C4E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  8386  001C52                     l4220:
  8387  001C52  FFFF               	dw	65535	; assembler added errata NOP
  8388  001C54  0E00               	movlw	0
  8389  001C56  6E10               	movwf	___fladd@grs,c
  8390  001C58  500F               	movf	___fladd@bexp,w,c
  8391  001C5A  C00E  F009         	movff	___fladd@aexp,??___fladd
  8392  001C5E  6A0A               	clrf	(??___fladd+1)& (0+255),c
  8393  001C60  5E09               	subwf	??___fladd,f,c
  8394  001C62  0E00               	movlw	0
  8395  001C64  5A0A               	subwfb	??___fladd+1,f,c
  8396  001C66  BE0A               	btfsc	??___fladd+1,7,c
  8397  001C68  D031               	goto	l1089
  8398  001C6A  500A               	movf	??___fladd+1,w,c
  8399  001C6C  E104               	bnz	u4430
  8400  001C6E  0E1A               	movlw	26
  8401  001C70  5C09               	subwf	??___fladd,w,c
  8402  001C72  A0D8               	btfss	status,0,c
  8403  001C74  D02B               	goto	l1089
  8404  001C76                     u4430:
  8405  001C76  5001               	movf	___fladd@b,w,c
  8406  001C78  1002               	iorwf	___fladd@b+1,w,c
  8407  001C7A  1003               	iorwf	___fladd@b+2,w,c
  8408  001C7C  1004               	iorwf	___fladd@b+3,w,c
  8409  001C7E  B4D8               	btfsc	status,2,c
  8410  001C80  D002               	goto	u4440
  8411  001C82  0E01               	movlw	1
  8412  001C84  D002               	goto	u4450
  8413  001C86                     u4440:
  8414  001C86  FFFF               	dw	65535	; assembler added errata NOP
  8415  001C88  0E00               	movlw	0
  8416  001C8A                     u4450:
  8417  001C8A  FFFF               	dw	65535	; assembler added errata NOP
  8418  001C8C  6E10               	movwf	___fladd@grs,c
  8419  001C8E  0E00               	movlw	0
  8420  001C90  6E01               	movwf	___fladd@b,c
  8421  001C92  0E00               	movlw	0
  8422  001C94  6E02               	movwf	___fladd@b+1,c
  8423  001C96  0E00               	movlw	0
  8424  001C98  6E03               	movwf	___fladd@b+2,c
  8425  001C9A  0E00               	movlw	0
  8426  001C9C  6E04               	movwf	___fladd@b+3,c
  8427  001C9E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8428  001CA2  D019               	goto	u4480
  8429  001CA4                     l1090:
  8430  001CA4  FFFF               	dw	65535	; assembler added errata NOP
  8431  001CA6  A010               	btfss	___fladd@grs,0,c
  8432  001CA8  D005               	goto	l4232
  8433  001CAA  90D8               	bcf	status,0,c
  8434  001CAC  3010               	rrcf	___fladd@grs,w,c
  8435  001CAE  0901               	iorlw	1
  8436  001CB0  6E10               	movwf	___fladd@grs,c
  8437  001CB2  D003               	goto	l4234
  8438  001CB4                     l4232:
  8439  001CB4  FFFF               	dw	65535	; assembler added errata NOP
  8440  001CB6  90D8               	bcf	status,0,c
  8441  001CB8  3210               	rrcf	___fladd@grs,f,c
  8442  001CBA                     l4234:
  8443  001CBA  FFFF               	dw	65535	; assembler added errata NOP
  8444  001CBC  B001               	btfsc	___fladd@b,0,c
  8445  001CBE  8E10               	bsf	___fladd@grs,7,c
  8446  001CC0  3404               	rlcf	___fladd@b+3,w,c
  8447  001CC2  3204               	rrcf	___fladd@b+3,f,c
  8448  001CC4  3203               	rrcf	___fladd@b+2,f,c
  8449  001CC6  3202               	rrcf	___fladd@b+1,f,c
  8450  001CC8  3201               	rrcf	___fladd@b,f,c
  8451  001CCA  2A0F               	incf	___fladd@bexp,f,c
  8452  001CCC                     l1089:
  8453  001CCC  FFFF               	dw	65535	; assembler added errata NOP
  8454  001CCE  500E               	movf	___fladd@aexp,w,c
  8455  001CD0  5C0F               	subwf	___fladd@bexp,w,c
  8456  001CD2  A0D8               	btfss	status,0,c
  8457  001CD4  D7E7               	goto	l1090
  8458  001CD6                     u4480:
  8459  001CD6  FFFF               	dw	65535	; assembler added errata NOP
  8460  001CD8  BC0D               	btfsc	___fladd@signs,6,c
  8461  001CDA  D021               	goto	l4266
  8462  001CDC  500F               	movf	___fladd@bexp,w,c
  8463  001CDE  B4D8               	btfsc	status,2,c
  8464  001CE0  D065               	goto	u4570
  8465  001CE2  5005               	movf	___fladd@a,w,c
  8466  001CE4  2601               	addwf	___fladd@b,f,c
  8467  001CE6  5006               	movf	___fladd@a+1,w,c
  8468  001CE8  2202               	addwfc	___fladd@b+1,f,c
  8469  001CEA  5007               	movf	___fladd@a+2,w,c
  8470  001CEC  2203               	addwfc	___fladd@b+2,f,c
  8471  001CEE  5008               	movf	___fladd@a+3,w,c
  8472  001CF0  2204               	addwfc	___fladd@b+3,f,c
  8473  001CF2  A004               	btfss	___fladd@b+3,0,c
  8474  001CF4  D07B               	goto	u4610
  8475  001CF6  A010               	btfss	___fladd@grs,0,c
  8476  001CF8  D005               	goto	l4256
  8477  001CFA  90D8               	bcf	status,0,c
  8478  001CFC  3010               	rrcf	___fladd@grs,w,c
  8479  001CFE  0901               	iorlw	1
  8480  001D00  6E10               	movwf	___fladd@grs,c
  8481  001D02  D003               	goto	l4258
  8482  001D04                     l4256:
  8483  001D04  FFFF               	dw	65535	; assembler added errata NOP
  8484  001D06  90D8               	bcf	status,0,c
  8485  001D08  3210               	rrcf	___fladd@grs,f,c
  8486  001D0A                     l4258:
  8487  001D0A  FFFF               	dw	65535	; assembler added errata NOP
  8488  001D0C  B001               	btfsc	___fladd@b,0,c
  8489  001D0E  8E10               	bsf	___fladd@grs,7,c
  8490  001D10  3404               	rlcf	___fladd@b+3,w,c
  8491  001D12  3204               	rrcf	___fladd@b+3,f,c
  8492  001D14  3203               	rrcf	___fladd@b+2,f,c
  8493  001D16  3202               	rrcf	___fladd@b+1,f,c
  8494  001D18  3201               	rrcf	___fladd@b,f,c
  8495  001D1A  2A0F               	incf	___fladd@bexp,f,c
  8496  001D1C  D067               	goto	u4610
  8497  001D1E                     l4266:
  8498  001D1E  FFFF               	dw	65535	; assembler added errata NOP
  8499  001D20  5005               	movf	___fladd@a,w,c
  8500  001D22  5C01               	subwf	___fladd@b,w,c
  8501  001D24  5006               	movf	___fladd@a+1,w,c
  8502  001D26  5802               	subwfb	___fladd@b+1,w,c
  8503  001D28  5007               	movf	___fladd@a+2,w,c
  8504  001D2A  5803               	subwfb	___fladd@b+2,w,c
  8505  001D2C  5004               	movf	___fladd@b+3,w,c
  8506  001D2E  0A80               	xorlw	128
  8507  001D30  6E09               	movwf	??___fladd& (0+255),c
  8508  001D32  5008               	movf	___fladd@a+3,w,c
  8509  001D34  0A80               	xorlw	128
  8510  001D36  5809               	subwfb	??___fladd& (0+255),w,c
  8511  001D38  B0D8               	btfsc	status,0,c
  8512  001D3A  D025               	goto	l4276
  8513  001D3C  5001               	movf	___fladd@b,w,c
  8514  001D3E  5C05               	subwf	___fladd@a,w,c
  8515  001D40  6E09               	movwf	??___fladd& (0+255),c
  8516  001D42  5002               	movf	___fladd@b+1,w,c
  8517  001D44  5806               	subwfb	___fladd@a+1,w,c
  8518  001D46  6E0A               	movwf	(??___fladd+1)& (0+255),c
  8519  001D48  5003               	movf	___fladd@b+2,w,c
  8520  001D4A  5807               	subwfb	___fladd@a+2,w,c
  8521  001D4C  6E0B               	movwf	(??___fladd+2)& (0+255),c
  8522  001D4E  5004               	movf	___fladd@b+3,w,c
  8523  001D50  5808               	subwfb	___fladd@a+3,w,c
  8524  001D52  6E0C               	movwf	(??___fladd+3)& (0+255),c
  8525  001D54  0EFF               	movlw	255
  8526  001D56  2409               	addwf	??___fladd,w,c
  8527  001D58  6E01               	movwf	___fladd@b,c
  8528  001D5A  0EFF               	movlw	255
  8529  001D5C  200A               	addwfc	??___fladd+1,w,c
  8530  001D5E  6E02               	movwf	___fladd@b+1,c
  8531  001D60  0EFF               	movlw	255
  8532  001D62  200B               	addwfc	??___fladd+2,w,c
  8533  001D64  6E03               	movwf	___fladd@b+2,c
  8534  001D66  0EFF               	movlw	255
  8535  001D68  200C               	addwfc	??___fladd+3,w,c
  8536  001D6A  6E04               	movwf	___fladd@b+3,c
  8537  001D6C  0E80               	movlw	128
  8538  001D6E  1A0D               	xorwf	___fladd@signs,f,c
  8539  001D70  6C10               	negf	___fladd@grs,c
  8540  001D72  5010               	movf	___fladd@grs,w,c
  8541  001D74  A4D8               	btfss	status,2,c
  8542  001D76  D010               	goto	l1105
  8543  001D78  0E01               	movlw	1
  8544  001D7A  2601               	addwf	___fladd@b,f,c
  8545  001D7C  0E00               	movlw	0
  8546  001D7E  2202               	addwfc	___fladd@b+1,f,c
  8547  001D80  2203               	addwfc	___fladd@b+2,f,c
  8548  001D82  2204               	addwfc	___fladd@b+3,f,c
  8549  001D84  D009               	goto	l1105
  8550  001D86                     l4276:
  8551  001D86  FFFF               	dw	65535	; assembler added errata NOP
  8552  001D88  5005               	movf	___fladd@a,w,c
  8553  001D8A  5E01               	subwf	___fladd@b,f,c
  8554  001D8C  5006               	movf	___fladd@a+1,w,c
  8555  001D8E  5A02               	subwfb	___fladd@b+1,f,c
  8556  001D90  5007               	movf	___fladd@a+2,w,c
  8557  001D92  5A03               	subwfb	___fladd@b+2,f,c
  8558  001D94  5008               	movf	___fladd@a+3,w,c
  8559  001D96  5A04               	subwfb	___fladd@b+3,f,c
  8560  001D98                     l1105:
  8561  001D98  FFFF               	dw	65535	; assembler added errata NOP
  8562  001D9A  5001               	movf	___fladd@b,w,c
  8563  001D9C  1002               	iorwf	___fladd@b+1,w,c
  8564  001D9E  1003               	iorwf	___fladd@b+2,w,c
  8565  001DA0  1004               	iorwf	___fladd@b+3,w,c
  8566  001DA2  A4D8               	btfss	status,2,c
  8567  001DA4  D020               	goto	l4300
  8568  001DA6  5010               	movf	___fladd@grs,w,c
  8569  001DA8  A4D8               	btfss	status,2,c
  8570  001DAA  D01D               	goto	l4300
  8571  001DAC                     u4570:
  8572  001DAC  FFFF               	dw	65535	; assembler added errata NOP
  8573  001DAE  0E00               	movlw	0
  8574  001DB0  6E01               	movwf	?___fladd,c
  8575  001DB2  0E00               	movlw	0
  8576  001DB4  6E02               	movwf	?___fladd+1,c
  8577  001DB6  0E00               	movlw	0
  8578  001DB8  6E03               	movwf	?___fladd+2,c
  8579  001DBA  0E00               	movlw	0
  8580  001DBC  6E04               	movwf	?___fladd+3,c
  8581  001DBE  D076               	goto	l1097
  8582  001DC0                     l4284:
  8583  001DC0  FFFF               	dw	65535	; assembler added errata NOP
  8584  001DC2  90D8               	bcf	status,0,c
  8585  001DC4  3601               	rlcf	___fladd@b,f,c
  8586  001DC6  3602               	rlcf	___fladd@b+1,f,c
  8587  001DC8  3603               	rlcf	___fladd@b+2,f,c
  8588  001DCA  3604               	rlcf	___fladd@b+3,f,c
  8589  001DCC  BE10               	btfsc	___fladd@grs,7,c
  8590  001DCE  8001               	bsf	___fladd@b,0,c
  8591  001DD0  A010               	btfss	___fladd@grs,0,c
  8592  001DD2  D002               	goto	l4294
  8593  001DD4  80D8               	bsf	status,0,c
  8594  001DD6  D002               	goto	L23
  8595  001DD8                     l4294:
  8596  001DD8  FFFF               	dw	65535	; assembler added errata NOP
  8597  001DDA  90D8               	bcf	status,0,c
  8598  001DDC                     L23:
  8599  001DDC  FFFF               	dw	65535	; assembler added errata NOP
  8600  001DDE  3610               	rlcf	___fladd@grs,f,c
  8601  001DE0  500F               	movf	___fladd@bexp,w,c
  8602  001DE2  A4D8               	btfss	status,2,c
  8603  001DE4  060F               	decf	___fladd@bexp,f,c
  8604  001DE6                     l4300:
  8605  001DE6  FFFF               	dw	65535	; assembler added errata NOP
  8606  001DE8  AE03               	btfss	___fladd@b+2,7,c
  8607  001DEA  D7EA               	goto	l4284
  8608  001DEC                     u4610:
  8609  001DEC  FFFF               	dw	65535	; assembler added errata NOP
  8610  001DEE  0E00               	movlw	0
  8611  001DF0  6E0E               	movwf	___fladd@aexp,c
  8612  001DF2  AE10               	btfss	___fladd@grs,7,c
  8613  001DF4  D00D               	goto	l1114
  8614  001DF6  C010  F009         	movff	___fladd@grs,??___fladd
  8615  001DFA  0E7F               	movlw	127
  8616  001DFC  1609               	andwf	??___fladd,f,c
  8617  001DFE  B4D8               	btfsc	status,2,c
  8618  001E00  D004               	goto	l1115
  8619  001E02                     u4630:
  8620  001E02  FFFF               	dw	65535	; assembler added errata NOP
  8621  001E04  0E01               	movlw	1
  8622  001E06  6E0E               	movwf	___fladd@aexp,c
  8623  001E08  D003               	goto	l1114
  8624  001E0A                     l1115:
  8625  001E0A  FFFF               	dw	65535	; assembler added errata NOP
  8626  001E0C  B001               	btfsc	___fladd@b,0,c
  8627  001E0E  D7F9               	goto	u4630
  8628  001E10                     l1114:
  8629  001E10  FFFF               	dw	65535	; assembler added errata NOP
  8630  001E12  500E               	movf	___fladd@aexp,w,c
  8631  001E14  B4D8               	btfsc	status,2,c
  8632  001E16  D020               	goto	l4320
  8633  001E18  0E01               	movlw	1
  8634  001E1A  2601               	addwf	___fladd@b,f,c
  8635  001E1C  0E00               	movlw	0
  8636  001E1E  2202               	addwfc	___fladd@b+1,f,c
  8637  001E20  2203               	addwfc	___fladd@b+2,f,c
  8638  001E22  2204               	addwfc	___fladd@b+3,f,c
  8639  001E24  A004               	btfss	___fladd@b+3,0,c
  8640  001E26  D018               	goto	l4320
  8641  001E28  C001  F009         	movff	___fladd@b,??___fladd
  8642  001E2C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  8643  001E30  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  8644  001E34  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  8645  001E38  340C               	rlcf	??___fladd+3,w,c
  8646  001E3A  320C               	rrcf	??___fladd+3,f,c
  8647  001E3C  320B               	rrcf	??___fladd+2,f,c
  8648  001E3E  320A               	rrcf	??___fladd+1,f,c
  8649  001E40  3209               	rrcf	??___fladd,f,c
  8650  001E42  C009  F001         	movff	??___fladd,___fladd@b
  8651  001E46  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  8652  001E4A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  8653  001E4E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  8654  001E52  280F               	incf	___fladd@bexp,w,c
  8655  001E54  A4D8               	btfss	status,2,c
  8656  001E56  2A0F               	incf	___fladd@bexp,f,c
  8657  001E58                     l4320:
  8658  001E58  FFFF               	dw	65535	; assembler added errata NOP
  8659  001E5A  280F               	incf	___fladd@bexp,w,c
  8660  001E5C  B4D8               	btfsc	status,2,c
  8661  001E5E  D003               	goto	u4690
  8662  001E60  500F               	movf	___fladd@bexp,w,c
  8663  001E62  A4D8               	btfss	status,2,c
  8664  001E64  D00E               	goto	l4328
  8665  001E66                     u4690:
  8666  001E66  FFFF               	dw	65535	; assembler added errata NOP
  8667  001E68  0E00               	movlw	0
  8668  001E6A  6E01               	movwf	___fladd@b,c
  8669  001E6C  0E00               	movlw	0
  8670  001E6E  6E02               	movwf	___fladd@b+1,c
  8671  001E70  0E00               	movlw	0
  8672  001E72  6E03               	movwf	___fladd@b+2,c
  8673  001E74  0E00               	movlw	0
  8674  001E76  6E04               	movwf	___fladd@b+3,c
  8675  001E78  500F               	movf	___fladd@bexp,w,c
  8676  001E7A  A4D8               	btfss	status,2,c
  8677  001E7C  D002               	goto	l4328
  8678  001E7E  0E00               	movlw	0
  8679  001E80  6E0D               	movwf	___fladd@signs,c
  8680  001E82                     l4328:
  8681  001E82  FFFF               	dw	65535	; assembler added errata NOP
  8682  001E84  A00F               	btfss	___fladd@bexp,0,c
  8683  001E86  D002               	goto	l4332
  8684  001E88  8E03               	bsf	___fladd@b+2,7,c
  8685  001E8A  D002               	goto	l4334
  8686  001E8C                     l4332:
  8687  001E8C  FFFF               	dw	65535	; assembler added errata NOP
  8688  001E8E  9E03               	bcf	___fladd@b+2,7,c
  8689  001E90                     l4334:
  8690  001E90  FFFF               	dw	65535	; assembler added errata NOP
  8691  001E92  90D8               	bcf	status,0,c
  8692  001E94  300F               	rrcf	___fladd@bexp,w,c
  8693  001E96  6E04               	movwf	___fladd@b+3,c
  8694  001E98  BE0D               	btfsc	___fladd@signs,7,c
  8695  001E9A  8E04               	bsf	___fladd@b+3,7,c
  8696  001E9C  C001  F001         	movff	___fladd@b,?___fladd
  8697  001EA0  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8698  001EA4  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8699  001EA8  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8700  001EAC                     l1097:
  8701  001EAC  FFFF               	dw	65535	; assembler added errata NOP
  8702  001EAE  0012               	return		;funcret
  8703  001EB0  FFFF               	dw	65535	; errata NOP
  8704  001EB2                     __end_of___fladd:
  8705                           	opt callstack 0
  8706                           
  8707 ;; *************** function ___flmul *****************
  8708 ;; Defined at:
  8709 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;  b               4   14[COMRAM] unsigned char 
  8712 ;;  a               4   18[COMRAM] unsigned char 
  8713 ;; Auto vars:     Size  Location     Type
  8714 ;;  prod            4   33[COMRAM] struct .
  8715 ;;  grs             4   27[COMRAM] unsigned long 
  8716 ;;  temp            2   37[COMRAM] struct .
  8717 ;;  bexp            1   32[COMRAM] unsigned char 
  8718 ;;  aexp            1   31[COMRAM] unsigned char 
  8719 ;;  sign            1   26[COMRAM] unsigned char 
  8720 ;; Return value:  Size  Location     Type
  8721 ;;                  4   14[COMRAM] unsigned char 
  8722 ;; Registers used:
  8723 ;;		wreg, status,2, status,0, prodl, prodh
  8724 ;; Tracked objects:
  8725 ;;		On entry : 0/0
  8726 ;;		On exit  : 0/0
  8727 ;;		Unchanged: 0/0
  8728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8729 ;;      Params:         8       0       0       0       0       0       0
  8730 ;;      Locals:        13       0       0       0       0       0       0
  8731 ;;      Temps:          4       0       0       0       0       0       0
  8732 ;;      Totals:        25       0       0       0       0       0       0
  8733 ;;Total ram usage:       25 bytes
  8734 ;; Hardware stack levels used:    1
  8735 ;; Hardware stack levels required when called:    2
  8736 ;; This function calls:
  8737 ;;		Nothing
  8738 ;; This function is called by:
  8739 ;;		_get_temp
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           	psect	text41
  8744  0017EC                     __ptext41:
  8745                           	opt callstack 0
  8746  0017EC                     ___flmul:
  8747                           	opt callstack 0
  8748  0017EC  FFFF               	dw	65535	; assembler added errata NOP
  8749                           
  8750                           ;incstack = 0
  8751  0017EE  5012               	movf	___flmul@b+3,w,c
  8752  0017F0  0B80               	andlw	128
  8753  0017F2  6E1B               	movwf	___flmul@sign,c
  8754  0017F4  5012               	movf	___flmul@b+3,w,c
  8755  0017F6  2412               	addwf	___flmul@b+3,w,c
  8756  0017F8  6E21               	movwf	___flmul@bexp,c
  8757  0017FA  BE11               	btfsc	___flmul@b+2,7,c
  8758  0017FC  8021               	bsf	___flmul@bexp,0,c
  8759  0017FE  5021               	movf	___flmul@bexp,w,c
  8760  001800  B4D8               	btfsc	status,2,c
  8761  001802  D00E               	goto	l4434
  8762  001804  2821               	incf	___flmul@bexp,w,c
  8763  001806  A4D8               	btfss	status,2,c
  8764  001808  D008               	goto	l4432
  8765  00180A  0E00               	movlw	0
  8766  00180C  6E0F               	movwf	___flmul@b,c
  8767  00180E  0E00               	movlw	0
  8768  001810  6E10               	movwf	___flmul@b+1,c
  8769  001812  0E00               	movlw	0
  8770  001814  6E11               	movwf	___flmul@b+2,c
  8771  001816  0E00               	movlw	0
  8772  001818  6E12               	movwf	___flmul@b+3,c
  8773  00181A                     l4432:
  8774  00181A  FFFF               	dw	65535	; assembler added errata NOP
  8775  00181C  8E11               	bsf	___flmul@b+2,7,c
  8776  00181E  D009               	goto	l4436
  8777  001820                     l4434:
  8778  001820  FFFF               	dw	65535	; assembler added errata NOP
  8779  001822  0E00               	movlw	0
  8780  001824  6E0F               	movwf	___flmul@b,c
  8781  001826  0E00               	movlw	0
  8782  001828  6E10               	movwf	___flmul@b+1,c
  8783  00182A  0E00               	movlw	0
  8784  00182C  6E11               	movwf	___flmul@b+2,c
  8785  00182E  0E00               	movlw	0
  8786  001830  6E12               	movwf	___flmul@b+3,c
  8787  001832                     l4436:
  8788  001832  FFFF               	dw	65535	; assembler added errata NOP
  8789  001834  5016               	movf	___flmul@a+3,w,c
  8790  001836  0B80               	andlw	128
  8791  001838  1A1B               	xorwf	___flmul@sign,f,c
  8792  00183A  5016               	movf	___flmul@a+3,w,c
  8793  00183C  2416               	addwf	___flmul@a+3,w,c
  8794  00183E  6E20               	movwf	___flmul@aexp,c
  8795  001840  BE15               	btfsc	___flmul@a+2,7,c
  8796  001842  8020               	bsf	___flmul@aexp,0,c
  8797  001844  5020               	movf	___flmul@aexp,w,c
  8798  001846  B4D8               	btfsc	status,2,c
  8799  001848  D00E               	goto	l4452
  8800  00184A  2820               	incf	___flmul@aexp,w,c
  8801  00184C  A4D8               	btfss	status,2,c
  8802  00184E  D008               	goto	l4450
  8803  001850  0E00               	movlw	0
  8804  001852  6E13               	movwf	___flmul@a,c
  8805  001854  0E00               	movlw	0
  8806  001856  6E14               	movwf	___flmul@a+1,c
  8807  001858  0E00               	movlw	0
  8808  00185A  6E15               	movwf	___flmul@a+2,c
  8809  00185C  0E00               	movlw	0
  8810  00185E  6E16               	movwf	___flmul@a+3,c
  8811  001860                     l4450:
  8812  001860  FFFF               	dw	65535	; assembler added errata NOP
  8813  001862  8E15               	bsf	___flmul@a+2,7,c
  8814  001864  D009               	goto	l1174
  8815  001866                     l4452:
  8816  001866  FFFF               	dw	65535	; assembler added errata NOP
  8817  001868  0E00               	movlw	0
  8818  00186A  6E13               	movwf	___flmul@a,c
  8819  00186C  0E00               	movlw	0
  8820  00186E  6E14               	movwf	___flmul@a+1,c
  8821  001870  0E00               	movlw	0
  8822  001872  6E15               	movwf	___flmul@a+2,c
  8823  001874  0E00               	movlw	0
  8824  001876  6E16               	movwf	___flmul@a+3,c
  8825  001878                     l1174:
  8826  001878  FFFF               	dw	65535	; assembler added errata NOP
  8827  00187A  5020               	movf	___flmul@aexp,w,c
  8828  00187C  B4D8               	btfsc	status,2,c
  8829  00187E  D003               	goto	u4890
  8830  001880  5021               	movf	___flmul@bexp,w,c
  8831  001882  A4D8               	btfss	status,2,c
  8832  001884  D00A               	goto	l4460
  8833  001886                     u4890:
  8834  001886  FFFF               	dw	65535	; assembler added errata NOP
  8835  001888  0E00               	movlw	0
  8836  00188A  6E0F               	movwf	?___flmul,c
  8837  00188C  0E00               	movlw	0
  8838  00188E  6E10               	movwf	?___flmul+1,c
  8839  001890  0E00               	movlw	0
  8840  001892  6E11               	movwf	?___flmul+2,c
  8841  001894  0E00               	movlw	0
  8842  001896  6E12               	movwf	?___flmul+3,c
  8843  001898  D167               	goto	l1178
  8844  00189A                     l4460:
  8845  00189A  FFFF               	dw	65535	; assembler added errata NOP
  8846  00189C  5015               	movf	___flmul@a+2,w,c
  8847  00189E  020F               	mulwf	___flmul@b,c
  8848  0018A0  CFF3 F026          	movff	prodl,___flmul@temp
  8849  0018A4  CFF4 F027          	movff	prodh,___flmul@temp+1
  8850  0018A8  5026               	movf	___flmul@temp,w,c
  8851  0018AA  6E1C               	movwf	___flmul@grs,c
  8852  0018AC  6A1D               	clrf	___flmul@grs+1,c
  8853  0018AE  6A1E               	clrf	___flmul@grs+2,c
  8854  0018B0  6A1F               	clrf	___flmul@grs+3,c
  8855  0018B2  5027               	movf	___flmul@temp+1,w,c
  8856  0018B4  6E22               	movwf	___flmul@prod,c
  8857  0018B6  6A23               	clrf	___flmul@prod+1,c
  8858  0018B8  6A24               	clrf	___flmul@prod+2,c
  8859  0018BA  6A25               	clrf	___flmul@prod+3,c
  8860  0018BC  5014               	movf	___flmul@a+1,w,c
  8861  0018BE  0210               	mulwf	___flmul@b+1,c
  8862  0018C0  CFF3 F026          	movff	prodl,___flmul@temp
  8863  0018C4  CFF4 F027          	movff	prodh,___flmul@temp+1
  8864  0018C8  5026               	movf	___flmul@temp,w,c
  8865  0018CA  261C               	addwf	___flmul@grs,f,c
  8866  0018CC  0E00               	movlw	0
  8867  0018CE  221D               	addwfc	___flmul@grs+1,f,c
  8868  0018D0  221E               	addwfc	___flmul@grs+2,f,c
  8869  0018D2  221F               	addwfc	___flmul@grs+3,f,c
  8870  0018D4  5027               	movf	___flmul@temp+1,w,c
  8871  0018D6  2622               	addwf	___flmul@prod,f,c
  8872  0018D8  0E00               	movlw	0
  8873  0018DA  2223               	addwfc	___flmul@prod+1,f,c
  8874  0018DC  2224               	addwfc	___flmul@prod+2,f,c
  8875  0018DE  2225               	addwfc	___flmul@prod+3,f,c
  8876  0018E0  5013               	movf	___flmul@a,w,c
  8877  0018E2  0211               	mulwf	___flmul@b+2,c
  8878  0018E4  CFF3 F026          	movff	prodl,___flmul@temp
  8879  0018E8  CFF4 F027          	movff	prodh,___flmul@temp+1
  8880  0018EC  5026               	movf	___flmul@temp,w,c
  8881  0018EE  261C               	addwf	___flmul@grs,f,c
  8882  0018F0  0E00               	movlw	0
  8883  0018F2  221D               	addwfc	___flmul@grs+1,f,c
  8884  0018F4  221E               	addwfc	___flmul@grs+2,f,c
  8885  0018F6  221F               	addwfc	___flmul@grs+3,f,c
  8886  0018F8  5027               	movf	___flmul@temp+1,w,c
  8887  0018FA  2622               	addwf	___flmul@prod,f,c
  8888  0018FC  0E00               	movlw	0
  8889  0018FE  2223               	addwfc	___flmul@prod+1,f,c
  8890  001900  2224               	addwfc	___flmul@prod+2,f,c
  8891  001902  2225               	addwfc	___flmul@prod+3,f,c
  8892  001904  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8893  001908  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8894  00190C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8895  001910  6A1C               	clrf	___flmul@grs,c
  8896  001912  5013               	movf	___flmul@a,w,c
  8897  001914  0210               	mulwf	___flmul@b+1,c
  8898  001916  CFF3 F026          	movff	prodl,___flmul@temp
  8899  00191A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8900  00191E  5026               	movf	___flmul@temp,w,c
  8901  001920  261C               	addwf	___flmul@grs,f,c
  8902  001922  5027               	movf	___flmul@temp+1,w,c
  8903  001924  221D               	addwfc	___flmul@grs+1,f,c
  8904  001926  0E00               	movlw	0
  8905  001928  221E               	addwfc	___flmul@grs+2,f,c
  8906  00192A  0E00               	movlw	0
  8907  00192C  221F               	addwfc	___flmul@grs+3,f,c
  8908  00192E  5014               	movf	___flmul@a+1,w,c
  8909  001930  020F               	mulwf	___flmul@b,c
  8910  001932  CFF3 F026          	movff	prodl,___flmul@temp
  8911  001936  CFF4 F027          	movff	prodh,___flmul@temp+1
  8912  00193A  5026               	movf	___flmul@temp,w,c
  8913  00193C  261C               	addwf	___flmul@grs,f,c
  8914  00193E  5027               	movf	___flmul@temp+1,w,c
  8915  001940  221D               	addwfc	___flmul@grs+1,f,c
  8916  001942  0E00               	movlw	0
  8917  001944  221E               	addwfc	___flmul@grs+2,f,c
  8918  001946  0E00               	movlw	0
  8919  001948  221F               	addwfc	___flmul@grs+3,f,c
  8920  00194A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8921  00194E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8922  001952  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8923  001956  6A1C               	clrf	___flmul@grs,c
  8924  001958  5013               	movf	___flmul@a,w,c
  8925  00195A  020F               	mulwf	___flmul@b,c
  8926  00195C  CFF3 F026          	movff	prodl,___flmul@temp
  8927  001960  CFF4 F027          	movff	prodh,___flmul@temp+1
  8928  001964  5026               	movf	___flmul@temp,w,c
  8929  001966  261C               	addwf	___flmul@grs,f,c
  8930  001968  5027               	movf	___flmul@temp+1,w,c
  8931  00196A  221D               	addwfc	___flmul@grs+1,f,c
  8932  00196C  0E00               	movlw	0
  8933  00196E  221E               	addwfc	___flmul@grs+2,f,c
  8934  001970  0E00               	movlw	0
  8935  001972  221F               	addwfc	___flmul@grs+3,f,c
  8936  001974  5015               	movf	___flmul@a+2,w,c
  8937  001976  0210               	mulwf	___flmul@b+1,c
  8938  001978  CFF3 F026          	movff	prodl,___flmul@temp
  8939  00197C  CFF4 F027          	movff	prodh,___flmul@temp+1
  8940  001980  5026               	movf	___flmul@temp,w,c
  8941  001982  2622               	addwf	___flmul@prod,f,c
  8942  001984  5027               	movf	___flmul@temp+1,w,c
  8943  001986  2223               	addwfc	___flmul@prod+1,f,c
  8944  001988  0E00               	movlw	0
  8945  00198A  2224               	addwfc	___flmul@prod+2,f,c
  8946  00198C  0E00               	movlw	0
  8947  00198E  2225               	addwfc	___flmul@prod+3,f,c
  8948  001990  5014               	movf	___flmul@a+1,w,c
  8949  001992  0211               	mulwf	___flmul@b+2,c
  8950  001994  CFF3 F026          	movff	prodl,___flmul@temp
  8951  001998  CFF4 F027          	movff	prodh,___flmul@temp+1
  8952  00199C  5026               	movf	___flmul@temp,w,c
  8953  00199E  2622               	addwf	___flmul@prod,f,c
  8954  0019A0  5027               	movf	___flmul@temp+1,w,c
  8955  0019A2  2223               	addwfc	___flmul@prod+1,f,c
  8956  0019A4  0E00               	movlw	0
  8957  0019A6  2224               	addwfc	___flmul@prod+2,f,c
  8958  0019A8  0E00               	movlw	0
  8959  0019AA  2225               	addwfc	___flmul@prod+3,f,c
  8960  0019AC  5015               	movf	___flmul@a+2,w,c
  8961  0019AE  0211               	mulwf	___flmul@b+2,c
  8962  0019B0  CFF3 F026          	movff	prodl,___flmul@temp
  8963  0019B4  CFF4 F027          	movff	prodh,___flmul@temp+1
  8964  0019B8  5026               	movf	___flmul@temp,w,c
  8965  0019BA  6E17               	movwf	??___flmul& (0+255),c
  8966  0019BC  5027               	movf	___flmul@temp+1,w,c
  8967  0019BE  6E18               	movwf	(??___flmul+1)& (0+255),c
  8968  0019C0  6A19               	clrf	(??___flmul+2)& (0+255),c
  8969  0019C2  6A1A               	clrf	(??___flmul+3)& (0+255),c
  8970  0019C4  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8971  0019C8  C018  F019         	movff	??___flmul+1,??___flmul+2
  8972  0019CC  C017  F018         	movff	??___flmul,??___flmul+1
  8973  0019D0  6A17               	clrf	??___flmul,c
  8974  0019D2  5017               	movf	??___flmul,w,c
  8975  0019D4  2622               	addwf	___flmul@prod,f,c
  8976  0019D6  5018               	movf	??___flmul+1,w,c
  8977  0019D8  2223               	addwfc	___flmul@prod+1,f,c
  8978  0019DA  5019               	movf	??___flmul+2,w,c
  8979  0019DC  2224               	addwfc	___flmul@prod+2,f,c
  8980  0019DE  501A               	movf	??___flmul+3,w,c
  8981  0019E0  2225               	addwfc	___flmul@prod+3,f,c
  8982  0019E2  C01C  F017         	movff	___flmul@grs,??___flmul
  8983  0019E6  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  8984  0019EA  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  8985  0019EE  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  8986  0019F2  0E19               	movlw	25
  8987  0019F4  D006               	goto	u4900
  8988  0019F6                     u4905:
  8989  0019F6  FFFF               	dw	65535	; assembler added errata NOP
  8990  0019F8  90D8               	bcf	status,0,c
  8991  0019FA  321A               	rrcf	??___flmul+3,f,c
  8992  0019FC  3219               	rrcf	??___flmul+2,f,c
  8993  0019FE  3218               	rrcf	??___flmul+1,f,c
  8994  001A00  3217               	rrcf	??___flmul,f,c
  8995  001A02                     u4900:
  8996  001A02  FFFF               	dw	65535	; assembler added errata NOP
  8997  001A04  2EE8               	decfsz	wreg,f,c
  8998  001A06  D7F7               	goto	u4905
  8999  001A08  5017               	movf	??___flmul,w,c
  9000  001A0A  2622               	addwf	___flmul@prod,f,c
  9001  001A0C  5018               	movf	??___flmul+1,w,c
  9002  001A0E  2223               	addwfc	___flmul@prod+1,f,c
  9003  001A10  5019               	movf	??___flmul+2,w,c
  9004  001A12  2224               	addwfc	___flmul@prod+2,f,c
  9005  001A14  501A               	movf	??___flmul+3,w,c
  9006  001A16  2225               	addwfc	___flmul@prod+3,f,c
  9007  001A18  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9008  001A1C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9009  001A20  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9010  001A24  6A1C               	clrf	___flmul@grs,c
  9011  001A26  5020               	movf	___flmul@aexp,w,c
  9012  001A28  C021  F017         	movff	___flmul@bexp,??___flmul
  9013  001A2C  6A18               	clrf	(??___flmul+1)& (0+255),c
  9014  001A2E  2617               	addwf	??___flmul,f,c
  9015  001A30  0E00               	movlw	0
  9016  001A32  2218               	addwfc	??___flmul+1,f,c
  9017  001A34  0E82               	movlw	130
  9018  001A36  2417               	addwf	??___flmul,w,c
  9019  001A38  6E26               	movwf	___flmul@temp,c
  9020  001A3A  0EFF               	movlw	255
  9021  001A3C  2018               	addwfc	??___flmul+1,w,c
  9022  001A3E  6E27               	movwf	___flmul@temp+1,c
  9023  001A40  D010               	goto	l4508
  9024  001A42                     l4502:
  9025  001A42  FFFF               	dw	65535	; assembler added errata NOP
  9026  001A44  90D8               	bcf	status,0,c
  9027  001A46  3622               	rlcf	___flmul@prod,f,c
  9028  001A48  3623               	rlcf	___flmul@prod+1,f,c
  9029  001A4A  3624               	rlcf	___flmul@prod+2,f,c
  9030  001A4C  3625               	rlcf	___flmul@prod+3,f,c
  9031  001A4E  BE1F               	btfsc	___flmul@grs+3,7,c
  9032  001A50  8022               	bsf	___flmul@prod,0,c
  9033  001A52  90D8               	bcf	status,0,c
  9034  001A54  361C               	rlcf	___flmul@grs,f,c
  9035  001A56  361D               	rlcf	___flmul@grs+1,f,c
  9036  001A58  361E               	rlcf	___flmul@grs+2,f,c
  9037  001A5A  361F               	rlcf	___flmul@grs+3,f,c
  9038  001A5C  0626               	decf	___flmul@temp,f,c
  9039  001A5E  A0D8               	btfss	status,0,c
  9040  001A60  0627               	decf	___flmul@temp+1,f,c
  9041  001A62                     l4508:
  9042  001A62  FFFF               	dw	65535	; assembler added errata NOP
  9043  001A64  AE24               	btfss	___flmul@prod+2,7,c
  9044  001A66  D7ED               	goto	l4502
  9045  001A68  0E00               	movlw	0
  9046  001A6A  6E20               	movwf	___flmul@aexp,c
  9047  001A6C  AE1F               	btfss	___flmul@grs+3,7,c
  9048  001A6E  D019               	goto	l1183
  9049  001A70  0EFF               	movlw	255
  9050  001A72  141C               	andwf	___flmul@grs,w,c
  9051  001A74  6E17               	movwf	??___flmul& (0+255),c
  9052  001A76  0EFF               	movlw	255
  9053  001A78  141D               	andwf	___flmul@grs+1,w,c
  9054  001A7A  6E18               	movwf	(??___flmul+1)& (0+255),c
  9055  001A7C  0EFF               	movlw	255
  9056  001A7E  141E               	andwf	___flmul@grs+2,w,c
  9057  001A80  6E19               	movwf	(??___flmul+2)& (0+255),c
  9058  001A82  0E7F               	movlw	127
  9059  001A84  141F               	andwf	___flmul@grs+3,w,c
  9060  001A86  6E1A               	movwf	(??___flmul+3)& (0+255),c
  9061  001A88  5017               	movf	??___flmul,w,c
  9062  001A8A  1018               	iorwf	??___flmul+1,w,c
  9063  001A8C  1019               	iorwf	??___flmul+2,w,c
  9064  001A8E  101A               	iorwf	??___flmul+3,w,c
  9065  001A90  B4D8               	btfsc	status,2,c
  9066  001A92  D004               	goto	l1184
  9067  001A94                     u4940:
  9068  001A94  FFFF               	dw	65535	; assembler added errata NOP
  9069  001A96  0E01               	movlw	1
  9070  001A98  6E20               	movwf	___flmul@aexp,c
  9071  001A9A  D003               	goto	l1183
  9072  001A9C                     l1184:
  9073  001A9C  FFFF               	dw	65535	; assembler added errata NOP
  9074  001A9E  B022               	btfsc	___flmul@prod,0,c
  9075  001AA0  D7F9               	goto	u4940
  9076  001AA2                     l1183:
  9077  001AA2  FFFF               	dw	65535	; assembler added errata NOP
  9078  001AA4  5020               	movf	___flmul@aexp,w,c
  9079  001AA6  B4D8               	btfsc	status,2,c
  9080  001AA8  D01F               	goto	l4528
  9081  001AAA  0E01               	movlw	1
  9082  001AAC  2622               	addwf	___flmul@prod,f,c
  9083  001AAE  0E00               	movlw	0
  9084  001AB0  2223               	addwfc	___flmul@prod+1,f,c
  9085  001AB2  2224               	addwfc	___flmul@prod+2,f,c
  9086  001AB4  2225               	addwfc	___flmul@prod+3,f,c
  9087  001AB6  A025               	btfss	___flmul@prod+3,0,c
  9088  001AB8  D017               	goto	l4528
  9089  001ABA  C022  F017         	movff	___flmul@prod,??___flmul
  9090  001ABE  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  9091  001AC2  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  9092  001AC6  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  9093  001ACA  341A               	rlcf	??___flmul+3,w,c
  9094  001ACC  321A               	rrcf	??___flmul+3,f,c
  9095  001ACE  3219               	rrcf	??___flmul+2,f,c
  9096  001AD0  3218               	rrcf	??___flmul+1,f,c
  9097  001AD2  3217               	rrcf	??___flmul,f,c
  9098  001AD4  C017  F022         	movff	??___flmul,___flmul@prod
  9099  001AD8  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  9100  001ADC  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  9101  001AE0  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  9102  001AE4  4A26               	infsnz	___flmul@temp,f,c
  9103  001AE6  2A27               	incf	___flmul@temp+1,f,c
  9104  001AE8                     l4528:
  9105  001AE8  FFFF               	dw	65535	; assembler added errata NOP
  9106  001AEA  BE27               	btfsc	___flmul@temp+1,7,c
  9107  001AEC  D00D               	goto	l4532
  9108  001AEE  5027               	movf	___flmul@temp+1,w,c
  9109  001AF0  E103               	bnz	u4980
  9110  001AF2  2826               	incf	___flmul@temp,w,c
  9111  001AF4  A0D8               	btfss	status,0,c
  9112  001AF6  D008               	goto	l4532
  9113  001AF8                     u4980:
  9114  001AF8  0E00               	movlw	0
  9115  001AFA  6E22               	movwf	___flmul@prod,c
  9116  001AFC  0E00               	movlw	0
  9117  001AFE  6E23               	movwf	___flmul@prod+1,c
  9118  001B00  0E80               	movlw	128
  9119  001B02  6E24               	movwf	___flmul@prod+2,c
  9120  001B04  0E7F               	movlw	127
  9121  001B06  D023               	goto	L24
  9122  001B08                     l4532:
  9123  001B08  FFFF               	dw	65535	; assembler added errata NOP
  9124  001B0A  BE27               	btfsc	___flmul@temp+1,7,c
  9125  001B0C  D005               	goto	u4990
  9126  001B0E  5027               	movf	___flmul@temp+1,w,c
  9127  001B10  E10F               	bnz	l1191
  9128  001B12  0426               	decf	___flmul@temp,w,c
  9129  001B14  B0D8               	btfsc	status,0,c
  9130  001B16  D00C               	goto	l1191
  9131  001B18                     u4990:
  9132  001B18  FFFF               	dw	65535	; assembler added errata NOP
  9133  001B1A  0E00               	movlw	0
  9134  001B1C  6E22               	movwf	___flmul@prod,c
  9135  001B1E  0E00               	movlw	0
  9136  001B20  6E23               	movwf	___flmul@prod+1,c
  9137  001B22  0E00               	movlw	0
  9138  001B24  6E24               	movwf	___flmul@prod+2,c
  9139  001B26  0E00               	movlw	0
  9140  001B28  6E25               	movwf	___flmul@prod+3,c
  9141  001B2A  0E00               	movlw	0
  9142  001B2C  6E1B               	movwf	___flmul@sign,c
  9143  001B2E  D011               	goto	l4544
  9144  001B30                     l1191:
  9145  001B30  FFFF               	dw	65535	; assembler added errata NOP
  9146  001B32  C026  F021         	movff	___flmul@temp,___flmul@bexp
  9147  001B36  0EFF               	movlw	255
  9148  001B38  1622               	andwf	___flmul@prod,f,c
  9149  001B3A  0EFF               	movlw	255
  9150  001B3C  1623               	andwf	___flmul@prod+1,f,c
  9151  001B3E  0E7F               	movlw	127
  9152  001B40  1624               	andwf	___flmul@prod+2,f,c
  9153  001B42  0E00               	movlw	0
  9154  001B44  1625               	andwf	___flmul@prod+3,f,c
  9155  001B46  B021               	btfsc	___flmul@bexp,0,c
  9156  001B48  8E24               	bsf	___flmul@prod+2,7,c
  9157  001B4A  90D8               	bcf	status,0,c
  9158  001B4C  3021               	rrcf	___flmul@bexp,w,c
  9159  001B4E                     L24:
  9160  001B4E  FFFF               	dw	65535	; assembler added errata NOP
  9161  001B50  6E25               	movwf	___flmul@prod+3,c
  9162  001B52                     l4544:
  9163  001B52  FFFF               	dw	65535	; assembler added errata NOP
  9164  001B54  501B               	movf	___flmul@sign,w,c
  9165  001B56  1225               	iorwf	___flmul@prod+3,f,c
  9166  001B58  C022  F00F         	movff	___flmul@prod,?___flmul
  9167  001B5C  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  9168  001B60  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  9169  001B64  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  9170  001B68                     l1178:
  9171  001B68  FFFF               	dw	65535	; assembler added errata NOP
  9172  001B6A  0012               	return		;funcret
  9173  001B6C  FFFF               	dw	65535	; errata NOP
  9174  001B6E                     __end_of___flmul:
  9175                           	opt callstack 0
  9176                           
  9177 ;; *************** function _ADC_Read *****************
  9178 ;; Defined at:
  9179 ;;		line 28 in file "adc.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;  channel         1    wreg     unsigned char 
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;  channel         1    4[COMRAM] unsigned char 
  9184 ;; Return value:  Size  Location     Type
  9185 ;;                  2    0[COMRAM] unsigned int 
  9186 ;; Registers used:
  9187 ;;		wreg, status,2, status,0
  9188 ;; Tracked objects:
  9189 ;;		On entry : 0/0
  9190 ;;		On exit  : 0/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9193 ;;      Params:         2       0       0       0       0       0       0
  9194 ;;      Locals:         1       0       0       0       0       0       0
  9195 ;;      Temps:          2       0       0       0       0       0       0
  9196 ;;      Totals:         5       0       0       0       0       0       0
  9197 ;;Total ram usage:        5 bytes
  9198 ;; Hardware stack levels used:    1
  9199 ;; Hardware stack levels required when called:    2
  9200 ;; This function calls:
  9201 ;;		Nothing
  9202 ;; This function is called by:
  9203 ;;		_get_temp
  9204 ;; This function uses a non-reentrant model
  9205 ;;
  9206                           
  9207                           	psect	text42
  9208  003566                     __ptext42:
  9209                           	opt callstack 0
  9210  003566                     _ADC_Read:
  9211                           	opt callstack 0
  9212  003566  FFFF               	dw	65535	; assembler added errata NOP
  9213                           
  9214                           ;incstack = 0
  9215                           ;ADC_Read@channel stored from wreg
  9216  003568  6E05               	movwf	ADC_Read@channel,c
  9217                           
  9218                           ;adc.c: 29:  if(channel > 7)
  9219  00356A  0E07               	movlw	7
  9220  00356C  6405               	cpfsgt	ADC_Read@channel,c
  9221  00356E  D005               	goto	l4410
  9222                           
  9223                           ;adc.c: 30:  return 0;
  9224  003570  0E00               	movlw	0
  9225  003572  6E02               	movwf	?_ADC_Read+1,c
  9226  003574  0E00               	movlw	0
  9227  003576  6E01               	movwf	?_ADC_Read,c
  9228  003578  D01D               	goto	l284
  9229  00357A                     l4410:
  9230  00357A  FFFF               	dw	65535	; assembler added errata NOP
  9231                           
  9232                           ;adc.c: 31:  ADCON0 &= 0xC5;
  9233  00357C  0EC5               	movlw	197
  9234  00357E  16C2               	andwf	4034,f,c	;volatile
  9235                           
  9236                           ;adc.c: 32:  ADCON0 |= channel<<3;
  9237  003580  3805               	swapf	ADC_Read@channel,w,c	;volatile
  9238  003582  42E8               	rrncf	wreg,f,c
  9239  003584  0BF8               	andlw	248
  9240  003586  12C2               	iorwf	4034,f,c	;volatile
  9241                           
  9242                           ;adc.c: 33:  _delay((unsigned long)((2)*(16000000/4000.0)));
  9243  003588  0E08               	movlw	8
  9244  00358A  6E03               	movwf	??_ADC_Read& (0+255),c
  9245  00358C  0ECB               	movlw	203
  9246  00358E                     u5307:
  9247  00358E  FFFF               	dw	65535	; errata NOP
  9248  003590  2EE8               	decfsz	wreg,f,c
  9249  003592  D7FD               	bra	u5307
  9250  003594  2E03               	decfsz	??_ADC_Read& (0+255),f,c
  9251  003596  D7FB               	bra	u5307
  9252  003598  D000               	nop2	
  9253                           
  9254                           ;adc.c: 34:  GO_nDONE = 1;
  9255  00359A  84C2               	bsf	4034,2,c	;volatile
  9256  00359C                     l285:
  9257  00359C  FFFF               	dw	65535	; assembler added errata NOP
  9258  00359E  B4C2               	btfsc	4034,2,c	;volatile
  9259  0035A0  D7FD               	goto	l285
  9260                           
  9261                           ;adc.c: 36:  return ((ADRESH<<8)+ADRESL);
  9262  0035A2  50C4               	movf	4036,w,c	;volatile
  9263  0035A4  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  9264  0035A6  6A03               	clrf	??_ADC_Read& (0+255),c
  9265  0035A8  50C3               	movf	4035,w,c	;volatile
  9266  0035AA  2403               	addwf	??_ADC_Read,w,c
  9267  0035AC  6E01               	movwf	?_ADC_Read,c
  9268  0035AE  0E00               	movlw	0
  9269  0035B0  2004               	addwfc	??_ADC_Read+1,w,c
  9270  0035B2  6E02               	movwf	?_ADC_Read+1,c
  9271  0035B4                     l284:
  9272  0035B4  FFFF               	dw	65535	; assembler added errata NOP
  9273  0035B6  0012               	return		;funcret
  9274  0035B8  FFFF               	dw	65535	; errata NOP
  9275  0035BA                     __end_of_ADC_Read:
  9276                           	opt callstack 0
  9277                           
  9278 ;; *************** function _ADC_Init *****************
  9279 ;; Defined at:
  9280 ;;		line 23 in file "adc.c"
  9281 ;; Parameters:    Size  Location     Type
  9282 ;;		None
  9283 ;; Auto vars:     Size  Location     Type
  9284 ;;		None
  9285 ;; Return value:  Size  Location     Type
  9286 ;;                  1    wreg      void 
  9287 ;; Registers used:
  9288 ;;		wreg, status,2
  9289 ;; Tracked objects:
  9290 ;;		On entry : 0/0
  9291 ;;		On exit  : 0/0
  9292 ;;		Unchanged: 0/0
  9293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9294 ;;      Params:         0       0       0       0       0       0       0
  9295 ;;      Locals:         0       0       0       0       0       0       0
  9296 ;;      Temps:          0       0       0       0       0       0       0
  9297 ;;      Totals:         0       0       0       0       0       0       0
  9298 ;;Total ram usage:        0 bytes
  9299 ;; Hardware stack levels used:    1
  9300 ;; Hardware stack levels required when called:    2
  9301 ;; This function calls:
  9302 ;;		Nothing
  9303 ;; This function is called by:
  9304 ;;		_get_temp
  9305 ;; This function uses a non-reentrant model
  9306 ;;
  9307                           
  9308                           	psect	text43
  9309  003990                     __ptext43:
  9310                           	opt callstack 0
  9311  003990                     _ADC_Init:
  9312                           	opt callstack 0
  9313  003990  FFFF               	dw	65535	; assembler added errata NOP
  9314                           
  9315                           ;adc.c: 24:  ADCON0 = 0x81;
  9316                           
  9317                           ;incstack = 0
  9318  003992  0E81               	movlw	129
  9319  003994  6EC2               	movwf	4034,c	;volatile
  9320                           
  9321                           ;adc.c: 25:  ADCON1 = 0x80;
  9322  003996  0E80               	movlw	128
  9323  003998  6EC1               	movwf	4033,c	;volatile
  9324  00399A  0012               	return		;funcret
  9325  00399C  FFFF               	dw	65535	; errata NOP
  9326  00399E                     __end_of_ADC_Init:
  9327                           	opt callstack 0
  9328                           
  9329 ;; *************** function ___fltol *****************
  9330 ;; Defined at:
  9331 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  f1              4   61[COMRAM] void 
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;  exp1            1   70[COMRAM] unsigned char 
  9336 ;;  sign1           1   69[COMRAM] unsigned char 
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  4   61[COMRAM] long 
  9339 ;; Registers used:
  9340 ;;		wreg, status,2, status,0
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9346 ;;      Params:         4       0       0       0       0       0       0
  9347 ;;      Locals:         2       0       0       0       0       0       0
  9348 ;;      Temps:          4       0       0       0       0       0       0
  9349 ;;      Totals:        10       0       0       0       0       0       0
  9350 ;;Total ram usage:       10 bytes
  9351 ;; Hardware stack levels used:    1
  9352 ;; Hardware stack levels required when called:    2
  9353 ;; This function calls:
  9354 ;;		Nothing
  9355 ;; This function is called by:
  9356 ;;		_main
  9357 ;; This function uses a non-reentrant model
  9358 ;;
  9359                           
  9360                           	psect	text44
  9361  002E46                     __ptext44:
  9362                           	opt callstack 0
  9363  002E46                     ___fltol:
  9364                           	opt callstack 0
  9365  002E46  FFFF               	dw	65535	; assembler added errata NOP
  9366                           
  9367                           ;incstack = 0
  9368  002E48  3440               	rlcf	___fltol@f1+2,w,c
  9369  002E4A  3441               	rlcf	___fltol@f1+3,w,c
  9370  002E4C  6E47               	movwf	___fltol@exp1,c
  9371  002E4E  5047               	movf	___fltol@exp1,w,c
  9372  002E50  A4D8               	btfss	status,2,c
  9373  002E52  D00A               	goto	l4724
  9374  002E54                     u5120:
  9375  002E54  FFFF               	dw	65535	; assembler added errata NOP
  9376  002E56  0E00               	movlw	0
  9377  002E58  6E3E               	movwf	?___fltol,c
  9378  002E5A  0E00               	movlw	0
  9379  002E5C  6E3F               	movwf	?___fltol+1,c
  9380  002E5E  0E00               	movlw	0
  9381  002E60  6E40               	movwf	?___fltol+2,c
  9382  002E62  0E00               	movlw	0
  9383  002E64  6E41               	movwf	?___fltol+3,c
  9384  002E66  D056               	goto	l857
  9385  002E68                     l4724:
  9386  002E68  FFFF               	dw	65535	; assembler added errata NOP
  9387  002E6A  C03E  F042         	movff	___fltol@f1,??___fltol
  9388  002E6E  C03F  F043         	movff	___fltol@f1+1,??___fltol+1
  9389  002E72  C040  F044         	movff	___fltol@f1+2,??___fltol+2
  9390  002E76  C041  F045         	movff	___fltol@f1+3,??___fltol+3
  9391  002E7A  0E20               	movlw	32
  9392  002E7C  D006               	goto	u5130
  9393  002E7E                     u5135:
  9394  002E7E  FFFF               	dw	65535	; assembler added errata NOP
  9395  002E80  90D8               	bcf	status,0,c
  9396  002E82  3245               	rrcf	??___fltol+3,f,c
  9397  002E84  3244               	rrcf	??___fltol+2,f,c
  9398  002E86  3243               	rrcf	??___fltol+1,f,c
  9399  002E88  3242               	rrcf	??___fltol,f,c
  9400  002E8A                     u5130:
  9401  002E8A  FFFF               	dw	65535	; assembler added errata NOP
  9402  002E8C  2EE8               	decfsz	wreg,f,c
  9403  002E8E  D7F7               	goto	u5135
  9404  002E90  5042               	movf	??___fltol,w,c
  9405  002E92  6E46               	movwf	___fltol@sign1,c
  9406  002E94  8E40               	bsf	___fltol@f1+2,7,c
  9407  002E96  0EFF               	movlw	255
  9408  002E98  163E               	andwf	___fltol@f1,f,c
  9409  002E9A  0EFF               	movlw	255
  9410  002E9C  163F               	andwf	___fltol@f1+1,f,c
  9411  002E9E  0EFF               	movlw	255
  9412  002EA0  1640               	andwf	___fltol@f1+2,f,c
  9413  002EA2  0E00               	movlw	0
  9414  002EA4  1641               	andwf	___fltol@f1+3,f,c
  9415  002EA6  0E96               	movlw	150
  9416  002EA8  5E47               	subwf	___fltol@exp1,f,c
  9417  002EAA  AE47               	btfss	___fltol@exp1,7,c
  9418  002EAC  D00E               	goto	l4744
  9419  002EAE  5047               	movf	___fltol@exp1,w,c
  9420  002EB0  0A80               	xorlw	128
  9421  002EB2  0F97               	addlw	151
  9422  002EB4  A0D8               	btfss	status,0,c
  9423  002EB6  D7CE               	goto	u5120
  9424  002EB8                     l4740:
  9425  002EB8  FFFF               	dw	65535	; assembler added errata NOP
  9426  002EBA  90D8               	bcf	status,0,c
  9427  002EBC  3241               	rrcf	___fltol@f1+3,f,c
  9428  002EBE  3240               	rrcf	___fltol@f1+2,f,c
  9429  002EC0  323F               	rrcf	___fltol@f1+1,f,c
  9430  002EC2  323E               	rrcf	___fltol@f1,f,c
  9431  002EC4  3E47               	incfsz	___fltol@exp1,f,c
  9432  002EC6  D7F8               	goto	l4740
  9433  002EC8  D010               	goto	u5170
  9434  002ECA                     l4744:
  9435  002ECA  FFFF               	dw	65535	; assembler added errata NOP
  9436  002ECC  0E1F               	movlw	31
  9437  002ECE  6447               	cpfsgt	___fltol@exp1,c
  9438  002ED0  D008               	goto	l4752
  9439  002ED2  D7C0               	goto	u5120
  9440  002ED4                     l4750:
  9441  002ED4  FFFF               	dw	65535	; assembler added errata NOP
  9442  002ED6  90D8               	bcf	status,0,c
  9443  002ED8  363E               	rlcf	___fltol@f1,f,c
  9444  002EDA  363F               	rlcf	___fltol@f1+1,f,c
  9445  002EDC  3640               	rlcf	___fltol@f1+2,f,c
  9446  002EDE  3641               	rlcf	___fltol@f1+3,f,c
  9447  002EE0  0647               	decf	___fltol@exp1,f,c
  9448  002EE2                     l4752:
  9449  002EE2  FFFF               	dw	65535	; assembler added errata NOP
  9450  002EE4  5047               	movf	___fltol@exp1,w,c
  9451  002EE6  A4D8               	btfss	status,2,c
  9452  002EE8  D7F5               	goto	l4750
  9453  002EEA                     u5170:
  9454  002EEA  FFFF               	dw	65535	; assembler added errata NOP
  9455  002EEC  5046               	movf	___fltol@sign1,w,c
  9456  002EEE  B4D8               	btfsc	status,2,c
  9457  002EF0  D008               	goto	l4758
  9458  002EF2  1E41               	comf	___fltol@f1+3,f,c
  9459  002EF4  1E40               	comf	___fltol@f1+2,f,c
  9460  002EF6  1E3F               	comf	___fltol@f1+1,f,c
  9461  002EF8  6C3E               	negf	___fltol@f1,c
  9462  002EFA  0E00               	movlw	0
  9463  002EFC  223F               	addwfc	___fltol@f1+1,f,c
  9464  002EFE  2240               	addwfc	___fltol@f1+2,f,c
  9465  002F00  2241               	addwfc	___fltol@f1+3,f,c
  9466  002F02                     l4758:
  9467  002F02  FFFF               	dw	65535	; assembler added errata NOP
  9468  002F04  C03E  F03E         	movff	___fltol@f1,?___fltol
  9469  002F08  C03F  F03F         	movff	___fltol@f1+1,?___fltol+1
  9470  002F0C  C040  F040         	movff	___fltol@f1+2,?___fltol+2
  9471  002F10  C041  F041         	movff	___fltol@f1+3,?___fltol+3
  9472  002F14                     l857:
  9473  002F14  FFFF               	dw	65535	; assembler added errata NOP
  9474  002F16  0012               	return		;funcret
  9475  002F18  FFFF               	dw	65535	; errata NOP
  9476  002F1A                     __end_of___fltol:
  9477                           	opt callstack 0
  9478                           
  9479 ;; *************** function _UARTSendString *****************
  9480 ;; Defined at:
  9481 ;;		line 65 in file "serial.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;  c               2   32[BANK0 ] PTR unsigned char 
  9484 ;;		 -> int_to_char@result(10), 
  9485 ;; Auto vars:     Size  Location     Type
  9486 ;;  i               2   34[BANK0 ] int 
  9487 ;; Return value:  Size  Location     Type
  9488 ;;                  1    wreg      void 
  9489 ;; Registers used:
  9490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9491 ;; Tracked objects:
  9492 ;;		On entry : 0/0
  9493 ;;		On exit  : 0/0
  9494 ;;		Unchanged: 0/0
  9495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9496 ;;      Params:         0       2       0       0       0       0       0
  9497 ;;      Locals:         0       2       0       0       0       0       0
  9498 ;;      Temps:          0       0       0       0       0       0       0
  9499 ;;      Totals:         0       4       0       0       0       0       0
  9500 ;;Total ram usage:        4 bytes
  9501 ;; Hardware stack levels used:    1
  9502 ;; Hardware stack levels required when called:    3
  9503 ;; This function calls:
  9504 ;;		_UARTSendChar
  9505 ;; This function is called by:
  9506 ;;		_main
  9507 ;;		_read_op
  9508 ;; This function uses a non-reentrant model
  9509 ;;
  9510                           
  9511                           	psect	text45
  9512  003690                     __ptext45:
  9513                           	opt callstack 0
  9514  003690                     _UARTSendString:
  9515                           	opt callstack 0
  9516  003690  FFFF               	dw	65535	; assembler added errata NOP
  9517                           
  9518                           ;serial.c: 66:   TRISCbits.TRISC7 = 0;
  9519                           
  9520                           ;incstack = 0
  9521  003692  9E94               	bcf	3988,7,c	;volatile
  9522                           
  9523                           ;serial.c: 67:   int i = 0;
  9524  003694  0E00               	movlw	0
  9525  003696  0100               	movlb	0	; () banked
  9526  003698  6FDE               	movwf	(UARTSendString@i+1)& (0+255),b
  9527  00369A  0E00               	movlw	0
  9528  00369C  6FDD               	movwf	UARTSendString@i& (0+255),b
  9529                           
  9530                           ;serial.c: 68:   while (c[i] != '\0') {
  9531  00369E  D00D               	goto	l4620
  9532  0036A0                     l4616:
  9533  0036A0  FFFF               	dw	65535	; assembler added errata NOP
  9534                           
  9535                           ; BSR set to: 0
  9536                           ;serial.c: 69:     UARTSendChar(c[i]);
  9537  0036A2  51DD               	movf	UARTSendString@i& (0+255),w,b
  9538  0036A4  25DB               	addwf	UARTSendString@c& (0+255),w,b
  9539  0036A6  6ED9               	movwf	fsr2l,c
  9540  0036A8  51DE               	movf	(UARTSendString@i+1)& (0+255),w,b
  9541  0036AA  21DC               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  9542  0036AC  6EDA               	movwf	fsr2h,c
  9543  0036AE  50DF               	movf	indf2,w,c
  9544  0036B0  ECB5  F01C         	call	_UARTSendChar
  9545                           
  9546                           ;serial.c: 70:     i++;
  9547  0036B4  0100               	movlb	0	; () banked
  9548  0036B6  4BDD               	infsnz	UARTSendString@i& (0+255),f,b
  9549  0036B8  2BDE               	incf	(UARTSendString@i+1)& (0+255),f,b
  9550  0036BA                     l4620:
  9551  0036BA  FFFF               	dw	65535	; assembler added errata NOP
  9552                           
  9553                           ; BSR set to: 0
  9554                           ;serial.c: 68:   while (c[i] != '\0') {
  9555  0036BC  51DD               	movf	UARTSendString@i& (0+255),w,b
  9556  0036BE  25DB               	addwf	UARTSendString@c& (0+255),w,b
  9557  0036C0  6ED9               	movwf	fsr2l,c
  9558  0036C2  51DE               	movf	(UARTSendString@i+1)& (0+255),w,b
  9559  0036C4  21DC               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  9560  0036C6  6EDA               	movwf	fsr2h,c
  9561  0036C8  50DF               	movf	indf2,w,c
  9562  0036CA  B4D8               	btfsc	status,2,c
  9563                           
  9564                           ; BSR set to: 0
  9565  0036CC  0012               	return		;funcret
  9566  0036CE  FFFF               	dw	65535	; assembler added errata NOP
  9567  0036D0  D7E7               	goto	l4616
  9568  0036D2  FFFF               	dw	65535	; errata NOP
  9569  0036D4                     __end_of_UARTSendString:
  9570                           	opt callstack 0
  9571                           
  9572 ;; *************** function _UARTNewLine *****************
  9573 ;; Defined at:
  9574 ;;		line 41 in file "serial.c"
  9575 ;; Parameters:    Size  Location     Type
  9576 ;;		None
  9577 ;; Auto vars:     Size  Location     Type
  9578 ;;		None
  9579 ;; Return value:  Size  Location     Type
  9580 ;;                  1    wreg      void 
  9581 ;; Registers used:
  9582 ;;		wreg, cstack
  9583 ;; Tracked objects:
  9584 ;;		On entry : 0/0
  9585 ;;		On exit  : 0/0
  9586 ;;		Unchanged: 0/0
  9587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9588 ;;      Params:         0       0       0       0       0       0       0
  9589 ;;      Locals:         0       0       0       0       0       0       0
  9590 ;;      Temps:          0       0       0       0       0       0       0
  9591 ;;      Totals:         0       0       0       0       0       0       0
  9592 ;;Total ram usage:        0 bytes
  9593 ;; Hardware stack levels used:    1
  9594 ;; Hardware stack levels required when called:    3
  9595 ;; This function calls:
  9596 ;;		_UARTSendChar
  9597 ;; This function is called by:
  9598 ;;		_main
  9599 ;;		_read_op
  9600 ;; This function uses a non-reentrant model
  9601 ;;
  9602                           
  9603                           	psect	text46
  9604  003956                     __ptext46:
  9605                           	opt callstack 0
  9606  003956                     _UARTNewLine:
  9607                           	opt callstack 0
  9608  003956  FFFF               	dw	65535	; assembler added errata NOP
  9609                           
  9610                           ;serial.c: 42:   TRISCbits.TRISC7 = 0;
  9611                           
  9612                           ; BSR set to: 0
  9613                           ;incstack = 0
  9614  003958  9E94               	bcf	3988,7,c	;volatile
  9615                           
  9616                           ;serial.c: 43:   UARTSendChar(0x0a);
  9617  00395A  0E0A               	movlw	10
  9618  00395C  ECB5  F01C         	call	_UARTSendChar
  9619                           
  9620                           ;serial.c: 44:   UARTSendChar(0x0d);
  9621  003960  0E0D               	movlw	13
  9622  003962  ECB5  F01C         	call	_UARTSendChar
  9623  003966  0012               	return		;funcret
  9624  003968  FFFF               	dw	65535	; errata NOP
  9625  00396A                     __end_of_UARTNewLine:
  9626                           	opt callstack 0
  9627                           
  9628 ;; *************** function _UARTSendChar *****************
  9629 ;; Defined at:
  9630 ;;		line 47 in file "serial.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;  c               1    wreg     unsigned char 
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;  c               1    0[COMRAM] unsigned char 
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  1    wreg      void 
  9637 ;; Registers used:
  9638 ;;		wreg
  9639 ;; Tracked objects:
  9640 ;;		On entry : 0/0
  9641 ;;		On exit  : 0/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9644 ;;      Params:         0       0       0       0       0       0       0
  9645 ;;      Locals:         1       0       0       0       0       0       0
  9646 ;;      Temps:          0       0       0       0       0       0       0
  9647 ;;      Totals:         1       0       0       0       0       0       0
  9648 ;;Total ram usage:        1 bytes
  9649 ;; Hardware stack levels used:    1
  9650 ;; Hardware stack levels required when called:    2
  9651 ;; This function calls:
  9652 ;;		Nothing
  9653 ;; This function is called by:
  9654 ;;		_UARTNewLine
  9655 ;;		_UARTSendString
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           	psect	text47
  9660  00396A                     __ptext47:
  9661                           	opt callstack 0
  9662  00396A                     _UARTSendChar:
  9663                           	opt callstack 0
  9664  00396A  FFFF               	dw	65535	; assembler added errata NOP
  9665                           
  9666                           ;incstack = 0
  9667                           ;UARTSendChar@c stored from wreg
  9668  00396C  6E01               	movwf	UARTSendChar@c,c
  9669                           
  9670                           ;serial.c: 48:   TRISCbits.TRISC7 = 0;
  9671  00396E  9E94               	bcf	3988,7,c	;volatile
  9672  003970                     l181:
  9673  003970  FFFF               	dw	65535	; assembler added errata NOP
  9674  003972  A2AC               	btfss	4012,1,c	;volatile
  9675  003974  D7FD               	goto	l181
  9676                           
  9677                           ;serial.c: 50:   TXREG = c;
  9678  003976  C001  FFAD         	movff	UARTSendChar@c,4013	;volatile
  9679  00397A  0012               	return		;funcret
  9680  00397C  FFFF               	dw	65535	; errata NOP
  9681  00397E                     __end_of_UARTSendChar:
  9682                           	opt callstack 0
  9683                           
  9684 ;; *************** function _Timer0_StartTimer *****************
  9685 ;; Defined at:
  9686 ;;		line 21 in file "timer.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;		None
  9689 ;; Auto vars:     Size  Location     Type
  9690 ;;		None
  9691 ;; Return value:  Size  Location     Type
  9692 ;;                  2  109[None  ] int 
  9693 ;; Registers used:
  9694 ;;		None
  9695 ;; Tracked objects:
  9696 ;;		On entry : 0/0
  9697 ;;		On exit  : 0/0
  9698 ;;		Unchanged: 0/0
  9699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9700 ;;      Params:         0       0       0       0       0       0       0
  9701 ;;      Locals:         0       0       0       0       0       0       0
  9702 ;;      Temps:          0       0       0       0       0       0       0
  9703 ;;      Totals:         0       0       0       0       0       0       0
  9704 ;;Total ram usage:        0 bytes
  9705 ;; Hardware stack levels used:    1
  9706 ;; Hardware stack levels required when called:    2
  9707 ;; This function calls:
  9708 ;;		Nothing
  9709 ;; This function is called by:
  9710 ;;		_main
  9711 ;; This function uses a non-reentrant model
  9712 ;;
  9713                           
  9714                           	psect	text48
  9715  0039A8                     __ptext48:
  9716                           	opt callstack 0
  9717  0039A8                     _Timer0_StartTimer:
  9718                           	opt callstack 0
  9719  0039A8  FFFF               	dw	65535	; assembler added errata NOP
  9720                           
  9721                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  9722                           
  9723                           ;incstack = 0
  9724  0039AA  8ED5               	bsf	4053,7,c	;volatile
  9725                           
  9726                           ;timer.c: 23:  return 0;;	Return value of _Timer0_StartTimer is never used
  9727  0039AC  0012               	return		;funcret
  9728  0039AE  FFFF               	dw	65535	; errata NOP
  9729  0039B0                     __end_of_Timer0_StartTimer:
  9730                           	opt callstack 0
  9731                           
  9732 ;; *************** function _Timer0_Init *****************
  9733 ;; Defined at:
  9734 ;;		line 8 in file "timer.c"
  9735 ;; Parameters:    Size  Location     Type
  9736 ;;		None
  9737 ;; Auto vars:     Size  Location     Type
  9738 ;;		None
  9739 ;; Return value:  Size  Location     Type
  9740 ;;                  1    wreg      void 
  9741 ;; Registers used:
  9742 ;;		wreg, status,2
  9743 ;; Tracked objects:
  9744 ;;		On entry : 0/0
  9745 ;;		On exit  : 0/0
  9746 ;;		Unchanged: 0/0
  9747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9748 ;;      Params:         0       0       0       0       0       0       0
  9749 ;;      Locals:         0       0       0       0       0       0       0
  9750 ;;      Temps:          0       0       0       0       0       0       0
  9751 ;;      Totals:         0       0       0       0       0       0       0
  9752 ;;Total ram usage:        0 bytes
  9753 ;; Hardware stack levels used:    1
  9754 ;; Hardware stack levels required when called:    2
  9755 ;; This function calls:
  9756 ;;		Nothing
  9757 ;; This function is called by:
  9758 ;;		_main
  9759 ;; This function uses a non-reentrant model
  9760 ;;
  9761                           
  9762                           	psect	text49
  9763  0038CE                     __ptext49:
  9764                           	opt callstack 0
  9765  0038CE                     _Timer0_Init:
  9766                           	opt callstack 0
  9767  0038CE  FFFF               	dw	65535	; assembler added errata NOP
  9768                           
  9769                           ;timer.c: 9:  time_ms = 0;
  9770                           
  9771                           ;incstack = 0
  9772  0038D0  0E00               	movlw	0
  9773  0038D2  0100               	movlb	0	; () banked
  9774  0038D4  6F89               	movwf	_time_ms& (0+255),b	;volatile
  9775  0038D6  0E00               	movlw	0
  9776  0038D8  6F8A               	movwf	(_time_ms+1)& (0+255),b	;volatile
  9777  0038DA  0E00               	movlw	0
  9778  0038DC  6F8B               	movwf	(_time_ms+2)& (0+255),b	;volatile
  9779  0038DE  0E00               	movlw	0
  9780  0038E0  6F8C               	movwf	(_time_ms+3)& (0+255),b	;volatile
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;timer.c: 10:  T0CONbits.T08BIT = 0;
  9784  0038E2  9CD5               	bcf	4053,6,c	;volatile
  9785                           
  9786                           ; BSR set to: 0
  9787                           ;timer.c: 11:  TMR0H = 0xFF;
  9788  0038E4  68D7               	setf	4055,c	;volatile
  9789                           
  9790                           ;timer.c: 12:  TMR0L = 0x34;
  9791  0038E6  0E34               	movlw	52
  9792  0038E8  6ED6               	movwf	4054,c	;volatile
  9793                           
  9794                           ; BSR set to: 0
  9795                           ;timer.c: 13:  INTCONbits.TMR0IF = 0;
  9796  0038EA  94F2               	bcf	4082,2,c	;volatile
  9797                           
  9798                           ;timer.c: 14:  T0CON = 0x00;
  9799  0038EC  0E00               	movlw	0
  9800  0038EE  6ED5               	movwf	4053,c	;volatile
  9801                           
  9802                           ; BSR set to: 0
  9803  0038F0  0012               	return		;funcret
  9804  0038F2  FFFF               	dw	65535	; errata NOP
  9805  0038F4                     __end_of_Timer0_Init:
  9806                           	opt callstack 0
  9807                           
  9808 ;; *************** function _timingISR *****************
  9809 ;; Defined at:
  9810 ;;		line 31 in file "timer.c"
  9811 ;; Parameters:    Size  Location     Type
  9812 ;;		None
  9813 ;; Auto vars:     Size  Location     Type
  9814 ;;		None
  9815 ;; Return value:  Size  Location     Type
  9816 ;;                  1    wreg      void 
  9817 ;; Registers used:
  9818 ;;		wreg, status,2, status,0, cstack
  9819 ;; Tracked objects:
  9820 ;;		On entry : 0/0
  9821 ;;		On exit  : 0/0
  9822 ;;		Unchanged: 0/0
  9823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9824 ;;      Params:         0       0       0       0       0       0       0
  9825 ;;      Locals:         0       0       0       0       0       0       0
  9826 ;;      Temps:          0       0       0       0       0       0       0
  9827 ;;      Totals:         0       0       0       0       0       0       0
  9828 ;;Total ram usage:        0 bytes
  9829 ;; Hardware stack levels used:    1
  9830 ;; Hardware stack levels required when called:    1
  9831 ;; This function calls:
  9832 ;;		i2_Timer0_StartTimer
  9833 ;; This function is called by:
  9834 ;;		Interrupt level 2
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           	psect	intcode
  9839  000008                     __pintcode:
  9840                           	opt callstack 0
  9841  000008                     _timingISR:
  9842                           	opt callstack 0
  9843  000008  FFFF               	dw	65535	; assembler added errata NOP
  9844                           
  9845                           ; BSR set to: 0
  9846                           ;incstack = 0
  9847  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9848                           
  9849                           ;timer.c: 32:  if (TMR0IF && TMR0IE) {
  9850  00000C  B4F2               	btfsc	4082,2,c	;volatile
  9851  00000E  AAF2               	btfss	4082,5,c	;volatile
  9852  000010  D00D               	goto	i2l246
  9853                           
  9854                           ;timer.c: 33:   TMR0IF = 0;
  9855  000012  94F2               	bcf	4082,2,c	;volatile
  9856                           
  9857                           ;timer.c: 34:   time_ms++;
  9858  000014  0E01               	movlw	1
  9859  000016  0100               	movlb	0	; () banked
  9860  000018  2789               	addwf	_time_ms& (0+255),f,b	;volatile
  9861  00001A  0E00               	movlw	0
  9862  00001C  238A               	addwfc	(_time_ms+1)& (0+255),f,b	;volatile
  9863  00001E  238B               	addwfc	(_time_ms+2)& (0+255),f,b	;volatile
  9864  000020  238C               	addwfc	(_time_ms+3)& (0+255),f,b	;volatile
  9865                           
  9866                           ; BSR set to: 0
  9867                           ;timer.c: 35:   TMR0H = 0xFF;
  9868  000022  68D7               	setf	4055,c	;volatile
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;timer.c: 36:   TMR0L = 0x34;
  9872  000024  0E34               	movlw	52
  9873  000026  6ED6               	movwf	4054,c	;volatile
  9874                           
  9875                           ; BSR set to: 0
  9876                           ;timer.c: 37:   Timer0_StartTimer();
  9877  000028  ECD8  F01C         	call	i2_Timer0_StartTimer	;wreg free
  9878  00002C                     i2l246:
  9879  00002C  FFFF               	dw	65535	; assembler added errata NOP
  9880  00002E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9881  000030  0011               	retfie		f
  9882  000032  FFFF               	dw	65535	; errata NOP
  9883  000034                     __end_of_timingISR:
  9884                           	opt callstack 0
  9885                           
  9886 ;; *************** function i2_Timer0_StartTimer *****************
  9887 ;; Defined at:
  9888 ;;		line 21 in file "timer.c"
  9889 ;; Parameters:    Size  Location     Type
  9890 ;;		None
  9891 ;; Auto vars:     Size  Location     Type
  9892 ;;		None
  9893 ;; Return value:  Size  Location     Type
  9894 ;;                  2    0[None  ] int 
  9895 ;; Registers used:
  9896 ;;		None
  9897 ;; Tracked objects:
  9898 ;;		On entry : 0/0
  9899 ;;		On exit  : 0/0
  9900 ;;		Unchanged: 0/0
  9901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9902 ;;      Params:         0       0       0       0       0       0       0
  9903 ;;      Locals:         0       0       0       0       0       0       0
  9904 ;;      Temps:          0       0       0       0       0       0       0
  9905 ;;      Totals:         0       0       0       0       0       0       0
  9906 ;;Total ram usage:        0 bytes
  9907 ;; Hardware stack levels used:    1
  9908 ;; This function calls:
  9909 ;;		Nothing
  9910 ;; This function is called by:
  9911 ;;		_timingISR
  9912 ;; This function uses a non-reentrant model
  9913 ;;
  9914                           
  9915                           	psect	text51
  9916  0039B0                     __ptext51:
  9917                           	opt callstack 0
  9918  0039B0                     i2_Timer0_StartTimer:
  9919                           	opt callstack 0
  9920  0039B0  FFFF               	dw	65535	; assembler added errata NOP
  9921                           
  9922                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  9923                           
  9924                           ;incstack = 0
  9925  0039B2  8ED5               	bsf	4053,7,c	;volatile
  9926                           
  9927                           ;timer.c: 23:  return 0;;	Return value of i2_Timer0_StartTimer is never used
  9928  0039B4  0012               	return		;funcret
  9929  0039B6  FFFF               	dw	65535	; errata NOP
  9930  0039B8                     __end_ofi2_Timer0_StartTimer:
  9931                           	opt callstack 0
  9932                           
  9933                           	psect	rparam
  9934  0000                     
  9935                           	psect	temp
  9936  00007F                     btemp:
  9937                           	opt callstack 0
  9938  00007F                     	ds	1
  9939  0000                     int$flags	set	btemp
  9940  0000                     wtemp8	set	btemp+1
  9941  0000                     ttemp5	set	btemp+1
  9942  0000                     ttemp6	set	btemp+4
  9943  0000                     ttemp7	set	btemp+8
  9944                           tosu	equ	0xFFF
  9945                           tosh	equ	0xFFE
  9946                           tosl	equ	0xFFD
  9947                           stkptr	equ	0xFFC
  9948                           pclatu	equ	0xFFB
  9949                           pclath	equ	0xFFA
  9950                           pcl	equ	0xFF9
  9951                           tblptru	equ	0xFF8
  9952                           tblptrh	equ	0xFF7
  9953                           tblptrl	equ	0xFF6
  9954                           tablat	equ	0xFF5
  9955                           prodh	equ	0xFF4
  9956                           prodl	equ	0xFF3
  9957                           indf0	equ	0xFEF
  9958                           postinc0	equ	0xFEE
  9959                           postdec0	equ	0xFED
  9960                           preinc0	equ	0xFEC
  9961                           plusw0	equ	0xFEB
  9962                           fsr0h	equ	0xFEA
  9963                           fsr0l	equ	0xFE9
  9964                           wreg	equ	0xFE8
  9965                           indf1	equ	0xFE7
  9966                           postinc1	equ	0xFE6
  9967                           postdec1	equ	0xFE5
  9968                           preinc1	equ	0xFE4
  9969                           plusw1	equ	0xFE3
  9970                           fsr1h	equ	0xFE2
  9971                           fsr1l	equ	0xFE1
  9972                           bsr	equ	0xFE0
  9973                           indf2	equ	0xFDF
  9974                           postinc2	equ	0xFDE
  9975                           postdec2	equ	0xFDD
  9976                           preinc2	equ	0xFDC
  9977                           plusw2	equ	0xFDB
  9978                           fsr2h	equ	0xFDA
  9979                           fsr2l	equ	0xFD9
  9980                           status	equ	0xFD8


Data Sizes:
    Strings     74
    Constant    0
    Data        7
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     126
    BANK0           128     42     108
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_132(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_119(CODE[3]), 
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[4]), STR_101(CODE[4]), 
		 -> STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[3]), STR_81(CODE[4]), 
		 -> STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_36(CODE[3]), STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), 
		 -> STR_18(CODE[3]), STR_14(CODE[3]), STR_9(CODE[4]), STR_5(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_132(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_119(CODE[3]), 
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[4]), STR_101(CODE[4]), 
		 -> STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[3]), STR_81(CODE[4]), 
		 -> STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_36(CODE[3]), STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), 
		 -> STR_18(CODE[3]), STR_14(CODE[3]), STR_9(CODE[4]), STR_5(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    S1793_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UARTSendString@c	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    S187$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_int_to_char
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getchar->_fgetc
    _fgetc->_getch
    _get_temp->___flsub
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___fltol->_get_temp
    _UARTSendString->_int_to_char
    _UARTNewLine->_UARTSendChar

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_UARTSendString
    _int_to_char->_sprintf
    _UARTSendString->_int_to_char

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   54903
                                             36 BANK0      6     6      0
                        _Timer0_Init
                  _Timer0_StartTimer
                        _UARTNewLine
                     _UARTSendString
                            ___fltol
                           _get_temp
                     _initialize_PWM
                      _initialize_RX
                      _initialize_TX
                        _int_to_char
                     _set_duty_cycle
 ---------------------------------------------------------------------------------
 (1) _set_duty_cycle                                       3     2      1     243
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _int_to_char                                         18    14      4   49030
                                            121 COMRAM     4     0      4
                                             18 BANK0     14    14      0
                            _getchar
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   48594
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   48185
                                            113 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           56    50      6   47517
                                             66 COMRAM    47    41      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7303
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6267
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    6609
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5712
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6866
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _getchar                                              0     0      0     189
                              _fgetc
 ---------------------------------------------------------------------------------
 (3) _fgetc                                                9     7      2     189
                                              2 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (4) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_PWM                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    10      4    4992
                                             47 COMRAM    14    10      4
                           _ADC_Init
                           _ADC_Read
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2585
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             61 COMRAM    10     6      4
                           _get_temp (ARG)
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       4     2      2     264
                                             32 BANK0      4     2      2
                       _UARTSendChar
                        _int_to_char (ARG)
 ---------------------------------------------------------------------------------
 (1) _UARTNewLine                                          0     0      0      22
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _timingISR                                           0     0      0       0
                i2_Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (11) i2_Timer0_StartTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_Init
   _Timer0_StartTimer
   _UARTNewLine
     _UARTSendChar
   _UARTSendString
     _UARTSendChar
     _int_to_char (ARG)
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   ___fltol
     _get_temp (ARG)
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
   _get_temp
     _ADC_Init
     _ADC_Read
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___xxtofl
   _initialize_PWM
   _initialize_RX
   _initialize_TX
   _int_to_char
     _getchar
       _fgetc
         _getch
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _set_duty_cycle

 _timingISR (ROOT)
   i2_Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2A      6C       5       84.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EA      15        0.0%
DATA                 0      0      EA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Feb 24 05:39:08 2019

                                                        _SSPSTATbits 000FC7  
                                                ___wmul@multiplicand 0003  
                                                                l181 3970  
                                                                l407 2B58  
                                                                l503 17E6  
                                                                l344 3306  
                                                                l441 213E  
                                                                l362 1F30  
                                                                l426 2396  
                                                                l443 2148  
                                                                l284 35B4  
                                                                l364 1F3A  
                                                                l428 23A0  
                                                                l285 359C  
                                                                l387 2558  
                                                                l389 2562  
                                                                l857 2F14  
                                                                l998 2E20  
                                                                _PR2 000FCB  
                                                                _abs 378E  
                                                                _lcd 0080  
                                                                _pad 32D0  
                                                                wreg 000FE8  
                                                       ___flmul@aexp 0020  
                                                       ___flmul@bexp 0021  
                                                        main@address 00E1  
                                                       ___flmul@sign 001B  
                                                       ___flmul@temp 0026  
                                                       ___flmul@prod 0022  
                                                       ___fltol@exp1 0047  
                                                       __CFG_WDT$OFF 000000  
                                                               l1008 31FE  
                                                               l1105 1D98  
                                                               l1114 1E10  
                                                               l1115 1E0A  
                                                               ?_abs 0013  
                                                               l1222 2A5C  
                                                               l1215 29D2  
                                                               l1312 32CA  
                                                               l1090 1CA4  
                                                               l1218 2AE8  
                                                               l1235 37BA  
                                                               l1174 1878  
                                                               l1238 37C4  
                                                               l1191 1B30  
                                                               l1183 1AA2  
                                                               l1184 1A9C  
                                                               l4000 1276  
                                                               l1097 1EAC  
                                                               l1089 1CCC  
                                                               l1178 1B68  
                                                               l1266 2826  
                                                               l3220 36F8  
                                                               l1269 2830  
                                                               l1381 350A  
                                                               l3206 3240  
                                                               l3310 28B6  
                                                               l1366 3162  
                                                               l4102 174C  
                                                               l3216 36E0  
                                                               l3224 387E  
                                                               l3240 32EC  
                                                               l3312 28CC  
                                                               l3304 288E  
                                                               l1376 3500  
                                                               l4112 179A  
                                                               l4032 13C0  
                                                               l4024 134C  
                                                               l4016 12CC  
                                                               l3226 3884  
                                                               l3250 332C  
                                                               l3330 296C  
                                                               l3322 292C  
                                                               l4300 1DE6  
                                                               l4220 1C52  
                                                               l3244 32FC  
                                                               l3404 31E6  
                                                               l4108 178C  
                                                               l4060 154C  
                                                               l4140 3442  
                                                               l3254 335C  
                                                               l3246 3312  
                                                               l3326 2944  
                                                               l3350 2CA2  
                                                               l3342 2C60  
                                                               l3510 25A2  
                                                               l4046 14CA  
                                                               l4118 17AE  
                                                               l4320 1E58  
                                                               l4232 1CB4  
                                                               l3416 3684  
                                                               l3424 3526  
                                                               l3352 2CB8  
                                                               l3440 1F0E  
                                                               l4410 357A  
                                                               l4234 1CBA  
                                                               l4154 1B9C  
                                                               l3426 3534  
                                                               l3362 2D1C  
                                                               l3346 2C86  
                                                               l3522 262E  
                                                               l4074 15AC  
                                                               l4138 341A  
                                                               l4332 1E8C  
                                                               l3700 2736  
                                                               l3540 26A2  
                                                               l4502 1A42  
                                                               l4334 1E90  
                                                               l4190 1C14  
                                                               l4182 1BF0  
                                                               l4158 1BA2  
                                                               l4350 3398  
                                                               l3710 275A  
                                                               l3366 2D44  
                                                               l3358 2D04  
                                                               l3454 1F58  
                                                               l4432 181A  
                                                               l4328 1E82  
                                                               l4256 1D04  
                                                               l4352 33A8  
                                                               l3712 2786  
                                                               l3552 2B1A  
                                                               l3376 2D92  
                                                               l3608 24C6  
                                                               l3632 215E  
                                                               l4088 1682  
                                                               l3800 07B6  
                                                               l4450 1860  
                                                               l4434 1820  
                                                               l4258 1D0A  
                                                               l4266 1D1E  
                                                               l4178 1BEA  
                                                               l4354 33F6  
                                                               l3706 2748  
                                                               l3298 2864  
                                                               l3458 1F68  
                                                               l3570 2BAE  
                                                               l3562 2B72  
                                                               l3378 2DA8  
                                                               l3802 07C6  
                                                               l4620 36BA  
                                                               l4532 1B08  
                                                               l4508 1A62  
                                                               l4460 189A  
                                                               l4452 1866  
                                                               l4436 1832  
                                                               l4284 1DC0  
                                                               l4276 1D86  
                                                               l3716 27BE  
                                                               l3708 2752  
                                                               l3492 20EE  
                                                               l3468 2062  
                                                               l3580 2BF4  
                                                               l3388 2E08  
                                                               l3396 3184  
                                                               l3660 224C  
                                                               l3820 08BE  
                                                               l4294 1DD8  
                                                               l3566 2B8C  
                                                               l3398 319A  
                                                               l3646 21B2  
                                                               l3638 218E  
                                                               l3910 0DDE  
                                                               l3822 08CE  
                                                               ?_pad 0011  
                                                               l4616 36A0  
                                                               l4544 1B52  
                                                               l4528 1AE8  
                                                               l3488 20D2  
                                                               l3584 2C0E  
                                                               l3576 2BD6  
                                                               l3736 30D2  
                                                               l3760 0698  
                                                               l4570 2A0C  
                                                               l4562 29E4  
                                                               l3690 26E4  
                                                               l3738 30E2  
                                                               l3842 0A2E  
                                                               l3818 089E  
                                                               l3762 069E  
                                                               l4740 2EB8  
                                                               l4724 2E68  
                                                               l4580 2A84  
                                                               l4572 2A1A  
                                                               l3692 26EA  
                                                               l3684 2346  
                                                               l3668 22C8  
                                                               l3940 0F80  
                                                               l3932 0F44  
                                                               l3836 0988  
                                                               l3780 06D0  
                                                               l3772 06C0  
                                                               l3764 06B0  
                                                               l4750 2ED4  
                                                               l4582 2A92  
                                                               l4574 2A42  
                                                               l3598 23D8  
                                                               l3926 0ED2  
                                                               l3918 0E5E  
                                                               l3846 0A68  
                                                               l4752 2EE2  
                                                               l4744 2ECA  
                                                               l4568 2A04  
                                                               l3936 0F50  
                                                               l3856 0AD2  
                                                               l3784 06DE  
                                                               l3776 06C8  
                                                               l3768 06B8  
                                                               l3946 0F94  
                                                               l3866 0B4E  
                                                               l3786 0724  
                                                               l4914 3076  
                                                               l3956 0FBE  
                                                               l3876 0C2E  
                                                               l4916 3082  
                                                               l4758 2F02  
                                                               l4598 2AD6  
                                                               l3966 1050  
                                                               l3894 0D88  
                                                               l3886 0CD8  
                                                               l3798 0796  
                                                               l3992 11C8  
                                                               l3984 1156  
                                                               l3976 10BC  
                                                               STR_1 061D  
                                                               STR_2 0648  
                                                               STR_3 0605  
                                                               STR_5 0605  
                                                               STR_7 0609  
                                                               STR_9 0609  
                                                               u3011 2D72  
                                                               u3110 1EDC  
                                                               u3030 2DAE  
                                                               u3200 2094  
                                                               u3120 1EE0  
                                                               u4000 0B0C  
                                                               u3201 2092  
                                                               u3210 20A4  
                                                               u3220 20AA  
                                                               u3060 31A0  
                                                               u4020 0BA8  
                                                               u3150 1F24  
                                                               u3310 2660  
                                                               u3240 20BA  
                                                               u3320 2670  
                                                               u4040 0C88  
                                                               u3090 3680  
                                                               u3170 1F50  
                                                               u3330 2676  
                                                               u3410 2BA2  
                                                               u4210 137A  
                                                               u3180 2072  
                                                               u3500 2502  
                                                               u4140 107E  
                                                               u3270 254C  
                                                               u3510 2508  
                                                               u4310 16DC  
                                                               u4230 141A  
                                                               u5120 2E54  
                                                               u3280 2608  
                                                               u3440 2C24  
                                                               u2800 3830  
                                                               u2720 37F4  
                                                               u3600 222A  
                                                               u3361 2AFA  
                                                               u5130 2E8A  
                                                               u3290 263E  
                                                               u2810 3780  
                                                               u2730 37F8  
                                                               u3530 2132  
                                                               u4250 1524  
                                                               u4090 0E8C  
                                                               u3700 2732  
                                                               u3460 238A  
                                                               u2820 3784  
                                                               u3620 22A2  
                                                               u2901 2896  
                                                               u3285 25F4  
                                                               u4430 1C76  
                                                               u5070 2A9E  
                                                               u2670 3236  
                                                               u2830 34E4  
                                                               u3630 22DA  
                                                               u3550 21AE  
                                                               u4270 1586  
                                                               u5135 2E7E  
                                                               u4440 1C86  
                                                               u3720 27F2  
                                                               u2920 28D2  
                                                               u3800 3138  
                                                               u2840 34E8  
                                                               u3560 21E8  
                                                               u3625 228E  
                                                               u5170 2EEA  
                                                               u4610 1DEC  
                                                               u4450 1C8A  
                                                               u3730 27F6  
                                                               u2690 3282  
                                                               u3490 24F2  
                                                               u3650 22FC  
                                                               u3570 21EC  
                                                               u4290 1606  
                                                               u5307 358E  
                                                               u3491 24F0  
                                                               u3651 22FA  
                                                               u2860 3864  
                                                               u2780 379E  
                                                               u3660 230C  
                                                               u5260 3068  
                                                               u4630 1E02  
                                                               u2870 3868  
                                                               u2790 382C  
                                                               u3670 2312  
                                                               u3590 2226  
                                                               u3910 090A  
                                                               u4480 1CD6  
                                                               u3920 090E  
                                                               u4570 1DAC  
                                                               u3930 091C  
                                                               u4900 1A02  
                                                               u2980 2CBE  
                                                               u3860 0802  
                                                               _RCIF 007CF5  
                                                               u3870 0806  
                                                               u3960 09E2  
                                                               u3880 0814  
                                                               u4905 19F6  
                                                               u5297 3090  
                                                               u4690 1E66  
                                                               u4940 1A94  
                                                               u3980 0AC2  
                                                               u4890 1886  
                                                               u4980 1AF8  
                                                               u4990 1B18  
                                                   ??_initialize_PWM 0001  
                                                               abs@a 0013  
                                                               _dbuf 009B  
                                                               _flag 009A  
                                                               _atoi 26D0  
                                                               _ctoa 3510  
                                                               _main 2FE4  
                                                               _dtoa 1EB2  
                                                               _prec 0093  
                                                               _otoa 2536  
                                                               _nout 008F  
                                                               pad@i 0018  
                                                               pad@p 0015  
                                                               fsr1h 000FE2  
                                                               fsr2h 000FDA  
                                                               indf2 000FDF  
                                                               fsr1l 000FE1  
                                                               pad@w 001A  
                                                               fsr2l 000FD9  
                                                               _stoa 2AEE  
                                                               btemp 007F  
                                                               _utoa 2374  
                                                               _xtoa 211C  
                                                   __end_of_ADC_Init 399E  
                                                   __end_of_ADC_Read 35BA  
                                                               prodh 000FF4  
                                                               prodl 000FF3  
                                                               start 0034  
                                                       ___param_bank 000000  
                                                  int_to_char@result 00CD  
                                                              ??_abs 0015  
                                                              ??_pad 0017  
                                                      ___fltol@sign1 0046  
                                                    __end_of___aodiv 2992  
                                                              ?_atoi 0008  
                                                              ?_ctoa 001C  
                                                    __end_of___fladd 1EB2  
                                                              ?_main 0001  
                                                              ?_dtoa 001C  
                                                       get_temp@temp 0038  
                                                    __end_of___aomod 2D6A  
                                                              STR_21 0627  
                                                              STR_14 0606  
                                                              STR_30 062A  
                                                              STR_23 0627  
                                                              STR_32 062A  
                                                              STR_41 0611  
                                                              STR_25 062D  
                                                              STR_18 060A  
                                                              STR_34 0630  
                                                              STR_27 062D  
                                                              STR_51 0639  
                                                              STR_36 0630  
                                                              STR_61 060D  
                                                              STR_46 0612  
                                                              STR_54 063C  
                                                              STR_71 0633  
                                                              STR_39 0611  
                                                              STR_56 063C  
                                                              STR_81 0615  
                                                              STR_49 0639  
                                                              STR_66 060E  
                                                              STR_74 0636  
                                                              STR_91 061E  
                                                              STR_59 060D  
                                                              STR_76 0636  
                                                              STR_69 0633  
                                                              STR_86 0616  
                                                              STR_94 063F  
                                                              STR_79 0615  
                                                              STR_96 063F  
                                                    __end_of___flmul 1B6E  
                                                              ?_otoa 001C  
                                                              STR_99 0619  
                                                    __end_of___flsub 3604  
                                                    __end_of___fltol 2F1A  
                                                              ?_stoa 000A  
                                                              ?_utoa 001C  
                                                              _T0CON 000FD5  
                                                    __end_of___lodiv 2E46  
                                                              ?_xtoa 001C  
                                                              _T2CON 000FCA  
                                                    __end_of___lomod 3224  
                                                              i2l246 002C  
                                                              _RCSTA 000FAB  
                                                       vfpfcnvrt@fmt 0045  
                                                              _TMR0H 000FD7  
                                                       vfpfcnvrt@llu 006A  
                                                              _TMR0L 000FD6  
                                                              _SPBRG 000FAF  
                                                              _PORTA 000F80  
                                                              _PORTB 000F81  
                                                              _PORTD 000F83  
                                                              _TRISA 000F92  
                                                              _TRISB 000F93  
                                                              _TRISC 000F94  
                                                              _TRISD 000F95  
                                                              _TXREG 000FAD  
                                                    __end_of_getchar 3990  
                                                              _fgetc 337A  
                                                              _flags 0095  
                                                              _getch 399E  
                                                              _errno 008D  
                                                              _fputc 3224  
                                                    __end_of_isalpha 378E  
                                                              _fputs 36D4  
                                                    __end_of_isdigit 3872  
                                                              atoi@n 0015  
                                                              pad@fp 0011  
                                                              atoi@s 0008  
                                                              _width 0091  
                                                              ctoa@c 001E  
                                                              _putch 39C0  
                                                              ctoa@w 001F  
                                                              dtoa@d 001E  
                                                              dtoa@i 003E  
                                                              dtoa@n 0036  
                                                              dtoa@p 0030  
                                                              dtoa@s 0034  
                                                              dtoa@w 0032  
                                                    __end_of_islower 3802  
                                                    __end_of_isspace 3690  
                                                    __end_of_isupper 383A  
                                                              tablat 000FF5  
                                                       ?_int_to_char 007A  
                                                              otoa@d 001E  
                                                              otoa@i 003C  
                                                              otoa@n 0034  
                                                              otoa@p 002E  
                                                              otoa@t 0030  
                                                              otoa@w 0032  
                                                              plusw1 000FE3  
                                                              plusw2 000FDB  
                                                              stoa@i 0016  
                                                              stoa@l 001E  
                                                              stoa@p 001C  
                                                              stoa@s 000C  
                                                              stoa@w 0018  
                                                              ttemp5 0080  
                                                              ttemp6 0083  
                                                              ttemp7 0087  
                                                              utoa@d 001E  
                                                              utoa@i 003A  
                                                              utoa@n 0032  
                                                              utoa@p 002E  
                                                              utoa@w 0030  
                                                              status 000FD8  
                                                              wtemp8 0080  
                                                    __end_of_sprintf 34BA  
                                                              xtoa@c 0041  
                                                              xtoa@d 001E  
                                                              xtoa@i 003F  
                                                              xtoa@n 0037  
                                                              xtoa@p 0033  
                                                              xtoa@w 0035  
                                                              xtoa@x 0026  
                                                    __end_of_strncmp 3168  
                                                    __end_of_toupper 3510  
                                                   ___lodiv@dividend 0001  
                                                       _toupper$1947 000D  
                                                    __initialization 3716  
                                                     int_to_char@num 007A  
                                                       __end_of_atoi 2836  
                                                       __end_of_ctoa 3566  
                                                       __end_of_main 30A6  
                                                       __end_of_dtoa 211C  
                                                       __end_of_otoa 26D0  
                                                       __end_of_stoa 2C32  
                                                       __end_of_utoa 2536  
                                                       __end_of_xtoa 2374  
                                                 int_to_char@the_num 00D7  
                                                             ??_atoi 000A  
                                                             ??_ctoa 001F  
                                                             ??_main 00DF  
                                                             ??_dtoa 0026  
                                                             ??_otoa 0026  
                                                             ??_stoa 000E  
                                                             ??_utoa 0026  
                                                             ??_xtoa 0027  
                                                      __activetblptr 000002  
                                                   ___lodiv@quotient 0011  
                                                             ?_fgetc 0003  
                                                             ?_getch 0001  
                                                             _ADCON0 000FC2  
                                                             _ADCON1 000FC1  
                                                             ?_fputc 0001  
                                                             STR_101 0619  
                                                             STR_110 061A  
                                                             ?_fputs 000A  
                                                             STR_103 0601  
                                                             STR_105 0601  
                                                             STR_121 0621  
                                                             STR_114 0602  
                                                             STR_130 0624  
                                                             _ADRESH 000FC4  
                                                             STR_123 0621  
                                                             STR_132 0624  
                                                             STR_117 0642  
                                                             STR_126 0645  
                                                             _ADRESL 000FC3  
                                                             STR_119 0642  
                                                             STR_128 0645  
                                                             _CCPR1L 000FBE  
                                                             ?_putch 0001  
                                                             _RCREG1 000FAE  
                                                      vfpfcnvrt@done 0059  
                                                             _TMR0IE 007F95  
                                                             _TMR0IF 007F92  
                                                             _SSPBUF 000FC9  
                                                       ?_UARTNewLine 0001  
                                                   __end_of___xxtofl 2AEE  
                                                      ??_Timer0_Init 0001  
                                                i2_Timer0_StartTimer 39B0  
                                                       vfprintf@cfmt 0078  
                                                   __end_of_get_temp 2FE4  
                                                          ??___aodiv 0011  
                                                          ??___fladd 0009  
                                                          ??___aomod 0011  
                                                             ___wmul 38A4  
                                                          ??___flmul 0017  
                                                          ??___flsub 0030  
                                                          ??___fltol 0042  
                                                          ??___lodiv 0011  
                                                          ??___lomod 0011  
                                                    ADC_Read@channel 0005  
                                                             clear_0 373C  
                                            __size_of_UARTSendString 0044  
                                                             fgetc@c 000A  
                                                             pad@buf 0013  
                                                             ctoa@fp 001C  
                                                             dtoa@fp 001C  
                                                          ??_getchar 000C  
                                                             _strlen 3872  
                                                             fputc@c 0001  
                                                             fputs@c 000E  
                                                             fputs@i 000F  
                                                             fputs@s 000A  
                                                          ??_isalpha 0003  
                                                          ??_isdigit 0003  
                                                          ?_ADC_Init 0001  
                                                          ?_ADC_Read 0001  
                                                          ??_islower 0003  
                                                       __mediumconst 0000  
                                                          ??_isspace 0003  
                                                             otoa@fp 001C  
                                               ?i2_Timer0_StartTimer 0001  
                                                             tblptrh 000FF7  
                                                          ??_isupper 0003  
                                                             tblptrl 000FF6  
                                                             tblptru 000FF8  
                                                             stoa@cp 001A  
                                             __size_of_initialize_RX 0014  
                                             __size_of_initialize_TX 0014  
                                                             stoa@fp 000A  
                                                             putch@c 0001  
                                                   __end_of_vfprintf 3464  
                                                             utoa@fp 001C  
                                                          ??_sprintf 007A  
                                                             xtoa@fp 001C  
                                                          ??_strncmp 0007  
                                                          ??_toupper 0009  
                                                       ___xxtofl@arg 000B  
                                                       ___xxtofl@exp 000A  
                                                       ___xxtofl@val 0001  
                                                         __accesstop 0080  
                                            __end_of__initialization 3744  
                                                      ___rparam_used 000001  
                                                         ___fltol@f1 003E  
                                                     __pcstackCOMRAM 0001  
                                                       __pidataBANK0 39B8  
                                                      __end_of_fgetc 3404  
                                                      __end_of_getch 39A8  
                                                      __end_of_fputc 32D0  
                                                      __end_of_fputs 3716  
                                                __end_of_Timer0_Init 38F4  
                                                      __end_of_putch 39C6  
                                                         ??_ADC_Init 0001  
                                                         ??_ADC_Read 0003  
                                              ??i2_Timer0_StartTimer 0001  
                                            __size_of_set_duty_cycle 0022  
                                                            ??_fgetc 0005  
                                                            ??_getch 0003  
                                                            ??_fputc 0005  
                                                            ??_fputs 000E  
                                                            ??_putch 0001  
                                                         __pbssBANK0 0080  
                                               __size_of_int_to_char 0048  
                                                      _initialize_RX 3942  
                                                      _initialize_TX 392E  
                                                            ?___wmul 0001  
                                                            _CCP1CON 000FBD  
                                                            ?_strlen 0001  
                                                 __size_of_timingISR 002C  
                                                          ?___xxtofl 0001  
                                                 __size_of_vfpfcnvrt 11A0  
                                                            _SSPCON1 000FC6  
                                                          ?_get_temp 0030  
                                                   ___lomod@dividend 0001  
                                                      ?_UARTSendChar 0001  
                                                            __Hparam 0000  
                                               __size_of_UARTNewLine 0014  
                                                        _Timer0_Init 38CE  
                                                     ?_initialize_RX 0001  
                                                     ?_initialize_TX 0001  
                                                            __Lparam 0000  
                                                            ___aodiv 2836  
                                                            ___fladd 1B6E  
                                                            ___aomod 2C32  
                                                            ___flmul 17EC  
                                                            ___flsub 35BA  
                                                            ___fltol 2E46  
                                                    __size_of___wmul 002A  
                                                            ___lodiv 2D6A  
                                                            ___lomod 3168  
                                                          ?_vfprintf 0072  
                                                       __psmallconst 0600  
                                                     _UARTSendString 3690  
                                                            __pcinit 3716  
                                                            __ramtop 0600  
                                                            __ptext0 2FE4  
                                                            __ptext1 38F4  
                                                            __ptext2 3604  
                                                            __ptext3 3464  
                                                            __ptext4 3404  
                                                            __ptext5 064C  
                                                            __ptext6 211C  
                                                            __ptext7 34BA  
                                                            __ptext8 37CA  
                                                            __ptext9 3802  
                                                            _getchar 397E  
                                                          _T0CONbits 000FD5  
                                                    __size_of_strlen 0032  
                                                       __size_of_abs 003C  
                                                       __size_of_pad 00AA  
                                                            _isalpha 3752  
                                                            _isdigit 383A  
                                                         ??___xxtofl 0005  
                                                            _islower 37CA  
                                                            _isspace 364C  
                                                            _isupper 3802  
                                                            fgetc@fp 0003  
                                                            _time_ms 0089  
                                                            atoi@neg 000E  
                                                            _sprintf 3464  
                                                         ??_get_temp 0034  
                                                            _strncmp 30A6  
                                                            _toupper 34BA  
                                               end_of_initialization 3744  
                                                     ??_UARTSendChar 0001  
                                                            fputc@fp 0003  
                                                      __Lmediumconst 0000  
                                                            fputs@fp 000C  
                                                  __end_of_timingISR 0034  
                                                  __end_of_vfpfcnvrt 17EC  
                                                          _RCSTAbits 000FAB  
                                             __end_of_UARTSendString 36D4  
                                                            postdec1 000FE5  
                                                            postdec2 000FDD  
                                            __size_of_initialize_PWM 0018  
                                                            postinc0 000FEE  
                                                            postinc1 000FE6  
                                                            postinc2 000FDE  
                                                         ??_vfprintf 0078  
                                                            strlen@a 0003  
                                                            strlen@s 0001  
                                                          _PORTCbits 000F82  
                                                        ___fladd@grs 0010  
                                                      ___xxtofl@sign 0009  
                                                     _set_duty_cycle 38F4  
                                                          _TRISCbits 000F94  
                                                  _Timer0_StartTimer 39A8  
                                                  __size_of_ADC_Init 000E  
                                                  __size_of_ADC_Read 0054  
                                                 ?_Timer0_StartTimer 0001  
                                                        ___flmul@grs 001C  
                                                          _TXSTAbits 000FAC  
                                                    ??_initialize_RX 0001  
                                                    ??_initialize_TX 0001  
                                                ??_Timer0_StartTimer 0001  
                                                    ?_UARTSendString 00DB  
                                                        vfpfcnvrt@ap 0047  
                                                        vfpfcnvrt@cp 0057  
                                                        vfpfcnvrt@fp 0043  
                                                        vfpfcnvrt@ll 005F  
                                                     __end_of___wmul 38CE  
                                                        vfpfcnvrt@vp 0067  
                                             __end_of_set_duty_cycle 3916  
                                          __end_of_Timer0_StartTimer 39B0  
                                                     __end_of_strlen 38A4  
                                                start_initialization 3716  
                                                    ___lodiv@divisor 0009  
                                                    ___lodiv@counter 0019  
                                                        __end_of_abs 37CA  
                                                        __end_of_pad 337A  
                                                 set_duty_cycle@mask 0003  
                                                        vfprintf@fmt 0074  
                                                           ??___wmul 0005  
                                                        __pdataBANK0 00E5  
                                               __end_of_UARTSendChar 397E  
                                        __end_ofi2_Timer0_StartTimer 39B8  
                                                           ??_strlen 0003  
                                                          ___fladd@a 0005  
                                                          ___fladd@b 0001  
                                                    ?_set_duty_cycle 0001  
                                              set_duty_cycle@lower_2 0001  
                                                          ___flmul@a 0013  
                                                          ___flmul@b 000F  
                                                        __pbssCOMRAM 007E  
                                                          ___flsub@a 002C  
                                                          ___flsub@b 0028  
                                                      __pcstackBANK0 00BB  
                                              set_duty_cycle@upper_8 0002  
                                                   ___aodiv@dividend 0001  
                                                  __size_of___xxtofl 015C  
                                                      ??_int_to_char 007E  
                                                  __size_of_get_temp 00CA  
                                                          _atoi$1790 0010  
                                                          _atoi$1791 0014  
                                                          _atoi$1792 0012  
                                                       ?_Timer0_Init 0001  
                                                          _dtoa$1144 002E  
                                                      UARTSendChar@c 0001  
                                                     _initialize_PWM 3916  
                                                          __pintcode 0008  
                                                           ?___aodiv 0001  
                                                           ?___fladd 0001  
                                                           ?___aomod 0001  
                                                   ___aodiv@quotient 0013  
                                                           ?___flmul 000F  
                                                           ?___flsub 0028  
                                                           ?___fltol 003E  
                                                           ?___lodiv 0001  
                                                           ?___lomod 0001  
                                                get_temp@adc_voltage 003C  
                                                  __size_of_vfprintf 0060  
                                                           ?_getchar 0001  
                                                    ___lomod@divisor 0009  
                                                        __smallconst 0600  
                                                    ___lomod@counter 0011  
                                         __size_of_Timer0_StartTimer 0008  
                                                           ?_isalpha 0001  
                                                           ?_isdigit 0001  
                                                           _ADC_Init 3990  
                                                           _ADC_Read 3566  
                                                           ?_islower 0001  
                                                           ?_isspace 0001  
                                                           ?_isupper 0001  
                                                     __size_of_fgetc 008A  
                                                     __size_of_getch 000A  
                                                           ?_sprintf 00BB  
                                                     __size_of_fputc 00AC  
                                                     __size_of_fputs 0042  
                                                           ?_strncmp 0001  
                                                           ?_toupper 0007  
                                                     __size_of_putch 0006  
                                                      ??_UARTNewLine 0002  
                                                     ___wmul@product 0005  
                                                    UARTSendString@c 00DB  
                                                    UARTSendString@i 00DD  
                                             __end_of_initialize_PWM 392E  
                                                __end_of_int_to_char 364C  
                                                           _GO_nDONE 007E12  
                                                           _RCONbits 000FD0  
                                                          _time_ms_2 0085  
                                                          _timingISR 0008  
                                                          _vfpfcnvrt 064C  
                                                          _xtoa$1180 002F  
                                                          _xtoa$1181 0031  
                                                  ___wmul@multiplier 0001  
                                                       _isspace$1827 0007  
                                                         vfpfcnvrt@c 0069  
                                                        _INTCON2bits 000FF1  
                                                          copy_data0 372A  
                                                   ??_UARTSendString 007E  
                                                    ?_initialize_PWM 0001  
                                                           __Hrparam 0000  
                                              __size_of_UARTSendChar 0014  
                                                         vfprintf@ap 0076  
                                                           __Lrparam 0000  
                                                         vfprintf@fp 0072  
                                                __end_of_UARTNewLine 396A  
                                                         ?_timingISR 0001  
                                                   __size_of___aodiv 015C  
                                                   __size_of___fladd 0344  
                                                   __size_of___aomod 0138  
                                                   __size_of___flmul 0382  
                                                   __size_of___flsub 004A  
                                                   __size_of___fltol 00D4  
                                                   __size_of___lodiv 00DC  
                                                   __size_of___lomod 00BC  
                                                         ?_vfpfcnvrt 0043  
                                                    ___aodiv@divisor 0009  
                                                    ___aodiv@counter 0011  
                                                   __size_of_getchar 0012  
                                                         sprintf@fmt 00BD  
                                                           ___xxtofl 2992  
                                                   __size_of_isalpha 003C  
                                                   __size_of_isdigit 0038  
                                                   __size_of_islower 0038  
                                                   __size_of_isspace 0044  
                                                           __ptext10 3752  
                                                           __ptext11 2374  
                                                           __ptext20 2836  
                                                           __ptext12 3168  
                                                           __ptext21 3510  
                                                           __ptext13 2D6A  
                                                           __ptext30 38A4  
                                                           __ptext22 32D0  
                                                           __ptext14 30A6  
                                                           __ptext31 397E  
                                                           __ptext23 3872  
                                                           __ptext15 2AEE  
                                                           __ptext40 1B6E  
                                                           __ptext32 337A  
                                                           __ptext24 36D4  
                                                           __ptext16 2536  
                                                           __ptext41 17EC  
                                                           __ptext33 399E  
                                                           __ptext25 3224  
                                                           __ptext17 1EB2  
                                                           __ptext42 3566  
                                                           __ptext34 392E  
                                                           __ptext26 39C0  
                                                           __ptext18 378E  
                                                           __ptext51 39B0  
                                                           __ptext43 3990  
                                                           __ptext35 3942  
                                                           __ptext27 26D0  
                                                           __ptext19 2C32  
                                                           __ptext44 2E46  
                                                           __ptext36 3916  
                                                           __ptext28 364C  
                                                           __ptext45 3690  
                                                           __ptext37 2F1A  
                                                           __ptext29 383A  
                                                           __ptext46 3956  
                                                           __ptext38 2992  
                                                           __ptext47 396A  
                                                           __ptext39 35BA  
                                                           __ptext48 39A8  
                                                           __ptext49 38CE  
                                                   __size_of_isupper 0038  
                                                           _get_temp 2F1A  
                                                   __size_of_sprintf 0056  
                                                   __size_of_strncmp 00C2  
                                                   __size_of_toupper 0056  
                                                    _interval_events 0097  
                                                       _UARTSendChar 396A  
                                                        _int_to_char 3604  
                                                      __size_of_atoi 0166  
                                                      __size_of_ctoa 0056  
                                                      __size_of_main 00C2  
                                                      __size_of_dtoa 026A  
                                                      __size_of_otoa 019A  
                                                      __size_of_stoa 0144  
                                                      __size_of_utoa 01C2  
                                                      __size_of_xtoa 0258  
                                              __end_of_initialize_RX 3956  
                                              __end_of_initialize_TX 3942  
                                                          stoa@F1152 00E5  
                                               __size_of_Timer0_Init 0026  
                                                           int$flags 007F  
                                                   ??_set_duty_cycle 0002  
                                                           _ungetbuf 0099  
                                                           _ungetcnt 007E  
                                                           _vfprintf 3404  
                                                           main@temp 00E3  
                                                   ___aomod@dividend 0001  
                                                     _vfpfcnvrt$1195 005B  
                                                     _vfpfcnvrt$1196 005D  
                                                         _INTCONbits 000FF2  
                                                           isalpha@c 0001  
                                                           isdigit@c 0001  
                                                           intlevel2 39C6  
                                                          sprintf@ap 00CB  
                                                           islower@c 0001  
                                                           isspace@c 0001  
                                                        _UARTNewLine 3956  
                                                           isupper@c 0001  
                                                          strncmp@_l 0001  
                                                          strncmp@_r 0003  
                                                        ??_timingISR 0001  
                                                    ___aomod@divisor 0009  
                                                        ??_vfpfcnvrt 0049  
                                                           stoa@nuls 000F  
                                                    ___aomod@counter 0011  
                                                           sprintf@f 00C5  
                                               get_temp@real_voltage 0034  
                                                           sprintf@s 00BB  
                                                           strncmp@l 0008  
                                                           strncmp@n 0005  
                                                           strncmp@r 000A  
                                                           toupper@c 0007  
                                       __size_ofi2_Timer0_StartTimer 0008  
                                                      ___fladd@signs 000D  
                                                       ___aodiv@sign 0012  
                                                       ___fladd@aexp 000E  
                                                       ___fladd@bexp 000F  
                                                       ___aomod@sign 0012  
