

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 20 21:55:11 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67  0000                     
    68                           ; Version 2.05
    69                           ; Generated 20/12/2018 GMT
    70                           ; 
    71                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F452 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103                           	psect	idataBANK0
   104  0039A4                     __pidataBANK0:
   105                           	opt callstack 0
   106                           
   107                           ;initializer for stoa@F1152
   108  0039A4  28                 	db	40
   109  0039A5  6E                 	db	110
   110  0039A6  75                 	db	117
   111  0039A7  6C                 	db	108
   112  0039A8  6C                 	db	108
   113  0039A9  29                 	db	41
   114  0039AA  00                 	db	0
   115  0000                     _ADRESL	set	4035
   116  0000                     _ADRESH	set	4036
   117  0000                     _ADCON0	set	4034
   118  0000                     _SSPBUF	set	4041
   119  0000                     _SSPCON1	set	4038
   120  0000                     _SSPSTATbits	set	4039
   121  0000                     _T0CON	set	4053
   122  0000                     _TMR0L	set	4054
   123  0000                     _TMR0H	set	4055
   124  0000                     _T0CONbits	set	4053
   125  0000                     _ADCON1	set	4033
   126  0000                     _RCREG1	set	4014
   127  0000                     _TXREG	set	4013
   128  0000                     _RCSTAbits	set	4011
   129  0000                     _RCSTA	set	4011
   130  0000                     _SPBRG	set	4015
   131  0000                     _TXSTAbits	set	4012
   132  0000                     _RCONbits	set	4048
   133  0000                     _INTCON2bits	set	4081
   134  0000                     _INTCONbits	set	4082
   135  0000                     _TRISC	set	3988
   136  0000                     _TRISA	set	3986
   137  0000                     _PORTA	set	3968
   138  0000                     _PORTD	set	3971
   139  0000                     _PORTB	set	3969
   140  0000                     _PORTCbits	set	3970
   141  0000                     _TRISCbits	set	3988
   142  0000                     _TRISB	set	3987
   143  0000                     _TRISD	set	3989
   144  0000                     _GO_nDONE	set	32274
   145  0000                     _TMR0IE	set	32661
   146  0000                     _TMR0IF	set	32658
   147  0000                     _RCIF	set	31989
   148                           
   149                           	psect	smallconst
   150  000600                     __psmallconst:
   151                           	opt callstack 0
   152  000600  00                 	db	0
   153  000601                     STR_103:
   154  000601  68                 	db	104	;'h'
   155  000602  68                 	db	104	;'h'
   156  000603  58                 	db	88	;'X'
   157  000604  00                 	db	0
   158  000605                     STR_3:
   159  000605  68                 	db	104	;'h'
   160  000606  68                 	db	104	;'h'
   161  000607  64                 	db	100	;'d'
   162  000608  00                 	db	0
   163  000609                     STR_7:
   164  000609  68                 	db	104	;'h'
   165  00060A  68                 	db	104	;'h'
   166  00060B  69                 	db	105	;'i'
   167  00060C  00                 	db	0
   168  00060D                     STR_59:
   169  00060D  68                 	db	104	;'h'
   170  00060E  68                 	db	104	;'h'
   171  00060F  6E                 	db	110	;'n'
   172  000610  00                 	db	0
   173  000611                     STR_39:
   174  000611  68                 	db	104	;'h'
   175  000612  68                 	db	104	;'h'
   176  000613  6F                 	db	111	;'o'
   177  000614  00                 	db	0
   178  000615                     STR_79:
   179  000615  68                 	db	104	;'h'
   180  000616  68                 	db	104	;'h'
   181  000617  75                 	db	117	;'u'
   182  000618  00                 	db	0
   183  000619                     STR_99:
   184  000619  68                 	db	104	;'h'
   185  00061A  68                 	db	104	;'h'
   186  00061B  78                 	db	120	;'x'
   187  00061C  00                 	db	0
   188  00061D                     STR_1:
   189  00061D  25                 	db	37
   190  00061E  6C                 	db	108	;'l'
   191  00061F  75                 	db	117	;'u'
   192  000620  00                 	db	0
   193  000621                     STR_121:
   194  000621  6C                 	db	108	;'l'
   195  000622  58                 	db	88	;'X'
   196  000623  00                 	db	0
   197  000624                     STR_130:
   198  000624  7A                 	db	122	;'z'
   199  000625  58                 	db	88	;'X'
   200  000626  00                 	db	0
   201  000627                     STR_21:
   202  000627  6C                 	db	108	;'l'
   203  000628  64                 	db	100	;'d'
   204  000629  00                 	db	0
   205  00062A                     STR_30:
   206  00062A  7A                 	db	122	;'z'
   207  00062B  64                 	db	100	;'d'
   208  00062C  00                 	db	0
   209  00062D                     STR_25:
   210  00062D  6C                 	db	108	;'l'
   211  00062E  69                 	db	105	;'i'
   212  00062F  00                 	db	0
   213  000630                     STR_34:
   214  000630  7A                 	db	122	;'z'
   215  000631  69                 	db	105	;'i'
   216  000632  00                 	db	0
   217  000633                     STR_69:
   218  000633  6C                 	db	108	;'l'
   219  000634  6E                 	db	110	;'n'
   220  000635  00                 	db	0
   221  000636                     STR_74:
   222  000636  7A                 	db	122	;'z'
   223  000637  6E                 	db	110	;'n'
   224  000638  00                 	db	0
   225  000639                     STR_49:
   226  000639  6C                 	db	108	;'l'
   227  00063A  6F                 	db	111	;'o'
   228  00063B  00                 	db	0
   229  00063C                     STR_54:
   230  00063C  7A                 	db	122	;'z'
   231  00063D  6F                 	db	111	;'o'
   232  00063E  00                 	db	0
   233  00063F                     STR_94:
   234  00063F  7A                 	db	122	;'z'
   235  000640  75                 	db	117	;'u'
   236  000641  00                 	db	0
   237  000642                     STR_117:
   238  000642  6C                 	db	108	;'l'
   239  000643  78                 	db	120	;'x'
   240  000644  00                 	db	0
   241  000645                     STR_126:
   242  000645  7A                 	db	122	;'z'
   243  000646  78                 	db	120	;'x'
   244  000647  00                 	db	0
   245  000648  25                 	db	37
   246  000649  64                 	db	100	;'d'
   247  00064A  00                 	db	0
   248  0000                     
   249                           ; #config settings
   250  00064B  00                 	db	0	; dummy byte at the end
   251  0000                     
   252                           	psect	cinit
   253  00373C                     __pcinit:
   254                           	opt callstack 0
   255  00373C                     start_initialization:
   256                           	opt callstack 0
   257  00373C                     __initialization:
   258                           	opt callstack 0
   259                           
   260                           ; Initialize objects allocated to BANK0 (7 bytes)
   261                           ; load TBLPTR registers with __pidataBANK0
   262  00373C  0EA4               	movlw	low __pidataBANK0
   263  00373E  6EF6               	movwf	tblptrl,c
   264  003740  0E39               	movlw	high __pidataBANK0
   265  003742  6EF7               	movwf	tblptrh,c
   266  003744  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   267  003746  6EF8               	movwf	tblptru,c
   268  003748  EE00  F0E1         	lfsr	0,__pdataBANK0
   269  00374C  EE10 F007          	lfsr	1,7
   270  003750                     copy_data0:
   271  003750  0009               	tblrd		*+
   272  003752  CFF5 FFEE          	movff	tablat,postinc0
   273  003756  50E5               	movf	postdec1,w,c
   274  003758  50E1               	movf	fsr1l,w,c
   275  00375A  E1FA               	bnz	copy_data0
   276                           
   277                           ; Clear objects allocated to BANK0 (55 bytes)
   278  00375C  EE00  F080         	lfsr	0,__pbssBANK0
   279  003760  0E37               	movlw	55
   280  003762                     clear_0:
   281  003762  6AEE               	clrf	postinc0,c
   282  003764  06E8               	decf	wreg,f,c
   283  003766  E1FD               	bnz	clear_0
   284                           
   285                           ; Clear objects allocated to COMRAM (1 bytes)
   286  003768  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   287  00376A                     end_of_initialization:
   288                           	opt callstack 0
   289  00376A                     __end_of__initialization:
   290                           	opt callstack 0
   291  00376A  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   292  00376C  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   293  00376E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   294  003770  6EF8               	movwf	tblptru,c
   295  003772  0100               	movlb	0
   296  003774  EF5C  F019         	goto	_main	;jump to C main() function
   297                           
   298                           	psect	bssCOMRAM
   299  00007E                     __pbssCOMRAM:
   300                           	opt callstack 0
   301  00007E                     _ungetcnt:
   302                           	opt callstack 0
   303  00007E                     	ds	1
   304                           
   305                           	psect	bssBANK0
   306  000080                     __pbssBANK0:
   307                           	opt callstack 0
   308  000080                     _lcd:
   309                           	opt callstack 0
   310  000080                     	ds	5
   311  000085                     _time_ms:
   312                           	opt callstack 0
   313  000085                     	ds	4
   314  000089                     _errno:
   315                           	opt callstack 0
   316  000089                     	ds	2
   317  00008B                     _nout:
   318                           	opt callstack 0
   319  00008B                     	ds	2
   320  00008D                     _width:
   321                           	opt callstack 0
   322  00008D                     	ds	2
   323  00008F                     _prec:
   324                           	opt callstack 0
   325  00008F                     	ds	2
   326  000091                     _flags:
   327                           	opt callstack 0
   328  000091                     	ds	2
   329  000093                     _interval_events:
   330                           	opt callstack 0
   331  000093                     	ds	2
   332  000095                     	ds	1
   333  000096                     _flag:
   334                           	opt callstack 0
   335  000096                     	ds	1
   336  000097                     _dbuf:
   337                           	opt callstack 0
   338  000097                     	ds	32
   339                           
   340                           	psect	dataBANK0
   341  0000E1                     __pdataBANK0:
   342                           	opt callstack 0
   343  0000E1                     stoa@F1152:
   344                           	opt callstack 0
   345  0000E1                     	ds	7
   346                           
   347                           	psect	cstackBANK0
   348  0000B7                     __pcstackBANK0:
   349                           	opt callstack 0
   350  0000B7                     ?_sprintf:
   351                           	opt callstack 0
   352  0000B7                     sprintf@s:
   353                           	opt callstack 0
   354                           
   355                           ; 2 bytes @ 0x0
   356  0000B7                     	ds	2
   357  0000B9                     sprintf@fmt:
   358                           	opt callstack 0
   359                           
   360                           ; 2 bytes @ 0x2
   361  0000B9                     	ds	8
   362  0000C1                     sprintf@f:
   363                           	opt callstack 0
   364                           
   365                           ; 6 bytes @ 0xA
   366  0000C1                     	ds	6
   367  0000C7                     sprintf@ap:
   368                           	opt callstack 0
   369                           
   370                           ; 2 bytes @ 0x10
   371  0000C7                     	ds	2
   372  0000C9                     int_to_char@result:
   373                           	opt callstack 0
   374                           
   375                           ; 10 bytes @ 0x12
   376  0000C9                     	ds	10
   377  0000D3                     int_to_char@the_num:
   378                           	opt callstack 0
   379                           
   380                           ; 4 bytes @ 0x1C
   381  0000D3                     	ds	4
   382  0000D7                     UARTSendString@c:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0x20
   386  0000D7                     	ds	2
   387  0000D9                     UARTSendString@i:
   388                           	opt callstack 0
   389                           
   390                           ; 2 bytes @ 0x22
   391  0000D9                     	ds	2
   392  0000DB                     ??_main:
   393                           
   394                           ; 1 bytes @ 0x24
   395  0000DB                     	ds	2
   396  0000DD                     main@address:
   397                           	opt callstack 0
   398                           
   399                           ; 2 bytes @ 0x26
   400  0000DD                     	ds	2
   401  0000DF                     main@temp:
   402                           	opt callstack 0
   403                           
   404                           ; 2 bytes @ 0x28
   405  0000DF                     	ds	2
   406                           
   407                           	psect	cstackCOMRAM
   408  000001                     __pcstackCOMRAM:
   409                           	opt callstack 0
   410  000001                     ?_ADC_Read:
   411                           	opt callstack 0
   412  000001                     ?_strlen:
   413                           	opt callstack 0
   414  000001                     ?_isupper:
   415                           	opt callstack 0
   416  000001                     ?_isalpha:
   417                           	opt callstack 0
   418  000001                     ?_isdigit:
   419                           	opt callstack 0
   420  000001                     ?_strncmp:
   421                           	opt callstack 0
   422  000001                     ?_isspace:
   423                           	opt callstack 0
   424  000001                     ?_getch:
   425                           	opt callstack 0
   426  000001                     ?_islower:
   427                           	opt callstack 0
   428  000001                     ?___wmul:
   429                           	opt callstack 0
   430  000001                     ?___fladd:
   431                           	opt callstack 0
   432  000001                     ?___xxtofl:
   433                           	opt callstack 0
   434  000001                     ?___aodiv:
   435                           	opt callstack 0
   436  000001                     ?___aomod:
   437                           	opt callstack 0
   438  000001                     ?___lodiv:
   439                           	opt callstack 0
   440  000001                     ?___lomod:
   441                           	opt callstack 0
   442  000001                     write_op@data:
   443                           	opt callstack 0
   444  000001                     UARTSendChar@c:
   445                           	opt callstack 0
   446  000001                     ___wmul@multiplier:
   447                           	opt callstack 0
   448  000001                     isalpha@c:
   449                           	opt callstack 0
   450  000001                     isdigit@c:
   451                           	opt callstack 0
   452  000001                     isspace@c:
   453                           	opt callstack 0
   454  000001                     isupper@c:
   455                           	opt callstack 0
   456  000001                     fputc@c:
   457                           	opt callstack 0
   458  000001                     strlen@s:
   459                           	opt callstack 0
   460  000001                     strncmp@_l:
   461                           	opt callstack 0
   462  000001                     islower@c:
   463                           	opt callstack 0
   464  000001                     ___fladd@b:
   465                           	opt callstack 0
   466  000001                     ___xxtofl@val:
   467                           	opt callstack 0
   468  000001                     ___aodiv@dividend:
   469                           	opt callstack 0
   470  000001                     ___aomod@dividend:
   471                           	opt callstack 0
   472  000001                     ___lodiv@dividend:
   473                           	opt callstack 0
   474  000001                     ___lomod@dividend:
   475                           	opt callstack 0
   476                           
   477                           ; 8 bytes @ 0x0
   478  000001                     	ds	1
   479  000002                     ??_write_op:
   480                           
   481                           ; 1 bytes @ 0x1
   482  000002                     	ds	1
   483  000003                     ??_ADC_Read:
   484  000003                     ??_isupper:
   485  000003                     ??_isalpha:
   486  000003                     ??_isdigit:
   487  000003                     ??_isspace:
   488  000003                     ??_islower:
   489  000003                     ?_fgetc:
   490                           	opt callstack 0
   491  000003                     write_op@address:
   492                           	opt callstack 0
   493  000003                     ___wmul@multiplicand:
   494                           	opt callstack 0
   495  000003                     fputc@fp:
   496                           	opt callstack 0
   497  000003                     fgetc@fp:
   498                           	opt callstack 0
   499  000003                     strlen@a:
   500                           	opt callstack 0
   501  000003                     strncmp@_r:
   502                           	opt callstack 0
   503                           
   504                           ; 2 bytes @ 0x2
   505  000003                     	ds	2
   506  000005                     ??_fputc:
   507  000005                     ??_fgetc:
   508  000005                     ??___xxtofl:
   509  000005                     ADC_Read@channel:
   510                           	opt callstack 0
   511  000005                     ___wmul@product:
   512                           	opt callstack 0
   513  000005                     strncmp@n:
   514                           	opt callstack 0
   515  000005                     ___fladd@a:
   516                           	opt callstack 0
   517                           
   518                           ; 4 bytes @ 0x4
   519  000005                     	ds	2
   520  000007                     ??_strncmp:
   521  000007                     ?_toupper:
   522                           	opt callstack 0
   523  000007                     _isspace$1782:
   524                           	opt callstack 0
   525  000007                     toupper@c:
   526                           	opt callstack 0
   527                           
   528                           ; 2 bytes @ 0x6
   529  000007                     	ds	1
   530  000008                     ?_atoi:
   531                           	opt callstack 0
   532  000008                     atoi@s:
   533                           	opt callstack 0
   534  000008                     strncmp@l:
   535                           	opt callstack 0
   536                           
   537                           ; 2 bytes @ 0x7
   538  000008                     	ds	1
   539  000009                     ??_toupper:
   540  000009                     ??___fladd:
   541  000009                     ___xxtofl@sign:
   542                           	opt callstack 0
   543  000009                     ___aodiv@divisor:
   544                           	opt callstack 0
   545  000009                     ___aomod@divisor:
   546                           	opt callstack 0
   547  000009                     ___lodiv@divisor:
   548                           	opt callstack 0
   549  000009                     ___lomod@divisor:
   550                           	opt callstack 0
   551                           
   552                           ; 8 bytes @ 0x8
   553  000009                     	ds	1
   554  00000A                     ??_atoi:
   555  00000A                     ?_stoa:
   556                           	opt callstack 0
   557  00000A                     ___xxtofl@exp:
   558                           	opt callstack 0
   559  00000A                     stoa@fp:
   560                           	opt callstack 0
   561  00000A                     fputs@s:
   562                           	opt callstack 0
   563  00000A                     fgetc@c:
   564                           	opt callstack 0
   565  00000A                     strncmp@r:
   566                           	opt callstack 0
   567                           
   568                           ; 2 bytes @ 0x9
   569  00000A                     	ds	1
   570  00000B                     ___xxtofl@arg:
   571                           	opt callstack 0
   572                           
   573                           ; 4 bytes @ 0xA
   574  00000B                     	ds	1
   575  00000C                     stoa@s:
   576                           	opt callstack 0
   577  00000C                     fputs@fp:
   578                           	opt callstack 0
   579                           
   580                           ; 2 bytes @ 0xB
   581  00000C                     	ds	1
   582  00000D                     ___fladd@signs:
   583                           	opt callstack 0
   584  00000D                     _toupper$1902:
   585                           	opt callstack 0
   586                           
   587                           ; 2 bytes @ 0xC
   588  00000D                     	ds	1
   589  00000E                     ??_stoa:
   590  00000E                     ___fladd@aexp:
   591                           	opt callstack 0
   592  00000E                     fputs@c:
   593                           	opt callstack 0
   594  00000E                     atoi@neg:
   595                           	opt callstack 0
   596                           
   597                           ; 2 bytes @ 0xD
   598  00000E                     	ds	1
   599  00000F                     ?___flmul:
   600                           	opt callstack 0
   601  00000F                     ___fladd@bexp:
   602                           	opt callstack 0
   603  00000F                     fputs@i:
   604                           	opt callstack 0
   605  00000F                     ___flmul@b:
   606                           	opt callstack 0
   607  00000F                     stoa@nuls:
   608                           	opt callstack 0
   609                           
   610                           ; 7 bytes @ 0xE
   611  00000F                     	ds	1
   612  000010                     ___fladd@grs:
   613                           	opt callstack 0
   614  000010                     _atoi$1745:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0xF
   618  000010                     	ds	1
   619  000011                     ?_pad:
   620                           	opt callstack 0
   621  000011                     ___aodiv@counter:
   622                           	opt callstack 0
   623  000011                     ___aomod@counter:
   624                           	opt callstack 0
   625  000011                     ___lomod@counter:
   626                           	opt callstack 0
   627  000011                     pad@fp:
   628                           	opt callstack 0
   629  000011                     ___lodiv@quotient:
   630                           	opt callstack 0
   631                           
   632                           ; 8 bytes @ 0x10
   633  000011                     	ds	1
   634  000012                     ___aodiv@sign:
   635                           	opt callstack 0
   636  000012                     ___aomod@sign:
   637                           	opt callstack 0
   638  000012                     _atoi$1747:
   639                           	opt callstack 0
   640                           
   641                           ; 2 bytes @ 0x11
   642  000012                     	ds	1
   643  000013                     ?_abs:
   644                           	opt callstack 0
   645  000013                     pad@buf:
   646                           	opt callstack 0
   647  000013                     abs@a:
   648                           	opt callstack 0
   649  000013                     ___flmul@a:
   650                           	opt callstack 0
   651  000013                     ___aodiv@quotient:
   652                           	opt callstack 0
   653                           
   654                           ; 8 bytes @ 0x12
   655  000013                     	ds	1
   656  000014                     _atoi$1746:
   657                           	opt callstack 0
   658                           
   659                           ; 1 bytes @ 0x13
   660  000014                     	ds	1
   661  000015                     ??_abs:
   662  000015                     pad@p:
   663                           	opt callstack 0
   664  000015                     atoi@n:
   665                           	opt callstack 0
   666                           
   667                           ; 2 bytes @ 0x14
   668  000015                     	ds	1
   669  000016                     stoa@i:
   670                           	opt callstack 0
   671                           
   672                           ; 2 bytes @ 0x15
   673  000016                     	ds	1
   674  000017                     ??___flmul:
   675  000017                     ??_pad:
   676                           
   677                           ; 1 bytes @ 0x16
   678  000017                     	ds	1
   679  000018                     pad@i:
   680                           	opt callstack 0
   681  000018                     stoa@w:
   682                           	opt callstack 0
   683                           
   684                           ; 2 bytes @ 0x17
   685  000018                     	ds	1
   686  000019                     ___lodiv@counter:
   687                           	opt callstack 0
   688                           
   689                           ; 1 bytes @ 0x18
   690  000019                     	ds	1
   691  00001A                     pad@w:
   692                           	opt callstack 0
   693  00001A                     stoa@cp:
   694                           	opt callstack 0
   695                           
   696                           ; 2 bytes @ 0x19
   697  00001A                     	ds	1
   698  00001B                     ___flmul@sign:
   699                           	opt callstack 0
   700                           
   701                           ; 1 bytes @ 0x1A
   702  00001B                     	ds	1
   703  00001C                     ?_ctoa:
   704                           	opt callstack 0
   705  00001C                     ?_dtoa:
   706                           	opt callstack 0
   707  00001C                     ?_otoa:
   708                           	opt callstack 0
   709  00001C                     ?_utoa:
   710                           	opt callstack 0
   711  00001C                     ?_xtoa:
   712                           	opt callstack 0
   713  00001C                     ctoa@fp:
   714                           	opt callstack 0
   715  00001C                     dtoa@fp:
   716                           	opt callstack 0
   717  00001C                     otoa@fp:
   718                           	opt callstack 0
   719  00001C                     stoa@p:
   720                           	opt callstack 0
   721  00001C                     utoa@fp:
   722                           	opt callstack 0
   723  00001C                     xtoa@fp:
   724                           	opt callstack 0
   725  00001C                     ___flmul@grs:
   726                           	opt callstack 0
   727                           
   728                           ; 4 bytes @ 0x1B
   729  00001C                     	ds	2
   730  00001E                     ctoa@c:
   731                           	opt callstack 0
   732  00001E                     stoa@l:
   733                           	opt callstack 0
   734  00001E                     dtoa@d:
   735                           	opt callstack 0
   736  00001E                     otoa@d:
   737                           	opt callstack 0
   738  00001E                     utoa@d:
   739                           	opt callstack 0
   740  00001E                     xtoa@d:
   741                           	opt callstack 0
   742                           
   743                           ; 8 bytes @ 0x1D
   744  00001E                     	ds	1
   745  00001F                     ctoa@w:
   746                           	opt callstack 0
   747                           
   748                           ; 2 bytes @ 0x1E
   749  00001F                     	ds	1
   750  000020                     ___flmul@aexp:
   751                           	opt callstack 0
   752                           
   753                           ; 1 bytes @ 0x1F
   754  000020                     	ds	1
   755  000021                     ___flmul@bexp:
   756                           	opt callstack 0
   757                           
   758                           ; 1 bytes @ 0x20
   759  000021                     	ds	1
   760  000022                     ___flmul@prod:
   761                           	opt callstack 0
   762                           
   763                           ; 4 bytes @ 0x21
   764  000022                     	ds	4
   765  000026                     ??_dtoa:
   766  000026                     ??_otoa:
   767  000026                     ??_utoa:
   768  000026                     xtoa@x:
   769                           	opt callstack 0
   770  000026                     ___flmul@temp:
   771                           	opt callstack 0
   772                           
   773                           ; 2 bytes @ 0x25
   774  000026                     	ds	1
   775  000027                     ??_xtoa:
   776                           
   777                           ; 1 bytes @ 0x26
   778  000027                     	ds	1
   779  000028                     ?___flsub:
   780                           	opt callstack 0
   781  000028                     ___flsub@b:
   782                           	opt callstack 0
   783                           
   784                           ; 4 bytes @ 0x27
   785  000028                     	ds	4
   786  00002C                     ___flsub@a:
   787                           	opt callstack 0
   788                           
   789                           ; 4 bytes @ 0x2B
   790  00002C                     	ds	2
   791  00002E                     _dtoa$1099:
   792                           	opt callstack 0
   793  00002E                     otoa@p:
   794                           	opt callstack 0
   795  00002E                     utoa@p:
   796                           	opt callstack 0
   797                           
   798                           ; 2 bytes @ 0x2D
   799  00002E                     	ds	1
   800  00002F                     _xtoa$1135:
   801                           	opt callstack 0
   802                           
   803                           ; 2 bytes @ 0x2E
   804  00002F                     	ds	1
   805  000030                     ?_get_temp:
   806                           	opt callstack 0
   807  000030                     dtoa@p:
   808                           	opt callstack 0
   809  000030                     otoa@t:
   810                           	opt callstack 0
   811  000030                     utoa@w:
   812                           	opt callstack 0
   813                           
   814                           ; 2 bytes @ 0x2F
   815  000030                     	ds	1
   816  000031                     _xtoa$1136:
   817                           	opt callstack 0
   818                           
   819                           ; 2 bytes @ 0x30
   820  000031                     	ds	1
   821  000032                     dtoa@w:
   822                           	opt callstack 0
   823  000032                     otoa@w:
   824                           	opt callstack 0
   825  000032                     utoa@n:
   826                           	opt callstack 0
   827                           
   828                           ; 8 bytes @ 0x31
   829  000032                     	ds	1
   830  000033                     xtoa@p:
   831                           	opt callstack 0
   832                           
   833                           ; 2 bytes @ 0x32
   834  000033                     	ds	1
   835  000034                     dtoa@s:
   836                           	opt callstack 0
   837  000034                     get_temp@real_voltage:
   838                           	opt callstack 0
   839  000034                     otoa@n:
   840                           	opt callstack 0
   841                           
   842                           ; 8 bytes @ 0x33
   843  000034                     	ds	1
   844  000035                     xtoa@w:
   845                           	opt callstack 0
   846                           
   847                           ; 2 bytes @ 0x34
   848  000035                     	ds	1
   849  000036                     dtoa@n:
   850                           	opt callstack 0
   851                           
   852                           ; 8 bytes @ 0x35
   853  000036                     	ds	1
   854  000037                     xtoa@n:
   855                           	opt callstack 0
   856                           
   857                           ; 8 bytes @ 0x36
   858  000037                     	ds	1
   859  000038                     get_temp@temp:
   860                           	opt callstack 0
   861                           
   862                           ; 4 bytes @ 0x37
   863  000038                     	ds	2
   864  00003A                     utoa@i:
   865                           	opt callstack 0
   866                           
   867                           ; 2 bytes @ 0x39
   868  00003A                     	ds	2
   869  00003C                     get_temp@adc_voltage:
   870                           	opt callstack 0
   871  00003C                     otoa@i:
   872                           	opt callstack 0
   873                           
   874                           ; 2 bytes @ 0x3B
   875  00003C                     	ds	2
   876  00003E                     ?___fltol:
   877                           	opt callstack 0
   878  00003E                     dtoa@i:
   879                           	opt callstack 0
   880  00003E                     ___fltol@f1:
   881                           	opt callstack 0
   882                           
   883                           ; 4 bytes @ 0x3D
   884  00003E                     	ds	1
   885  00003F                     xtoa@i:
   886                           	opt callstack 0
   887                           
   888                           ; 2 bytes @ 0x3E
   889  00003F                     	ds	2
   890  000041                     xtoa@c:
   891                           	opt callstack 0
   892                           
   893                           ; 2 bytes @ 0x40
   894  000041                     	ds	1
   895  000042                     ??___fltol:
   896                           
   897                           ; 1 bytes @ 0x41
   898  000042                     	ds	1
   899  000043                     ?_vfpfcnvrt:
   900                           	opt callstack 0
   901  000043                     vfpfcnvrt@fp:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0x42
   905  000043                     	ds	2
   906  000045                     vfpfcnvrt@fmt:
   907                           	opt callstack 0
   908                           
   909                           ; 2 bytes @ 0x44
   910  000045                     	ds	1
   911  000046                     ___fltol@sign1:
   912                           	opt callstack 0
   913                           
   914                           ; 1 bytes @ 0x45
   915  000046                     	ds	1
   916  000047                     ___fltol@exp1:
   917                           	opt callstack 0
   918  000047                     vfpfcnvrt@ap:
   919                           	opt callstack 0
   920                           
   921                           ; 2 bytes @ 0x46
   922  000047                     	ds	2
   923  000049                     ??_vfpfcnvrt:
   924                           
   925                           ; 1 bytes @ 0x48
   926  000049                     	ds	14
   927  000057                     vfpfcnvrt@cp:
   928                           	opt callstack 0
   929                           
   930                           ; 2 bytes @ 0x56
   931  000057                     	ds	2
   932  000059                     vfpfcnvrt@done:
   933                           	opt callstack 0
   934                           
   935                           ; 2 bytes @ 0x58
   936  000059                     	ds	2
   937  00005B                     _vfpfcnvrt$1150:
   938                           	opt callstack 0
   939                           
   940                           ; 2 bytes @ 0x5A
   941  00005B                     	ds	2
   942  00005D                     _vfpfcnvrt$1151:
   943                           	opt callstack 0
   944                           
   945                           ; 2 bytes @ 0x5C
   946  00005D                     	ds	2
   947  00005F                     vfpfcnvrt@ll:
   948                           	opt callstack 0
   949                           
   950                           ; 8 bytes @ 0x5E
   951  00005F                     	ds	8
   952  000067                     vfpfcnvrt@vp:
   953                           	opt callstack 0
   954                           
   955                           ; 2 bytes @ 0x66
   956  000067                     	ds	2
   957  000069                     vfpfcnvrt@c:
   958                           	opt callstack 0
   959                           
   960                           ; 1 bytes @ 0x68
   961  000069                     	ds	1
   962  00006A                     vfpfcnvrt@llu:
   963                           	opt callstack 0
   964                           
   965                           ; 8 bytes @ 0x69
   966  00006A                     	ds	8
   967  000072                     ?_vfprintf:
   968                           	opt callstack 0
   969  000072                     vfprintf@fp:
   970                           	opt callstack 0
   971                           
   972                           ; 2 bytes @ 0x71
   973  000072                     	ds	2
   974  000074                     vfprintf@fmt:
   975                           	opt callstack 0
   976                           
   977                           ; 2 bytes @ 0x73
   978  000074                     	ds	2
   979  000076                     vfprintf@ap:
   980                           	opt callstack 0
   981                           
   982                           ; 2 bytes @ 0x75
   983  000076                     	ds	2
   984  000078                     vfprintf@cfmt:
   985                           	opt callstack 0
   986                           
   987                           ; 2 bytes @ 0x77
   988  000078                     	ds	2
   989  00007A                     ?_int_to_char:
   990                           	opt callstack 0
   991  00007A                     int_to_char@num:
   992                           	opt callstack 0
   993                           
   994                           ; 4 bytes @ 0x79
   995  00007A                     	ds	4
   996  00007E                     
   997                           ; 1 bytes @ 0x7D
   998 ;;
   999 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1000 ;;
  1001 ;; *************** function _main *****************
  1002 ;; Defined at:
  1003 ;;		line 28 in file "main.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  temp            2   40[BANK0 ] int 
  1008 ;;  address         2   38[BANK0 ] int 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1018 ;;      Params:         0       0       0       0       0       0       0
  1019 ;;      Locals:         0       4       0       0       0       0       0
  1020 ;;      Temps:          0       2       0       0       0       0       0
  1021 ;;      Totals:         0       6       0       0       0       0       0
  1022 ;;Total ram usage:        6 bytes
  1023 ;; Hardware stack levels required when called:   11
  1024 ;; This function calls:
  1025 ;;		_Timer0_Init
  1026 ;;		_Timer0_StartTimer
  1027 ;;		_UARTNewLine
  1028 ;;		_UARTSendString
  1029 ;;		___fltol
  1030 ;;		_get_temp
  1031 ;;		_initialize_RX
  1032 ;;		_initialize_TX
  1033 ;;		_int_to_char
  1034 ;;		_write_op
  1035 ;; This function is called by:
  1036 ;;		Startup code after reset
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text0
  1041  0032B8                     __ptext0:
  1042                           	opt callstack 0
  1043  0032B8                     _main:
  1044                           	opt callstack 0
  1045  0032B8  FFFF               	dw	65535	; assembler added errata NOP
  1046                           
  1047                           ;incstack = 0
  1048  0032BA  0E00               	movlw	0
  1049  0032BC  0100               	movlb	0	; () banked
  1050  0032BE  6FDE               	movwf	(main@address+1)& (0+255),b
  1051  0032C0  0E00               	movlw	0
  1052  0032C2  6FDD               	movwf	main@address& (0+255),b
  1053                           
  1054                           ; BSR set to: 0
  1055  0032C4  EC7A  F01C         	call	_Timer0_Init	;wreg free
  1056  0032C8  ECCA  F01C         	call	_Timer0_StartTimer	;wreg free
  1057  0032CC  EC8D  F01C         	call	_initialize_TX	;wreg free
  1058  0032D0  EC97  F01C         	call	_initialize_RX	;wreg free
  1059  0032D4  8E94               	bsf	3988,7,c	;volatile
  1060  0032D6  9C94               	bcf	3988,6,c	;volatile
  1061  0032D8  EC8D  F017         	call	_get_temp	;wreg free
  1062  0032DC  C030  F03E         	movff	?_get_temp,___fltol@f1
  1063  0032E0  C031  F03F         	movff	?_get_temp+1,___fltol@f1+1
  1064  0032E4  C032  F040         	movff	?_get_temp+2,___fltol@f1+2
  1065  0032E8  C033  F041         	movff	?_get_temp+3,___fltol@f1+3
  1066  0032EC  EC23  F017         	call	___fltol	;wreg free
  1067  0032F0  C03E  F0DF         	movff	?___fltol,main@temp
  1068  0032F4  C03F  F0E0         	movff	?___fltol+1,main@temp+1
  1069  0032F8  C0DF  F001         	movff	main@temp,write_op@data
  1070  0032FC  0E00               	movlw	0
  1071  0032FE  ECC9  F01A         	call	_write_op
  1072  003302  0100               	movlb	0	; () banked
  1073  003304  4BDD               	infsnz	main@address& (0+255),f,b
  1074  003306  2BDE               	incf	(main@address+1)& (0+255),f,b
  1075                           
  1076                           ; BSR set to: 0
  1077  003308  9E94               	bcf	3988,7,c	;volatile
  1078                           
  1079                           ; BSR set to: 0
  1080  00330A  C0DF  F07A         	movff	main@temp,int_to_char@num
  1081  00330E  C0E0  F07B         	movff	main@temp+1,int_to_char@num+1
  1082  003312  0E00               	movlw	0
  1083  003314  BE7B               	btfsc	int_to_char@num+1,7,c
  1084  003316  0EFF               	movlw	-1
  1085  003318  6E7C               	movwf	int_to_char@num+2,c
  1086  00331A  6E7D               	movwf	int_to_char@num+3,c
  1087  00331C  EC15  F01B         	call	_int_to_char	;wreg free
  1088  003320  C07A  F0D7         	movff	?_int_to_char,UARTSendString@c
  1089  003324  C07B  F0D8         	movff	?_int_to_char+1,UARTSendString@c+1
  1090  003328  EC5B  F01B         	call	_UARTSendString	;wreg free
  1091  00332C  ECA1  F01C         	call	_UARTNewLine	;wreg free
  1092  003330  0E0C               	movlw	12
  1093  003332  0100               	movlb	0	; () banked
  1094  003334  6FDC               	movwf	(??_main+1)& (0+255),b
  1095  003336  0E6C               	movlw	108
  1096  003338  6FDB               	movwf	??_main& (0+255),b
  1097  00333A  0EF2               	movlw	242
  1098  00333C                     u5277:
  1099  00333C  FFFF               	dw	65535	; errata NOP
  1100  00333E  2EE8               	decfsz	wreg,f,c
  1101  003340  D7FD               	bra	u5277
  1102  003342  2FDB               	decfsz	??_main& (0+255),f,b
  1103  003344  D7FB               	bra	u5277
  1104  003346  2FDC               	decfsz	(??_main+1)& (0+255),f,b
  1105  003348  D7F9               	bra	u5277
  1106  00334A  D000               	nop2	
  1107  00334C  F000               	nop	
  1108  00334E  EF1A  F000         	goto	start
  1109  003352                     __end_of_main:
  1110                           	opt callstack 0
  1111                           
  1112 ;; *************** function _write_op *****************
  1113 ;; Defined at:
  1114 ;;		line 13 in file "drive_memory.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  address         1    wreg     unsigned char 
  1117 ;;  data            1    0[COMRAM] unsigned char 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  address         1    2[COMRAM] unsigned char 
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      void 
  1122 ;; Registers used:
  1123 ;;		wreg, status,2, status,0, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1129 ;;      Params:         1       0       0       0       0       0       0
  1130 ;;      Locals:         1       0       0       0       0       0       0
  1131 ;;      Temps:          1       0       0       0       0       0       0
  1132 ;;      Totals:         3       0       0       0       0       0       0
  1133 ;;Total ram usage:        3 bytes
  1134 ;; Hardware stack levels used:    1
  1135 ;; Hardware stack levels required when called:    2
  1136 ;; This function calls:
  1137 ;;		Nothing
  1138 ;; This function is called by:
  1139 ;;		_main
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text1
  1144  003592                     __ptext1:
  1145                           	opt callstack 0
  1146  003592                     _write_op:
  1147                           	opt callstack 0
  1148  003592  FFFF               	dw	65535	; assembler added errata NOP
  1149                           
  1150                           ;incstack = 0
  1151                           ;write_op@address stored from wreg
  1152  003594  6E03               	movwf	write_op@address,c
  1153                           
  1154                           ;drive_memory.c: 14:   _delay((unsigned long)((10)*(16000000/4000.0)));
  1155  003596  0E27               	movlw	39
  1156  003598  6E02               	movwf	??_write_op& (0+255),c
  1157  00359A  0EFC               	movlw	252
  1158  00359C                     u5287:
  1159  00359C  FFFF               	dw	65535	; errata NOP
  1160  00359E  2EE8               	decfsz	wreg,f,c
  1161  0035A0  D7FD               	bra	u5287
  1162  0035A2  2E02               	decfsz	??_write_op& (0+255),f,c
  1163  0035A4  D7FB               	bra	u5287
  1164                           
  1165                           ;drive_memory.c: 15:   TRISD = 0x00;
  1166  0035A6  0E00               	movlw	0
  1167  0035A8  6E95               	movwf	3989,c	;volatile
  1168                           
  1169                           ;drive_memory.c: 16:   TRISB &= ~(0x3f);
  1170  0035AA  0EC0               	movlw	192
  1171  0035AC  1693               	andwf	3987,f,c	;volatile
  1172                           
  1173                           ;drive_memory.c: 17:   TRISCbits.TRISC1 = 0;
  1174  0035AE  9294               	bcf	3988,1,c	;volatile
  1175                           
  1176                           ;drive_memory.c: 19:   PORTCbits.RC2 = 1;
  1177  0035B0  8482               	bsf	3970,2,c	;volatile
  1178                           
  1179                           ;drive_memory.c: 20:   PORTCbits.RC1 = 0;
  1180  0035B2  9282               	bcf	3970,1,c	;volatile
  1181                           
  1182                           ;drive_memory.c: 21:   PORTB = address;
  1183  0035B4  C003  FF81         	movff	write_op@address,3969	;volatile
  1184                           
  1185                           ;drive_memory.c: 22:   PORTD = data;
  1186  0035B8  C001  FF83         	movff	write_op@data,3971	;volatile
  1187                           
  1188                           ;drive_memory.c: 23:   _delay((unsigned long)((10)*(16000000/4000.0)));
  1189  0035BC  0E27               	movlw	39
  1190  0035BE  6E02               	movwf	??_write_op& (0+255),c
  1191  0035C0  0EFC               	movlw	252
  1192  0035C2                     u5297:
  1193  0035C2  FFFF               	dw	65535	; errata NOP
  1194  0035C4  2EE8               	decfsz	wreg,f,c
  1195  0035C6  D7FD               	bra	u5297
  1196  0035C8  2E02               	decfsz	??_write_op& (0+255),f,c
  1197  0035CA  D7FB               	bra	u5297
  1198                           
  1199                           ;drive_memory.c: 25:   _delay((unsigned long)((10)*(16000000/4000.0)));
  1200  0035CC  0E27               	movlw	39
  1201  0035CE  6E02               	movwf	??_write_op& (0+255),c
  1202  0035D0  0EFC               	movlw	252
  1203  0035D2                     u5307:
  1204  0035D2  FFFF               	dw	65535	; errata NOP
  1205  0035D4  2EE8               	decfsz	wreg,f,c
  1206  0035D6  D7FD               	bra	u5307
  1207  0035D8  2E02               	decfsz	??_write_op& (0+255),f,c
  1208  0035DA  D7FB               	bra	u5307
  1209  0035DC  0012               	return		;funcret
  1210  0035DE  FFFF               	dw	65535	; errata NOP
  1211  0035E0                     __end_of_write_op:
  1212                           	opt callstack 0
  1213                           
  1214 ;; *************** function _int_to_char *****************
  1215 ;; Defined at:
  1216 ;;		line 18 in file "lcd.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  num             4  121[COMRAM] unsigned long 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  result         10   18[BANK0 ] unsigned char [10]
  1221 ;;  the_num         4   28[BANK0 ] unsigned long 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  2  121[COMRAM] PTR unsigned char 
  1224 ;; Registers used:
  1225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1231 ;;      Params:         4       0       0       0       0       0       0
  1232 ;;      Locals:         0      14       0       0       0       0       0
  1233 ;;      Temps:          0       0       0       0       0       0       0
  1234 ;;      Totals:         4      14       0       0       0       0       0
  1235 ;;Total ram usage:       18 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:   10
  1238 ;; This function calls:
  1239 ;;		_getchar
  1240 ;;		_sprintf
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;;		_read_op
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text2
  1248  00362A                     __ptext2:
  1249                           	opt callstack 0
  1250  00362A                     _int_to_char:
  1251                           	opt callstack 0
  1252  00362A  FFFF               	dw	65535	; assembler added errata NOP
  1253                           
  1254                           ;lcd.c: 19:   char result[10];;lcd.c: 20:   unsigned long the_num = num;
  1255                           
  1256                           ;incstack = 0
  1257  00362C  C07A  F0D3         	movff	int_to_char@num,int_to_char@the_num
  1258  003630  C07B  F0D4         	movff	int_to_char@num+1,int_to_char@the_num+1
  1259  003634  C07C  F0D5         	movff	int_to_char@num+2,int_to_char@the_num+2
  1260  003638  C07D  F0D6         	movff	int_to_char@num+3,int_to_char@the_num+3
  1261                           
  1262                           ;lcd.c: 21:   sprintf(result, "%lu", the_num);
  1263  00363C  0EC9               	movlw	low int_to_char@result
  1264  00363E  0100               	movlb	0	; () banked
  1265  003640  6FB7               	movwf	sprintf@s& (0+255),b
  1266  003642  0E00               	movlw	high int_to_char@result
  1267  003644  6FB8               	movwf	(sprintf@s+1)& (0+255),b
  1268  003646  0E1D               	movlw	low STR_1
  1269  003648  6FB9               	movwf	sprintf@fmt& (0+255),b
  1270  00364A  0E06               	movlw	high STR_1
  1271  00364C  6FBA               	movwf	(sprintf@fmt+1)& (0+255),b
  1272  00364E  C0D3  F0BB         	movff	int_to_char@the_num,?_sprintf+4
  1273  003652  C0D4  F0BC         	movff	int_to_char@the_num+1,?_sprintf+5
  1274  003656  C0D5  F0BD         	movff	int_to_char@the_num+2,?_sprintf+6
  1275  00365A  C0D6  F0BE         	movff	int_to_char@the_num+3,?_sprintf+7
  1276  00365E  EC1E  F01A         	call	_sprintf	;wreg free
  1277                           
  1278                           ;lcd.c: 22:   getchar();
  1279  003662  ECB5  F01C         	call	_getchar	;wreg free
  1280                           
  1281                           ;lcd.c: 23:   return result;
  1282  003666  0EC9               	movlw	low int_to_char@result
  1283  003668  6E7A               	movwf	?_int_to_char,c
  1284  00366A  0E00               	movlw	high int_to_char@result
  1285  00366C  6E7B               	movwf	?_int_to_char+1,c
  1286  00366E  0012               	return		;funcret
  1287  003670  FFFF               	dw	65535	; errata NOP
  1288  003672                     __end_of_int_to_char:
  1289                           	opt callstack 0
  1290                           
  1291 ;; *************** function _sprintf *****************
  1292 ;; Defined at:
  1293 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1296 ;;		 -> int_to_char@result(10), 
  1297 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1298 ;;		 -> STR_1(4), 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  f               6   10[BANK0 ] struct _IO_FILE
  1301 ;;  ap              2   16[BANK0 ] PTR void [1]
  1302 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1303 ;;  ret             2    0        int 
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  2    0[BANK0 ] int 
  1306 ;; Registers used:
  1307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1313 ;;      Params:         0       8       0       0       0       0       0
  1314 ;;      Locals:         0      10       0       0       0       0       0
  1315 ;;      Temps:          0       0       0       0       0       0       0
  1316 ;;      Totals:         0      18       0       0       0       0       0
  1317 ;;Total ram usage:       18 bytes
  1318 ;; Hardware stack levels used:    1
  1319 ;; Hardware stack levels required when called:    9
  1320 ;; This function calls:
  1321 ;;		_vfprintf
  1322 ;; This function is called by:
  1323 ;;		_int_to_char
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text3
  1328  00343C                     __ptext3:
  1329                           	opt callstack 0
  1330  00343C                     _sprintf:
  1331                           	opt callstack 0
  1332  00343C  FFFF               	dw	65535	; assembler added errata NOP
  1333                           
  1334                           ;incstack = 0
  1335  00343E  0EBB               	movlw	low (?_sprintf+4)
  1336  003440  0100               	movlb	0	; () banked
  1337  003442  6FC7               	movwf	sprintf@ap& (0+255),b
  1338  003444  0E00               	movlw	high (?_sprintf+4)
  1339  003446  6FC8               	movwf	(sprintf@ap+1)& (0+255),b
  1340  003448  C0B7  F0C1         	movff	sprintf@s,sprintf@f
  1341  00344C  C0B8  F0C2         	movff	sprintf@s+1,sprintf@f+1
  1342                           
  1343                           ; BSR set to: 0
  1344  003450  0E00               	movlw	0
  1345  003452  6FC4               	movwf	(sprintf@f+3)& (0+255),b
  1346  003454  0E00               	movlw	0
  1347  003456  6FC3               	movwf	(sprintf@f+2)& (0+255),b
  1348                           
  1349                           ; BSR set to: 0
  1350  003458  0E00               	movlw	0
  1351  00345A  6FC6               	movwf	(sprintf@f+5)& (0+255),b
  1352  00345C  0E00               	movlw	0
  1353  00345E  6FC5               	movwf	(sprintf@f+4)& (0+255),b
  1354                           
  1355                           ; BSR set to: 0
  1356  003460  0EC1               	movlw	low sprintf@f
  1357  003462  6E72               	movwf	vfprintf@fp,c
  1358  003464  0E00               	movlw	high sprintf@f
  1359  003466  6E73               	movwf	vfprintf@fp+1,c
  1360  003468  C0B9  F074         	movff	sprintf@fmt,vfprintf@fmt
  1361  00346C  C0BA  F075         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1362  003470  0EC7               	movlw	low sprintf@ap
  1363  003472  6E76               	movwf	vfprintf@ap,c
  1364  003474  0E00               	movlw	high sprintf@ap
  1365  003476  6E77               	movwf	vfprintf@ap+1,c
  1366  003478  ECEE  F019         	call	_vfprintf	;wreg free
  1367  00347C  0100               	movlb	0	; () banked
  1368  00347E  51C3               	movf	(sprintf@f+2)& (0+255),w,b
  1369  003480  25B7               	addwf	sprintf@s& (0+255),w,b
  1370  003482  6ED9               	movwf	fsr2l,c
  1371  003484  51C4               	movf	(sprintf@f+3)& (0+255),w,b
  1372  003486  21B8               	addwfc	(sprintf@s+1)& (0+255),w,b
  1373  003488  6EDA               	movwf	fsr2h,c
  1374  00348A  0E00               	movlw	0
  1375  00348C  6EDF               	movwf	indf2,c
  1376                           
  1377                           ; BSR set to: 0
  1378  00348E  0012               	return		;funcret
  1379  003490  FFFF               	dw	65535	; errata NOP
  1380  003492                     __end_of_sprintf:
  1381                           	opt callstack 0
  1382                           
  1383 ;; *************** function _vfprintf *****************
  1384 ;; Defined at:
  1385 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  fp              2  113[COMRAM] PTR struct _IO_FILE
  1388 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  1389 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  1390 ;;		 -> STR_2(3), STR_1(4), 
  1391 ;;  ap              2  117[COMRAM] PTR PTR void 
  1392 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  cfmt            2  119[COMRAM] PTR unsigned char 
  1395 ;;		 -> STR_2(3), STR_1(4), 
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  2  113[COMRAM] int 
  1398 ;; Registers used:
  1399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1405 ;;      Params:         6       0       0       0       0       0       0
  1406 ;;      Locals:         2       0       0       0       0       0       0
  1407 ;;      Temps:          0       0       0       0       0       0       0
  1408 ;;      Totals:         8       0       0       0       0       0       0
  1409 ;;Total ram usage:        8 bytes
  1410 ;; Hardware stack levels used:    1
  1411 ;; Hardware stack levels required when called:    8
  1412 ;; This function calls:
  1413 ;;		_vfpfcnvrt
  1414 ;; This function is called by:
  1415 ;;		_sprintf
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           	psect	text4
  1420  0033DC                     __ptext4:
  1421                           	opt callstack 0
  1422  0033DC                     _vfprintf:
  1423                           	opt callstack 0
  1424  0033DC  FFFF               	dw	65535	; assembler added errata NOP
  1425                           
  1426                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;incstack = 0
  1430  0033DE  C074  F078         	movff	vfprintf@fmt,vfprintf@cfmt
  1431  0033E2  C075  F079         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1432                           
  1433                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1434  0033E6  0E00               	movlw	0
  1435  0033E8  0100               	movlb	0	; () banked
  1436  0033EA  6F8C               	movwf	(_nout+1)& (0+255),b
  1437  0033EC  0E00               	movlw	0
  1438  0033EE  6F8B               	movwf	_nout& (0+255),b
  1439                           
  1440                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1441  0033F0  D014               	goto	l4088
  1442  0033F2                     l4086:
  1443  0033F2  FFFF               	dw	65535	; assembler added errata NOP
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1447  0033F4  C072  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1448  0033F8  C073  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1449  0033FC  0E78               	movlw	low vfprintf@cfmt
  1450  0033FE  6E45               	movwf	vfpfcnvrt@fmt,c
  1451  003400  0E00               	movlw	high vfprintf@cfmt
  1452  003402  6E46               	movwf	vfpfcnvrt@fmt+1,c
  1453  003404  C076  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1454  003408  C077  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1455  00340C  EC26  F003         	call	_vfpfcnvrt	;wreg free
  1456  003410  5043               	movf	?_vfpfcnvrt,w,c
  1457  003412  0100               	movlb	0	; () banked
  1458  003414  278B               	addwf	_nout& (0+255),f,b
  1459  003416  5044               	movf	?_vfpfcnvrt+1,w,c
  1460  003418  238C               	addwfc	(_nout+1)& (0+255),f,b
  1461  00341A                     l4088:
  1462  00341A  FFFF               	dw	65535	; assembler added errata NOP
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1466  00341C  C078  FFF6         	movff	vfprintf@cfmt,tblptrl
  1467  003420  C079  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1468  003424                     	if	0	;tblptru may be non-zero
  1469  003424                     	endif
  1470  003424                     	if	0	;tblptru may be non-zero
  1471  003424                     	endif
  1472  003424  0008               	tblrd		*
  1473  003426  FFFF               	dw	65535	; errata NOP
  1474  003428  50F5               	movf	tablat,w,c
  1475  00342A  0900               	iorlw	0
  1476  00342C  A4D8               	btfss	status,2,c
  1477  00342E  D7E1               	goto	l4086
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  1481  003430  C08B  F072         	movff	_nout,?_vfprintf
  1482  003434  C08C  F073         	movff	_nout+1,?_vfprintf+1
  1483                           
  1484                           ; BSR set to: 0
  1485  003438  0012               	return		;funcret
  1486  00343A  FFFF               	dw	65535	; errata NOP
  1487  00343C                     __end_of_vfprintf:
  1488                           	opt callstack 0
  1489                           
  1490 ;; *************** function _vfpfcnvrt *****************
  1491 ;; Defined at:
  1492 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1495 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  1496 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1497 ;;		 -> vfprintf@cfmt(2), 
  1498 ;;  ap              2   70[COMRAM] PTR PTR void 
  1499 ;;		 -> snprintf@ap(2), sprintf@ap(2), 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  llu             8  105[COMRAM] unsigned long long 
  1502 ;;  ll              8   94[COMRAM] long long 
  1503 ;;  f               4    0        long long 
  1504 ;;  ct              3    0        unsigned char [3]
  1505 ;;  vp              2  102[COMRAM] PTR void 
  1506 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1507 ;;  done            2   88[COMRAM] int 
  1508 ;;  cp              2   86[COMRAM] PTR unsigned char 
  1509 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  1510 ;;  i               2    0        int 
  1511 ;;  c               1  104[COMRAM] unsigned char 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  2   66[COMRAM] int 
  1514 ;; Registers used:
  1515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1521 ;;      Params:         6       0       0       0       0       0       0
  1522 ;;      Locals:        27       0       0       0       0       0       0
  1523 ;;      Temps:         14       0       0       0       0       0       0
  1524 ;;      Totals:        47       0       0       0       0       0       0
  1525 ;;Total ram usage:       47 bytes
  1526 ;; Hardware stack levels used:    1
  1527 ;; Hardware stack levels required when called:    7
  1528 ;; This function calls:
  1529 ;;		_atoi
  1530 ;;		_ctoa
  1531 ;;		_dtoa
  1532 ;;		_fputc
  1533 ;;		_isdigit
  1534 ;;		_otoa
  1535 ;;		_stoa
  1536 ;;		_strncmp
  1537 ;;		_utoa
  1538 ;;		_xtoa
  1539 ;; This function is called by:
  1540 ;;		_vfprintf
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	text5
  1545  00064C                     __ptext5:
  1546                           	opt callstack 0
  1547  00064C                     _vfpfcnvrt:
  1548                           	opt callstack 0
  1549  00064C  FFFF               	dw	65535	; assembler added errata NOP
  1550                           
  1551                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;incstack = 0
  1555  00064E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1556  000652  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1557  000656  CFDE FFF6          	movff	postinc2,tblptrl
  1558  00065A  CFDD FFF7          	movff	postdec2,tblptrh
  1559  00065E                     	if	0	;tblptru may be non-zero
  1560  00065E                     	endif
  1561  00065E                     	if	0	;tblptru may be non-zero
  1562  00065E                     	endif
  1563  00065E  0008               	tblrd		*
  1564  000660  FFFF               	dw	65535	; errata NOP
  1565  000662  50F5               	movf	tablat,w,c
  1566  000664  0A25               	xorlw	37
  1567  000666  A4D8               	btfss	status,2,c
  1568  000668  EFD7  F00B         	goto	l4066
  1569                           
  1570                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1571  00066C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1572  000670  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1573  000674  2ADE               	incf	postinc2,f,c
  1574  000676  0E00               	movlw	0
  1575  000678  22DD               	addwfc	postdec2,f,c
  1576                           
  1577                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  1578  00067A  0E00               	movlw	0
  1579  00067C  0100               	movlb	0	; () banked
  1580  00067E  6F8E               	movwf	(_width+1)& (0+255),b
  1581  000680  0E00               	movlw	0
  1582  000682  6F8D               	movwf	_width& (0+255),b
  1583  000684  C08D  F091         	movff	_width,_flags
  1584  000688  C08E  F092         	movff	_width+1,_flags+1
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  1588  00068C  698F               	setf	_prec& (0+255),b
  1589  00068E  6990               	setf	(_prec+1)& (0+255),b
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  1593  000690  0E00               	movlw	0
  1594  000692  6E5A               	movwf	vfpfcnvrt@done+1,c
  1595  000694  0E00               	movlw	0
  1596  000696  D020               	goto	L1
  1597  000698                     l3708:
  1598  000698  FFFF               	dw	65535	; assembler added errata NOP
  1599                           
  1600                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  1601  00069A  0100               	movlb	0	; () banked
  1602  00069C  8191               	bsf	_flags& (0+255),0,b
  1603  00069E                     l3710:
  1604  00069E  FFFF               	dw	65535	; assembler added errata NOP
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  1608  0006A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1609  0006A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1610  0006A8  2ADE               	incf	postinc2,f,c
  1611  0006AA  0E00               	movlw	0
  1612  0006AC  22DD               	addwfc	postdec2,f,c
  1613                           
  1614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  1615  0006AE  D03A               	goto	l3734
  1616  0006B0                     l3712:
  1617  0006B0  FFFF               	dw	65535	; assembler added errata NOP
  1618                           
  1619                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  1620  0006B2  0100               	movlb	0	; () banked
  1621  0006B4  8391               	bsf	_flags& (0+255),1,b
  1622  0006B6  D7F3               	goto	l3710
  1623  0006B8                     l3716:
  1624  0006B8  FFFF               	dw	65535	; assembler added errata NOP
  1625                           
  1626                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  1627  0006BA  0100               	movlb	0	; () banked
  1628  0006BC  8591               	bsf	_flags& (0+255),2,b
  1629  0006BE  D7EF               	goto	l3710
  1630  0006C0                     l3720:
  1631  0006C0  FFFF               	dw	65535	; assembler added errata NOP
  1632                           
  1633                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  1634  0006C2  0100               	movlb	0	; () banked
  1635  0006C4  8791               	bsf	_flags& (0+255),3,b
  1636  0006C6  D7EB               	goto	l3710
  1637  0006C8                     l3724:
  1638  0006C8  FFFF               	dw	65535	; assembler added errata NOP
  1639                           
  1640                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  1641  0006CA  0100               	movlb	0	; () banked
  1642  0006CC  8991               	bsf	_flags& (0+255),4,b
  1643  0006CE  D7E7               	goto	l3710
  1644  0006D0                     l3728:
  1645  0006D0  FFFF               	dw	65535	; assembler added errata NOP
  1646                           
  1647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  1648  0006D2  0E00               	movlw	0
  1649  0006D4  6E5A               	movwf	vfpfcnvrt@done+1,c
  1650  0006D6  0E01               	movlw	1
  1651  0006D8                     L1:
  1652  0006D8  FFFF               	dw	65535	; assembler added errata NOP
  1653  0006DA  6E59               	movwf	vfpfcnvrt@done,c
  1654                           
  1655                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  1656  0006DC  D023               	goto	l3734
  1657  0006DE                     l3732:
  1658  0006DE  FFFF               	dw	65535	; assembler added errata NOP
  1659  0006E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1660  0006E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1661  0006E8  CFDE FFF6          	movff	postinc2,tblptrl
  1662  0006EC  CFDD FFF7          	movff	postdec2,tblptrh
  1663  0006F0                     	if	0	;tblptru may be non-zero
  1664  0006F0                     	endif
  1665  0006F0                     	if	0	;tblptru may be non-zero
  1666  0006F0                     	endif
  1667  0006F0  0008               	tblrd		*
  1668  0006F2  FFFF               	dw	65535	; errata NOP
  1669  0006F4  50F5               	movf	tablat,w,c
  1670  0006F6  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  1671  0006F8  6A4A               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  1672                           
  1673                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1674                           ; Switch size 1, requested type "simple"
  1675                           ; Number of cases is 1, Range of values is 0 to 0
  1676                           ; switch strategies available:
  1677                           ; Name         Instructions Cycles
  1678                           ; simple_byte            4     3 (average)
  1679                           ;	Chosen strategy is simple_byte
  1680  0006FA  504A               	movf	??_vfpfcnvrt+1,w,c
  1681  0006FC  0A00               	xorlw	0	; case 0
  1682  0006FE  A4D8               	btfss	status,2,c
  1683  000700  D7E7               	goto	l3728
  1684                           
  1685                           ; Switch size 1, requested type "simple"
  1686                           ; Number of cases is 5, Range of values is 32 to 48
  1687                           ; switch strategies available:
  1688                           ; Name         Instructions Cycles
  1689                           ; simple_byte           16     9 (average)
  1690                           ;	Chosen strategy is simple_byte
  1691  000702  5049               	movf	??_vfpfcnvrt,w,c
  1692  000704  0A20               	xorlw	32	; case 32
  1693  000706  B4D8               	btfsc	status,2,c
  1694  000708  D7DB               	goto	l3720
  1695  00070A  0A03               	xorlw	3	; case 35
  1696  00070C  B4D8               	btfsc	status,2,c
  1697  00070E  D7DC               	goto	l3724
  1698  000710  0A08               	xorlw	8	; case 43
  1699  000712  B4D8               	btfsc	status,2,c
  1700  000714  D7D1               	goto	l3716
  1701  000716  0A06               	xorlw	6	; case 45
  1702  000718  B4D8               	btfsc	status,2,c
  1703  00071A  D7BE               	goto	l3708
  1704  00071C  0A1D               	xorlw	29	; case 48
  1705  00071E  B4D8               	btfsc	status,2,c
  1706  000720  D7C7               	goto	l3712
  1707  000722  D7D6               	goto	l3728
  1708  000724                     l3734:
  1709  000724  FFFF               	dw	65535	; assembler added errata NOP
  1710                           
  1711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  1712  000726  5059               	movf	vfpfcnvrt@done,w,c
  1713  000728  105A               	iorwf	vfpfcnvrt@done+1,w,c
  1714  00072A  B4D8               	btfsc	status,2,c
  1715  00072C  D7D8               	goto	l3732
  1716                           
  1717                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  1718  00072E  0100               	movlb	0	; () banked
  1719  000730  B191               	btfsc	_flags& (0+255),0,b
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  1723  000732  9391               	bcf	_flags& (0+255),1,b
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  1727  000734  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1728  000738  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1729  00073C  CFDE FFF6          	movff	postinc2,tblptrl
  1730  000740  CFDD FFF7          	movff	postdec2,tblptrh
  1731  000744                     	if	0	;tblptru may be non-zero
  1732  000744                     	endif
  1733  000744                     	if	0	;tblptru may be non-zero
  1734  000744                     	endif
  1735  000744  0008               	tblrd		*
  1736  000746  FFFF               	dw	65535	; errata NOP
  1737  000748  50F5               	movf	tablat,w,c
  1738  00074A  0A2A               	xorlw	42
  1739  00074C  A4D8               	btfss	status,2,c
  1740  00074E  D023               	goto	l3746
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  1744  000750  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1745  000754  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1746  000758  2ADE               	incf	postinc2,f,c
  1747  00075A  0E00               	movlw	0
  1748  00075C  22DD               	addwfc	postdec2,f,c
  1749                           
  1750                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  1751  00075E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1752  000762  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1753  000766  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1754  00076A  0E02               	movlw	2
  1755  00076C  26DE               	addwf	postinc2,f,c
  1756  00076E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1757  000772  0E00               	movlw	0
  1758  000774  22DD               	addwfc	postdec2,f,c
  1759  000776  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1760  00077A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1761  00077E  CFDE F08D          	movff	postinc2,_width
  1762  000782  CFDD F08E          	movff	postdec2,_width+1
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  1766  000786  AF8E               	btfss	(_width+1)& (0+255),7,b
  1767  000788  D045               	goto	u3870
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  1771  00078A  8191               	bsf	_flags& (0+255),0,b
  1772                           
  1773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  1774  00078C  6D8D               	negf	_width& (0+255),b
  1775  00078E  1F8E               	comf	(_width+1)& (0+255),f,b
  1776  000790  B0D8               	btfsc	status,0,c
  1777  000792  2B8E               	incf	(_width+1)& (0+255),f,b
  1778  000794  D03F               	goto	u3870
  1779  000796                     l3746:
  1780  000796  FFFF               	dw	65535	; assembler added errata NOP
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  1784  000798  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1785  00079C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1786  0007A0  CFDE F008          	movff	postinc2,atoi@s
  1787  0007A4  CFDD F009          	movff	postdec2,atoi@s+1
  1788  0007A8  EC68  F013         	call	_atoi	;wreg free
  1789  0007AC  C008  F08D         	movff	?_atoi,_width
  1790  0007B0  C009  F08E         	movff	?_atoi+1,_width+1
  1791                           
  1792                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1793  0007B4  D008               	goto	l3750
  1794  0007B6                     l3748:
  1795  0007B6  FFFF               	dw	65535	; assembler added errata NOP
  1796                           
  1797                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  1798  0007B8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1799  0007BC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1800  0007C0  2ADE               	incf	postinc2,f,c
  1801  0007C2  0E00               	movlw	0
  1802  0007C4  22DD               	addwfc	postdec2,f,c
  1803  0007C6                     l3750:
  1804  0007C6  FFFF               	dw	65535	; assembler added errata NOP
  1805  0007C8  0ED0               	movlw	208
  1806  0007CA  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  1807  0007CC  0EFF               	movlw	255
  1808  0007CE  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1809  0007D0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1810  0007D4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1811  0007D8  CFDE FFF6          	movff	postinc2,tblptrl
  1812  0007DC  CFDD FFF7          	movff	postdec2,tblptrh
  1813  0007E0                     	if	0	;tblptru may be non-zero
  1814  0007E0                     	endif
  1815  0007E0                     	if	0	;tblptru may be non-zero
  1816  0007E0                     	endif
  1817  0007E0  0008               	tblrd		*
  1818  0007E2  FFFF               	dw	65535	; errata NOP
  1819  0007E4  50F5               	movf	tablat,w,c
  1820  0007E6  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1821  0007E8  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1822  0007EA  5049               	movf	??_vfpfcnvrt,w,c
  1823  0007EC  264B               	addwf	??_vfpfcnvrt+2,f,c
  1824  0007EE  504A               	movf	??_vfpfcnvrt+1,w,c
  1825  0007F0  224C               	addwfc	??_vfpfcnvrt+3,f,c
  1826  0007F2  504C               	movf	??_vfpfcnvrt+3,w,c
  1827  0007F4  E106               	bnz	u3850
  1828  0007F6  0E0A               	movlw	10
  1829  0007F8  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  1830  0007FA  B0D8               	btfsc	status,0,c
  1831  0007FC  D002               	goto	u3850
  1832  0007FE  0E01               	movlw	1
  1833  000800  D002               	goto	u3860
  1834  000802                     u3850:
  1835  000802  FFFF               	dw	65535	; assembler added errata NOP
  1836  000804  0E00               	movlw	0
  1837  000806                     u3860:
  1838  000806  FFFF               	dw	65535	; assembler added errata NOP
  1839  000808  6E5B               	movwf	_vfpfcnvrt$1150,c
  1840  00080A  6A5C               	clrf	_vfpfcnvrt$1150+1,c
  1841  00080C  505B               	movf	_vfpfcnvrt$1150,w,c
  1842  00080E  105C               	iorwf	_vfpfcnvrt$1150+1,w,c
  1843  000810  A4D8               	btfss	status,2,c
  1844  000812  D7D1               	goto	l3748
  1845  000814                     u3870:
  1846  000814  FFFF               	dw	65535	; assembler added errata NOP
  1847                           
  1848                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  1849  000816  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1850  00081A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1851  00081E  CFDE FFF6          	movff	postinc2,tblptrl
  1852  000822  CFDD FFF7          	movff	postdec2,tblptrh
  1853  000826                     	if	0	;tblptru may be non-zero
  1854  000826                     	endif
  1855  000826                     	if	0	;tblptru may be non-zero
  1856  000826                     	endif
  1857  000826  0008               	tblrd		*
  1858  000828  FFFF               	dw	65535	; errata NOP
  1859  00082A  50F5               	movf	tablat,w,c
  1860  00082C  0A2E               	xorlw	46
  1861  00082E  A4D8               	btfss	status,2,c
  1862  000830  D075               	goto	u3920
  1863                           
  1864                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  1865  000832  0E00               	movlw	0
  1866  000834  0100               	movlb	0	; () banked
  1867  000836  6F90               	movwf	(_prec+1)& (0+255),b
  1868  000838  0E00               	movlw	0
  1869  00083A  6F8F               	movwf	_prec& (0+255),b
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  1873  00083C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1874  000840  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1875  000844  2ADE               	incf	postinc2,f,c
  1876  000846  0E00               	movlw	0
  1877  000848  22DD               	addwfc	postdec2,f,c
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  1881  00084A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1882  00084E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1883  000852  CFDE FFF6          	movff	postinc2,tblptrl
  1884  000856  CFDD FFF7          	movff	postdec2,tblptrh
  1885  00085A                     	if	0	;tblptru may be non-zero
  1886  00085A                     	endif
  1887  00085A                     	if	0	;tblptru may be non-zero
  1888  00085A                     	endif
  1889  00085A  0008               	tblrd		*
  1890  00085C  FFFF               	dw	65535	; errata NOP
  1891  00085E  50F5               	movf	tablat,w,c
  1892  000860  0A2A               	xorlw	42
  1893  000862  A4D8               	btfss	status,2,c
  1894  000864  D01C               	goto	l3766
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  1898  000866  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1899  00086A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1900  00086E  2ADE               	incf	postinc2,f,c
  1901  000870  0E00               	movlw	0
  1902  000872  22DD               	addwfc	postdec2,f,c
  1903                           
  1904                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  1905  000874  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1906  000878  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1907  00087C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1908  000880  0E02               	movlw	2
  1909  000882  26DE               	addwf	postinc2,f,c
  1910  000884  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1911  000888  0E00               	movlw	0
  1912  00088A  22DD               	addwfc	postdec2,f,c
  1913  00088C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1914  000890  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1915  000894  CFDE F08F          	movff	postinc2,_prec
  1916  000898  CFDD F090          	movff	postdec2,_prec+1
  1917                           
  1918                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
  1919  00089C  D03F               	goto	u3920
  1920  00089E                     l3766:
  1921  00089E  FFFF               	dw	65535	; assembler added errata NOP
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  1925  0008A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1926  0008A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1927  0008A8  CFDE F008          	movff	postinc2,atoi@s
  1928  0008AC  CFDD F009          	movff	postdec2,atoi@s+1
  1929  0008B0  EC68  F013         	call	_atoi	;wreg free
  1930  0008B4  C008  F08F         	movff	?_atoi,_prec
  1931  0008B8  C009  F090         	movff	?_atoi+1,_prec+1
  1932                           
  1933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1934  0008BC  D008               	goto	l3770
  1935  0008BE                     l3768:
  1936  0008BE  FFFF               	dw	65535	; assembler added errata NOP
  1937                           
  1938                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  1939  0008C0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1940  0008C4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1941  0008C8  2ADE               	incf	postinc2,f,c
  1942  0008CA  0E00               	movlw	0
  1943  0008CC  22DD               	addwfc	postdec2,f,c
  1944  0008CE                     l3770:
  1945  0008CE  FFFF               	dw	65535	; assembler added errata NOP
  1946  0008D0  0ED0               	movlw	208
  1947  0008D2  6E49               	movwf	??_vfpfcnvrt& (0+255),c
  1948  0008D4  0EFF               	movlw	255
  1949  0008D6  6E4A               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1950  0008D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1951  0008DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1952  0008E0  CFDE FFF6          	movff	postinc2,tblptrl
  1953  0008E4  CFDD FFF7          	movff	postdec2,tblptrh
  1954  0008E8                     	if	0	;tblptru may be non-zero
  1955  0008E8                     	endif
  1956  0008E8                     	if	0	;tblptru may be non-zero
  1957  0008E8                     	endif
  1958  0008E8  0008               	tblrd		*
  1959  0008EA  FFFF               	dw	65535	; errata NOP
  1960  0008EC  50F5               	movf	tablat,w,c
  1961  0008EE  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1962  0008F0  6A4C               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1963  0008F2  5049               	movf	??_vfpfcnvrt,w,c
  1964  0008F4  264B               	addwf	??_vfpfcnvrt+2,f,c
  1965  0008F6  504A               	movf	??_vfpfcnvrt+1,w,c
  1966  0008F8  224C               	addwfc	??_vfpfcnvrt+3,f,c
  1967  0008FA  504C               	movf	??_vfpfcnvrt+3,w,c
  1968  0008FC  E106               	bnz	u3900
  1969  0008FE  0E0A               	movlw	10
  1970  000900  5C4B               	subwf	??_vfpfcnvrt+2,w,c
  1971  000902  B0D8               	btfsc	status,0,c
  1972  000904  D002               	goto	u3900
  1973  000906  0E01               	movlw	1
  1974  000908  D002               	goto	u3910
  1975  00090A                     u3900:
  1976  00090A  FFFF               	dw	65535	; assembler added errata NOP
  1977  00090C  0E00               	movlw	0
  1978  00090E                     u3910:
  1979  00090E  FFFF               	dw	65535	; assembler added errata NOP
  1980  000910  6E5D               	movwf	_vfpfcnvrt$1151,c
  1981  000912  6A5E               	clrf	_vfpfcnvrt$1151+1,c
  1982  000914  505D               	movf	_vfpfcnvrt$1151,w,c
  1983  000916  105E               	iorwf	_vfpfcnvrt$1151+1,w,c
  1984  000918  A4D8               	btfss	status,2,c
  1985  00091A  D7D1               	goto	l3768
  1986  00091C                     u3920:
  1987  00091C  FFFF               	dw	65535	; assembler added errata NOP
  1988                           
  1989                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  1990  00091E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1991  000922  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1992  000926  CFDE FFF6          	movff	postinc2,tblptrl
  1993  00092A  CFDD FFF7          	movff	postdec2,tblptrh
  1994  00092E                     	if	0	;tblptru may be non-zero
  1995  00092E                     	endif
  1996  00092E                     	if	0	;tblptru may be non-zero
  1997  00092E                     	endif
  1998  00092E  0008               	tblrd		*
  1999  000930  FFFF               	dw	65535	; errata NOP
  2000  000932  50F5               	movf	tablat,w,c
  2001  000934  0A63               	xorlw	99
  2002  000936  A4D8               	btfss	status,2,c
  2003  000938  D027               	goto	l3784
  2004                           
  2005                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  2006  00093A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2007  00093E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2008  000942  2ADE               	incf	postinc2,f,c
  2009  000944  0E00               	movlw	0
  2010  000946  22DD               	addwfc	postdec2,f,c
  2011                           
  2012                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2013  000948  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2014  00094C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2015  000950  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2016  000954  0E02               	movlw	2
  2017  000956  26DE               	addwf	postinc2,f,c
  2018  000958  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2019  00095C  0E00               	movlw	0
  2020  00095E  22DD               	addwfc	postdec2,f,c
  2021  000960  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2022  000964  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2023  000968  50DF               	movf	indf2,w,c
  2024  00096A  6E69               	movwf	vfpfcnvrt@c,c
  2025                           
  2026                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  2027  00096C  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  2028  000970  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2029  000974  C069  F01E         	movff	vfpfcnvrt@c,ctoa@c
  2030  000978  EC74  F01A         	call	_ctoa	;wreg free
  2031  00097C  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  2032  000980  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2033  000984  EFF3  F00B         	goto	l479
  2034  000988                     l3784:
  2035  000988  FFFF               	dw	65535	; assembler added errata NOP
  2036                           
  2037                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 802:         if (!strncmp(*fm
      +                          t, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((sizeof("hhi")
      +                          /sizeof("hhi"[0]))-1))) {
  2038  00098A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2039  00098E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2040  000992  CFDE F001          	movff	postinc2,strncmp@_l
  2041  000996  CFDD F002          	movff	postdec2,strncmp@_l+1
  2042  00099A  0E05               	movlw	low STR_3
  2043  00099C  6E03               	movwf	strncmp@_r,c
  2044  00099E  0E06               	movlw	high STR_3
  2045  0009A0  6E04               	movwf	strncmp@_r+1,c
  2046  0009A2  0E00               	movlw	0
  2047  0009A4  6E06               	movwf	strncmp@n+1,c
  2048  0009A6  0E03               	movlw	3
  2049  0009A8  6E05               	movwf	strncmp@n,c
  2050  0009AA  ECF2  F017         	call	_strncmp	;wreg free
  2051  0009AE  5001               	movf	?_strncmp,w,c
  2052  0009B0  1002               	iorwf	?_strncmp+1,w,c
  2053  0009B2  B4D8               	btfsc	status,2,c
  2054  0009B4  D016               	goto	u3950
  2055  0009B6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2056  0009BA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2057  0009BE  CFDE F001          	movff	postinc2,strncmp@_l
  2058  0009C2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2059  0009C6  0E09               	movlw	low STR_7
  2060  0009C8  6E03               	movwf	strncmp@_r,c
  2061  0009CA  0E06               	movlw	high STR_7
  2062  0009CC  6E04               	movwf	strncmp@_r+1,c
  2063  0009CE  0E00               	movlw	0
  2064  0009D0  6E06               	movwf	strncmp@n+1,c
  2065  0009D2  0E03               	movlw	3
  2066  0009D4  6E05               	movwf	strncmp@n,c
  2067  0009D6  ECF2  F017         	call	_strncmp	;wreg free
  2068  0009DA  5001               	movf	?_strncmp,w,c
  2069  0009DC  1002               	iorwf	?_strncmp+1,w,c
  2070  0009DE  A4D8               	btfss	status,2,c
  2071  0009E0  D043               	goto	l3794
  2072  0009E2                     u3950:
  2073  0009E2  FFFF               	dw	65535	; assembler added errata NOP
  2074                           
  2075                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 803: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 805:             *fmt += ((sizeof("hhd")/sizeof("hhd"
      +                          [0]))-1);
  2076  0009E4  0E03               	movlw	3
  2077  0009E6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2078  0009EA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2079  0009EE  26DE               	addwf	postinc2,f,c
  2080  0009F0  0E00               	movlw	0
  2081  0009F2  22DD               	addwfc	postdec2,f,c
  2082                           
  2083                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 806:             ll = (long l
      +                          ong)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2084  0009F4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2085  0009F8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2086  0009FC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2087  000A00  0E02               	movlw	2
  2088  000A02  26DE               	addwf	postinc2,f,c
  2089  000A04  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2090  000A08  0E00               	movlw	0
  2091  000A0A  22DD               	addwfc	postdec2,f,c
  2092  000A0C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2093  000A10  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2094  000A14  50DF               	movf	indf2,w,c
  2095  000A16  6E5F               	movwf	vfpfcnvrt@ll,c
  2096  000A18  0E00               	movlw	0
  2097  000A1A  BE5F               	btfsc	vfpfcnvrt@ll,7,c
  2098  000A1C  0EFF               	movlw	-1
  2099  000A1E  6E60               	movwf	vfpfcnvrt@ll+1,c
  2100  000A20                     L2:
  2101  000A20  FFFF               	dw	65535	; assembler added errata NOP
  2102  000A22  6E61               	movwf	vfpfcnvrt@ll+2,c
  2103  000A24  6E62               	movwf	vfpfcnvrt@ll+3,c
  2104  000A26  6E63               	movwf	vfpfcnvrt@ll+4,c
  2105  000A28  6E64               	movwf	vfpfcnvrt@ll+5,c
  2106  000A2A  6E65               	movwf	vfpfcnvrt@ll+6,c
  2107  000A2C  6E66               	movwf	vfpfcnvrt@ll+7,c
  2108  000A2E                     l3790:
  2109  000A2E  FFFF               	dw	65535	; assembler added errata NOP
  2110                           
  2111                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 808:             return dtoa(
      +                          fp, ll);
  2112  000A30  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2113  000A34  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2114  000A38  C05F  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2115  000A3C  C060  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2116  000A40  C061  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2117  000A44  C062  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2118  000A48  C063  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2119  000A4C  C064  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2120  000A50  C065  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2121  000A54  C066  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2122  000A58  EC59  F00F         	call	_dtoa	;wreg free
  2123  000A5C  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  2124  000A60  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2125  000A64  EFF3  F00B         	goto	l479
  2126  000A68                     l3794:
  2127  000A68  FFFF               	dw	65535	; assembler added errata NOP
  2128                           
  2129                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 814:         if (!strncmp(*fm
      +                          t, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeof("hi")/size
      +                          of("hi"[0]))-1))) {
  2130  000A6A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2131  000A6E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2132  000A72  CFDE F001          	movff	postinc2,strncmp@_l
  2133  000A76  CFDD F002          	movff	postdec2,strncmp@_l+1
  2134  000A7A  0E06               	movlw	low (STR_3+1)
  2135  000A7C  6E03               	movwf	strncmp@_r,c
  2136  000A7E  0E06               	movlw	high (STR_3+1)
  2137  000A80  6E04               	movwf	strncmp@_r+1,c
  2138  000A82  0E00               	movlw	0
  2139  000A84  6E06               	movwf	strncmp@n+1,c
  2140  000A86  0E02               	movlw	2
  2141  000A88  6E05               	movwf	strncmp@n,c
  2142  000A8A  ECF2  F017         	call	_strncmp	;wreg free
  2143  000A8E  5001               	movf	?_strncmp,w,c
  2144  000A90  1002               	iorwf	?_strncmp+1,w,c
  2145  000A92  B4D8               	btfsc	status,2,c
  2146  000A94  D016               	goto	u3970
  2147  000A96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2148  000A9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2149  000A9E  CFDE F001          	movff	postinc2,strncmp@_l
  2150  000AA2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2151  000AA6  0E0A               	movlw	low (STR_7+1)
  2152  000AA8  6E03               	movwf	strncmp@_r,c
  2153  000AAA  0E06               	movlw	high (STR_7+1)
  2154  000AAC  6E04               	movwf	strncmp@_r+1,c
  2155  000AAE  0E00               	movlw	0
  2156  000AB0  6E06               	movwf	strncmp@n+1,c
  2157  000AB2  0E02               	movlw	2
  2158  000AB4  6E05               	movwf	strncmp@n,c
  2159  000AB6  ECF2  F017         	call	_strncmp	;wreg free
  2160  000ABA  5001               	movf	?_strncmp,w,c
  2161  000ABC  1002               	iorwf	?_strncmp+1,w,c
  2162  000ABE  A4D8               	btfss	status,2,c
  2163  000AC0  D008               	goto	l3804
  2164  000AC2                     u3970:
  2165  000AC2  FFFF               	dw	65535	; assembler added errata NOP
  2166                           
  2167                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 815: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 817:             *fmt += ((sizeof("hd")/sizeof("hd"[0
      +                          ]))-1);
  2168  000AC4  0E02               	movlw	2
  2169  000AC6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2170  000ACA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2171  000ACE  26DE               	addwf	postinc2,f,c
  2172  000AD0  D023               	goto	L12
  2173  000AD2                     l3804:
  2174  000AD2  FFFF               	dw	65535	; assembler added errata NOP
  2175                           
  2176                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2177  000AD4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2178  000AD8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2179  000ADC  CFDE FFF6          	movff	postinc2,tblptrl
  2180  000AE0  CFDD FFF7          	movff	postdec2,tblptrh
  2181  000AE4                     	if	0	;tblptru may be non-zero
  2182  000AE4                     	endif
  2183  000AE4                     	if	0	;tblptru may be non-zero
  2184  000AE4                     	endif
  2185  000AE4  0008               	tblrd		*
  2186  000AE6  FFFF               	dw	65535	; errata NOP
  2187  000AE8  50F5               	movf	tablat,w,c
  2188  000AEA  0A64               	xorlw	100
  2189  000AEC  B4D8               	btfsc	status,2,c
  2190  000AEE  D00E               	goto	u3990
  2191  000AF0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2192  000AF4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2193  000AF8  CFDE FFF6          	movff	postinc2,tblptrl
  2194  000AFC  CFDD FFF7          	movff	postdec2,tblptrh
  2195  000B00                     	if	0	;tblptru may be non-zero
  2196  000B00                     	endif
  2197  000B00                     	if	0	;tblptru may be non-zero
  2198  000B00                     	endif
  2199  000B00  0008               	tblrd		*
  2200  000B02  FFFF               	dw	65535	; errata NOP
  2201  000B04  50F5               	movf	tablat,w,c
  2202  000B06  0A69               	xorlw	105
  2203  000B08  A4D8               	btfss	status,2,c
  2204  000B0A  D021               	goto	l3814
  2205  000B0C                     u3990:
  2206  000B0C  FFFF               	dw	65535	; assembler added errata NOP
  2207                           
  2208                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  2209  000B0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2210  000B12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2211  000B16  2ADE               	incf	postinc2,f,c
  2212  000B18                     L12:
  2213  000B18  FFFF               	dw	65535	; assembler added errata NOP
  2214  000B1A  0E00               	movlw	0
  2215  000B1C  22DD               	addwfc	postdec2,f,c
  2216                           
  2217                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  2218  000B1E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2219  000B22  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2220  000B26  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2221  000B2A  0E02               	movlw	2
  2222  000B2C  26DE               	addwf	postinc2,f,c
  2223  000B2E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2224  000B32  0E00               	movlw	0
  2225  000B34  22DD               	addwfc	postdec2,f,c
  2226  000B36  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2227  000B3A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2228  000B3E  CFDE F05F          	movff	postinc2,vfpfcnvrt@ll
  2229  000B42  CFDD F060          	movff	postdec2,vfpfcnvrt@ll+1
  2230  000B46  0E00               	movlw	0
  2231  000B48  BE60               	btfsc	vfpfcnvrt@ll+1,7,c
  2232  000B4A  0EFF               	movlw	-1
  2233  000B4C  D769               	goto	L2
  2234  000B4E                     l3814:
  2235  000B4E  FFFF               	dw	65535	; assembler added errata NOP
  2236                           
  2237                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  2238  000B50  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2239  000B54  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2240  000B58  CFDE F001          	movff	postinc2,strncmp@_l
  2241  000B5C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2242  000B60  0E27               	movlw	low STR_21
  2243  000B62  6E03               	movwf	strncmp@_r,c
  2244  000B64  0E06               	movlw	high STR_21
  2245  000B66  6E04               	movwf	strncmp@_r+1,c
  2246  000B68  0E00               	movlw	0
  2247  000B6A  6E06               	movwf	strncmp@n+1,c
  2248  000B6C  0E02               	movlw	2
  2249  000B6E  6E05               	movwf	strncmp@n,c
  2250  000B70  ECF2  F017         	call	_strncmp	;wreg free
  2251  000B74  5001               	movf	?_strncmp,w,c
  2252  000B76  1002               	iorwf	?_strncmp+1,w,c
  2253  000B78  B4D8               	btfsc	status,2,c
  2254  000B7A  D016               	goto	u4010
  2255  000B7C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2256  000B80  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2257  000B84  CFDE F001          	movff	postinc2,strncmp@_l
  2258  000B88  CFDD F002          	movff	postdec2,strncmp@_l+1
  2259  000B8C  0E2D               	movlw	low STR_25
  2260  000B8E  6E03               	movwf	strncmp@_r,c
  2261  000B90  0E06               	movlw	high STR_25
  2262  000B92  6E04               	movwf	strncmp@_r+1,c
  2263  000B94  0E00               	movlw	0
  2264  000B96  6E06               	movwf	strncmp@n+1,c
  2265  000B98  0E02               	movlw	2
  2266  000B9A  6E05               	movwf	strncmp@n,c
  2267  000B9C  ECF2  F017         	call	_strncmp	;wreg free
  2268  000BA0  5001               	movf	?_strncmp,w,c
  2269  000BA2  1002               	iorwf	?_strncmp+1,w,c
  2270  000BA4  A4D8               	btfss	status,2,c
  2271  000BA6  D043               	goto	l3824
  2272  000BA8                     u4010:
  2273  000BA8  FFFF               	dw	65535	; assembler added errata NOP
  2274                           
  2275                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  2276  000BAA  0E02               	movlw	2
  2277  000BAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2278  000BB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2279  000BB4  26DE               	addwf	postinc2,f,c
  2280  000BB6  0E00               	movlw	0
  2281  000BB8  22DD               	addwfc	postdec2,f,c
  2282                           
  2283                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  2284  000BBA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2285  000BBE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2286  000BC2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2287  000BC6  0E04               	movlw	4
  2288  000BC8  26DE               	addwf	postinc2,f,c
  2289  000BCA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2290  000BCE  0E00               	movlw	0
  2291  000BD0  22DD               	addwfc	postdec2,f,c
  2292  000BD2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2293  000BD6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2294  000BDA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2295  000BDE  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2296  000BE2  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2297  000BE6  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2298  000BEA  C04B  F04F         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  2299  000BEE  C04C  F050         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  2300  000BF2  C04D  F051         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  2301  000BF6  C04E  F052         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  2302  000BFA  6A53               	clrf	(??_vfpfcnvrt+10)& (0+255),c
  2303  000BFC  BE52               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,c
  2304  000BFE  6853               	setf	(??_vfpfcnvrt+10)& (0+255),c
  2305  000C00  C053  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  2306  000C04  C053  F055         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  2307  000C08  C053  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  2308  000C0C  C04F  F05F         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  2309  000C10  C050  F060         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  2310  000C14  C051  F061         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  2311  000C18  C052  F062         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  2312  000C1C  C053  F063         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  2313  000C20  C054  F064         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  2314  000C24  C055  F065         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  2315  000C28  C056  F066         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  2316  000C2C  D700               	goto	l3790
  2317  000C2E                     l3824:
  2318  000C2E  FFFF               	dw	65535	; assembler added errata NOP
  2319                           
  2320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 883:         if (!strncmp(*fm
      +                          t, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeof("zi")/size
      +                          of("zi"[0]))-1))) {
  2321  000C30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2322  000C34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2323  000C38  CFDE F001          	movff	postinc2,strncmp@_l
  2324  000C3C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2325  000C40  0E2A               	movlw	low STR_30
  2326  000C42  6E03               	movwf	strncmp@_r,c
  2327  000C44  0E06               	movlw	high STR_30
  2328  000C46  6E04               	movwf	strncmp@_r+1,c
  2329  000C48  0E00               	movlw	0
  2330  000C4A  6E06               	movwf	strncmp@n+1,c
  2331  000C4C  0E02               	movlw	2
  2332  000C4E  6E05               	movwf	strncmp@n,c
  2333  000C50  ECF2  F017         	call	_strncmp	;wreg free
  2334  000C54  5001               	movf	?_strncmp,w,c
  2335  000C56  1002               	iorwf	?_strncmp+1,w,c
  2336  000C58  B4D8               	btfsc	status,2,c
  2337  000C5A  D016               	goto	u4030
  2338  000C5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2339  000C60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2340  000C64  CFDE F001          	movff	postinc2,strncmp@_l
  2341  000C68  CFDD F002          	movff	postdec2,strncmp@_l+1
  2342  000C6C  0E30               	movlw	low STR_34
  2343  000C6E  6E03               	movwf	strncmp@_r,c
  2344  000C70  0E06               	movlw	high STR_34
  2345  000C72  6E04               	movwf	strncmp@_r+1,c
  2346  000C74  0E00               	movlw	0
  2347  000C76  6E06               	movwf	strncmp@n+1,c
  2348  000C78  0E02               	movlw	2
  2349  000C7A  6E05               	movwf	strncmp@n,c
  2350  000C7C  ECF2  F017         	call	_strncmp	;wreg free
  2351  000C80  5001               	movf	?_strncmp,w,c
  2352  000C82  1002               	iorwf	?_strncmp+1,w,c
  2353  000C84  A4D8               	btfss	status,2,c
  2354  000C86  D028               	goto	l3834
  2355  000C88                     u4030:
  2356  000C88  FFFF               	dw	65535	; assembler added errata NOP
  2357                           
  2358                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 884: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 886:             *fmt += ((sizeof("zd")/sizeof("zd"[0
      +                          ]))-1);
  2359  000C8A  0E02               	movlw	2
  2360  000C8C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2361  000C90  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2362  000C94  26DE               	addwf	postinc2,f,c
  2363  000C96  0E00               	movlw	0
  2364  000C98  22DD               	addwfc	postdec2,f,c
  2365                           
  2366                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 887:             ll = (long l
      +                          ong)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2367  000C9A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2368  000C9E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2369  000CA2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2370  000CA6  0E02               	movlw	2
  2371  000CA8  26DE               	addwf	postinc2,f,c
  2372  000CAA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2373  000CAE  0E00               	movlw	0
  2374  000CB0  22DD               	addwfc	postdec2,f,c
  2375  000CB2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2376  000CB6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2377  000CBA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2378  000CBE  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2379  000CC2  C04B  F05F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  2380  000CC6  C04C  F060         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  2381  000CCA  6A61               	clrf	vfpfcnvrt@ll+2,c
  2382  000CCC  6A62               	clrf	vfpfcnvrt@ll+3,c
  2383  000CCE  6A63               	clrf	vfpfcnvrt@ll+4,c
  2384  000CD0  6A64               	clrf	vfpfcnvrt@ll+5,c
  2385  000CD2  6A65               	clrf	vfpfcnvrt@ll+6,c
  2386  000CD4  6A66               	clrf	vfpfcnvrt@ll+7,c
  2387  000CD6  D6AB               	goto	l3790
  2388  000CD8                     l3834:
  2389  000CD8  FFFF               	dw	65535	; assembler added errata NOP
  2390                           
  2391                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 969:         if (!strncmp(*fm
      +                          t, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  2392  000CDA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2393  000CDE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2394  000CE2  CFDE F001          	movff	postinc2,strncmp@_l
  2395  000CE6  CFDD F002          	movff	postdec2,strncmp@_l+1
  2396  000CEA  0E11               	movlw	low STR_39
  2397  000CEC  6E03               	movwf	strncmp@_r,c
  2398  000CEE  0E06               	movlw	high STR_39
  2399  000CF0  6E04               	movwf	strncmp@_r+1,c
  2400  000CF2  0E00               	movlw	0
  2401  000CF4  6E06               	movwf	strncmp@n+1,c
  2402  000CF6  0E03               	movlw	3
  2403  000CF8  6E05               	movwf	strncmp@n,c
  2404  000CFA  ECF2  F017         	call	_strncmp	;wreg free
  2405  000CFE  5001               	movf	?_strncmp,w,c
  2406  000D00  1002               	iorwf	?_strncmp+1,w,c
  2407  000D02  A4D8               	btfss	status,2,c
  2408  000D04  D041               	goto	l3842
  2409                           
  2410                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 971:             *fmt += ((si
      +                          zeof("hho")/sizeof("hho"[0]))-1);
  2411  000D06  0E03               	movlw	3
  2412  000D08  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2413  000D0C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2414  000D10  26DE               	addwf	postinc2,f,c
  2415  000D12  0E00               	movlw	0
  2416  000D14  22DD               	addwfc	postdec2,f,c
  2417                           
  2418                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 972:             llu = (unsig
      +                          ned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2419  000D16  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2420  000D1A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2421  000D1E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2422  000D22  0E02               	movlw	2
  2423  000D24  26DE               	addwf	postinc2,f,c
  2424  000D26  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2425  000D2A  0E00               	movlw	0
  2426  000D2C  22DD               	addwfc	postdec2,f,c
  2427  000D2E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2428  000D32  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2429  000D36  50DF               	movf	indf2,w,c
  2430  000D38  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2431  000D3A  504B               	movf	??_vfpfcnvrt+2,w,c
  2432  000D3C  6E6A               	movwf	vfpfcnvrt@llu,c
  2433  000D3E  6A6B               	clrf	vfpfcnvrt@llu+1,c
  2434  000D40                     L3:
  2435  000D40  FFFF               	dw	65535	; assembler added errata NOP
  2436  000D42  6A6C               	clrf	vfpfcnvrt@llu+2,c
  2437  000D44  6A6D               	clrf	vfpfcnvrt@llu+3,c
  2438  000D46                     L4:
  2439  000D46  FFFF               	dw	65535	; assembler added errata NOP
  2440  000D48  6A6E               	clrf	vfpfcnvrt@llu+4,c
  2441  000D4A  6A6F               	clrf	vfpfcnvrt@llu+5,c
  2442  000D4C  6A70               	clrf	vfpfcnvrt@llu+6,c
  2443  000D4E  6A71               	clrf	vfpfcnvrt@llu+7,c
  2444                           
  2445                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 974:             return otoa(
      +                          fp, llu);
  2446  000D50  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  2447  000D54  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  2448  000D58  C06A  F01E         	movff	vfpfcnvrt@llu,otoa@d
  2449  000D5C  C06B  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  2450  000D60  C06C  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  2451  000D64  C06D  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  2452  000D68  C06E  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  2453  000D6C  C06F  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  2454  000D70  C070  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  2455  000D74  C071  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  2456  000D78  EC9B  F012         	call	_otoa	;wreg free
  2457  000D7C  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  2458  000D80  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  2459  000D84  EFF3  F00B         	goto	l479
  2460  000D88                     l3842:
  2461  000D88  FFFF               	dw	65535	; assembler added errata NOP
  2462                           
  2463                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 980:         if (!strncmp(*fm
      +                          t, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  2464  000D8A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2465  000D8E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2466  000D92  CFDE F001          	movff	postinc2,strncmp@_l
  2467  000D96  CFDD F002          	movff	postdec2,strncmp@_l+1
  2468  000D9A  0E12               	movlw	low (STR_39+1)
  2469  000D9C  6E03               	movwf	strncmp@_r,c
  2470  000D9E  0E06               	movlw	high (STR_39+1)
  2471  000DA0  6E04               	movwf	strncmp@_r+1,c
  2472  000DA2  0E00               	movlw	0
  2473  000DA4  6E06               	movwf	strncmp@n+1,c
  2474  000DA6  0E02               	movlw	2
  2475  000DA8  6E05               	movwf	strncmp@n,c
  2476  000DAA  ECF2  F017         	call	_strncmp	;wreg free
  2477  000DAE  5001               	movf	?_strncmp,w,c
  2478  000DB0  1002               	iorwf	?_strncmp+1,w,c
  2479  000DB2  B4D8               	btfsc	status,2,c
  2480  000DB4  D06B               	goto	u4080
  2481                           
  2482                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 990:         if (*fmt[0] == '
      +                          o') {
  2483                           
  2484                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 983:             llu = (unsig
      +                          ned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2485                           
  2486                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 982:             *fmt += ((si
      +                          zeof("ho")/sizeof("ho"[0]))-1);
  2487  000DB6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2488  000DBA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2489  000DBE  CFDE FFF6          	movff	postinc2,tblptrl
  2490  000DC2  CFDD FFF7          	movff	postdec2,tblptrh
  2491  000DC6                     	if	0	;tblptru may be non-zero
  2492  000DC6                     	endif
  2493  000DC6                     	if	0	;tblptru may be non-zero
  2494  000DC6                     	endif
  2495  000DC6  0008               	tblrd		*
  2496  000DC8  FFFF               	dw	65535	; errata NOP
  2497  000DCA  50F5               	movf	tablat,w,c
  2498  000DCC  0A6F               	xorlw	111
  2499  000DCE  A4D8               	btfss	status,2,c
  2500  000DD0  D006               	goto	l3858
  2501                           
  2502                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 992:             ++*fmt;
  2503  000DD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2504  000DD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2505  000DDA  2ADE               	incf	postinc2,f,c
  2506  000DDC  D05E               	goto	L17
  2507  000DDE                     l3858:
  2508  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  2509                           
  2510                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1000:         if (!strncmp(*f
      +                          mt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
  2511  000DE0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2512  000DE4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2513  000DE8  CFDE F001          	movff	postinc2,strncmp@_l
  2514  000DEC  CFDD F002          	movff	postdec2,strncmp@_l+1
  2515  000DF0  0E39               	movlw	low STR_49
  2516  000DF2  6E03               	movwf	strncmp@_r,c
  2517  000DF4  0E06               	movlw	high STR_49
  2518  000DF6  6E04               	movwf	strncmp@_r+1,c
  2519  000DF8  0E00               	movlw	0
  2520  000DFA  6E06               	movwf	strncmp@n+1,c
  2521  000DFC  0E02               	movlw	2
  2522  000DFE  6E05               	movwf	strncmp@n,c
  2523  000E00  ECF2  F017         	call	_strncmp	;wreg free
  2524  000E04  5001               	movf	?_strncmp,w,c
  2525  000E06  1002               	iorwf	?_strncmp+1,w,c
  2526  000E08  A4D8               	btfss	status,2,c
  2527  000E0A  D029               	goto	l3866
  2528                           
  2529                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1002:             *fmt += ((s
      +                          izeof("lo")/sizeof("lo"[0]))-1);
  2530  000E0C  0E02               	movlw	2
  2531  000E0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2532  000E12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2533  000E16  26DE               	addwf	postinc2,f,c
  2534  000E18  0E00               	movlw	0
  2535  000E1A  22DD               	addwfc	postdec2,f,c
  2536                           
  2537                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1003:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  2538  000E1C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2539  000E20  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2540  000E24  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2541  000E28  0E04               	movlw	4
  2542  000E2A  26DE               	addwf	postinc2,f,c
  2543  000E2C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2544  000E30  0E00               	movlw	0
  2545  000E32  22DD               	addwfc	postdec2,f,c
  2546  000E34  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2547  000E38  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2548  000E3C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2549  000E40  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2550  000E44  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2551  000E48  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2552  000E4C  504B               	movf	??_vfpfcnvrt+2,w,c
  2553  000E4E  6E6A               	movwf	vfpfcnvrt@llu,c
  2554  000E50  504C               	movf	??_vfpfcnvrt+3,w,c
  2555  000E52  6E6B               	movwf	vfpfcnvrt@llu+1,c
  2556  000E54  504D               	movf	??_vfpfcnvrt+4,w,c
  2557  000E56  6E6C               	movwf	vfpfcnvrt@llu+2,c
  2558  000E58  504E               	movf	??_vfpfcnvrt+5,w,c
  2559  000E5A  6E6D               	movwf	vfpfcnvrt@llu+3,c
  2560  000E5C  D774               	goto	L4
  2561  000E5E                     l3866:
  2562  000E5E  FFFF               	dw	65535	; assembler added errata NOP
  2563                           
  2564                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1044:         if (!strncmp(*f
      +                          mt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  2565  000E60  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2566  000E64  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2567  000E68  CFDE F001          	movff	postinc2,strncmp@_l
  2568  000E6C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2569  000E70  0E3C               	movlw	low STR_54
  2570  000E72  6E03               	movwf	strncmp@_r,c
  2571  000E74  0E06               	movlw	high STR_54
  2572  000E76  6E04               	movwf	strncmp@_r+1,c
  2573  000E78  0E00               	movlw	0
  2574  000E7A  6E06               	movwf	strncmp@n+1,c
  2575  000E7C  0E02               	movlw	2
  2576  000E7E  6E05               	movwf	strncmp@n,c
  2577  000E80  ECF2  F017         	call	_strncmp	;wreg free
  2578  000E84  5001               	movf	?_strncmp,w,c
  2579  000E86  1002               	iorwf	?_strncmp+1,w,c
  2580  000E88  A4D8               	btfss	status,2,c
  2581  000E8A  D023               	goto	l3874
  2582  000E8C                     u4080:
  2583  000E8C  FFFF               	dw	65535	; assembler added errata NOP
  2584                           
  2585                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1046:             *fmt += ((s
      +                          izeof("zo")/sizeof("zo"[0]))-1);
  2586  000E8E  0E02               	movlw	2
  2587  000E90  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2588  000E94  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2589  000E98  26DE               	addwf	postinc2,f,c
  2590  000E9A                     L17:
  2591  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  2592  000E9C  0E00               	movlw	0
  2593  000E9E  22DD               	addwfc	postdec2,f,c
  2594                           
  2595                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1047:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2596  000EA0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2597  000EA4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2598  000EA8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2599  000EAC  0E02               	movlw	2
  2600  000EAE  26DE               	addwf	postinc2,f,c
  2601  000EB0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2602  000EB4  0E00               	movlw	0
  2603  000EB6  22DD               	addwfc	postdec2,f,c
  2604  000EB8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2605  000EBC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2606  000EC0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2607  000EC4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2608  000EC8  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2609  000ECC  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2610  000ED0  D737               	goto	L3
  2611  000ED2                     l3874:
  2612  000ED2  FFFF               	dw	65535	; assembler added errata NOP
  2613                           
  2614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1058:         if (!strncmp(*f
      +                          mt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  2615  000ED4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2616  000ED8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2617  000EDC  CFDE F001          	movff	postinc2,strncmp@_l
  2618  000EE0  CFDD F002          	movff	postdec2,strncmp@_l+1
  2619  000EE4  0E0D               	movlw	low STR_59
  2620  000EE6  6E03               	movwf	strncmp@_r,c
  2621  000EE8  0E06               	movlw	high STR_59
  2622  000EEA  6E04               	movwf	strncmp@_r+1,c
  2623  000EEC  0E00               	movlw	0
  2624  000EEE  6E06               	movwf	strncmp@n+1,c
  2625  000EF0  0E03               	movlw	3
  2626  000EF2  6E05               	movwf	strncmp@n,c
  2627  000EF4  ECF2  F017         	call	_strncmp	;wreg free
  2628  000EF8  5001               	movf	?_strncmp,w,c
  2629  000EFA  1002               	iorwf	?_strncmp+1,w,c
  2630  000EFC  A4D8               	btfss	status,2,c
  2631  000EFE  D028               	goto	l3884
  2632                           
  2633                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1060:             *fmt += ((s
      +                          izeof("hhn")/sizeof("hhn"[0]))-1);
  2634  000F00  0E03               	movlw	3
  2635  000F02  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2636  000F06  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2637  000F0A  26DE               	addwf	postinc2,f,c
  2638  000F0C  0E00               	movlw	0
  2639  000F0E  22DD               	addwfc	postdec2,f,c
  2640                           
  2641                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1061:             vp = (void 
      +                          *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2642  000F10  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2643  000F14  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2644  000F18  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2645  000F1C  0E02               	movlw	2
  2646  000F1E  26DE               	addwf	postinc2,f,c
  2647  000F20  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2648  000F24  0E00               	movlw	0
  2649  000F26  22DD               	addwfc	postdec2,f,c
  2650  000F28  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2651  000F2C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2652  000F30  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2653  000F34  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2654                           
  2655                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1062:             *(char *)vp
      +                           = (char)nout;
  2656  000F38  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2657  000F3C  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2658  000F40  C08B  FFDF         	movff	_nout,indf2
  2659  000F44                     l3880:
  2660  000F44  FFFF               	dw	65535	; assembler added errata NOP
  2661                           
  2662                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1063:             return 0;
  2663  000F46  0E00               	movlw	0
  2664  000F48  6E44               	movwf	?_vfpfcnvrt+1,c
  2665  000F4A  0E00               	movlw	0
  2666  000F4C  EFCA  F00B         	goto	L5
  2667  000F50                     l3884:
  2668  000F50  FFFF               	dw	65535	; assembler added errata NOP
  2669                           
  2670                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1068:         if (!strncmp(*f
      +                          mt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  2671  000F52  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2672  000F56  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2673  000F5A  CFDE F001          	movff	postinc2,strncmp@_l
  2674  000F5E  CFDD F002          	movff	postdec2,strncmp@_l+1
  2675  000F62  0E0E               	movlw	low (STR_59+1)
  2676  000F64  6E03               	movwf	strncmp@_r,c
  2677  000F66  0E06               	movlw	high (STR_59+1)
  2678  000F68  6E04               	movwf	strncmp@_r+1,c
  2679  000F6A  0E00               	movlw	0
  2680  000F6C  6E06               	movwf	strncmp@n+1,c
  2681  000F6E  0E02               	movlw	2
  2682  000F70  6E05               	movwf	strncmp@n,c
  2683  000F72  ECF2  F017         	call	_strncmp	;wreg free
  2684  000F76  5001               	movf	?_strncmp,w,c
  2685  000F78  1002               	iorwf	?_strncmp+1,w,c
  2686  000F7A  A4D8               	btfss	status,2,c
  2687  000F7C  D00B               	goto	l3894
  2688  000F7E  D07F               	goto	u4130
  2689  000F80                     l3888:
  2690  000F80  FFFF               	dw	65535	; assembler added errata NOP
  2691                           
  2692                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1072:             *(short *)v
      +                          p = (short)nout;
  2693  000F82  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2694  000F86  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2695  000F8A  C08B  FFDE         	movff	_nout,postinc2
  2696  000F8E  C08C  FFDD         	movff	_nout+1,postdec2
  2697  000F92  D7D8               	goto	l3880
  2698  000F94                     l3894:
  2699  000F94  FFFF               	dw	65535	; assembler added errata NOP
  2700                           
  2701                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1077:         if (*fmt[0] == 
      +                          'n') {
  2702  000F96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2703  000F9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2704  000F9E  CFDE FFF6          	movff	postinc2,tblptrl
  2705  000FA2  CFDD FFF7          	movff	postdec2,tblptrh
  2706  000FA6                     	if	0	;tblptru may be non-zero
  2707  000FA6                     	endif
  2708  000FA6                     	if	0	;tblptru may be non-zero
  2709  000FA6                     	endif
  2710  000FA6  0008               	tblrd		*
  2711  000FA8  FFFF               	dw	65535	; errata NOP
  2712  000FAA  50F5               	movf	tablat,w,c
  2713  000FAC  0A6E               	xorlw	110
  2714  000FAE  A4D8               	btfss	status,2,c
  2715  000FB0  D006               	goto	l3904
  2716                           
  2717                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1078:             ++*fmt;
  2718  000FB2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2719  000FB6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2720  000FBA  2ADE               	incf	postinc2,f,c
  2721  000FBC  D067               	goto	L14
  2722  000FBE                     l3904:
  2723  000FBE  FFFF               	dw	65535	; assembler added errata NOP
  2724                           
  2725                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1085:         if (!strncmp(*f
      +                          mt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
  2726  000FC0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2727  000FC4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2728  000FC8  CFDE F001          	movff	postinc2,strncmp@_l
  2729  000FCC  CFDD F002          	movff	postdec2,strncmp@_l+1
  2730  000FD0  0E33               	movlw	low STR_69
  2731  000FD2  6E03               	movwf	strncmp@_r,c
  2732  000FD4  0E06               	movlw	high STR_69
  2733  000FD6  6E04               	movwf	strncmp@_r+1,c
  2734  000FD8  0E00               	movlw	0
  2735  000FDA  6E06               	movwf	strncmp@n+1,c
  2736  000FDC  0E02               	movlw	2
  2737  000FDE  6E05               	movwf	strncmp@n,c
  2738  000FE0  ECF2  F017         	call	_strncmp	;wreg free
  2739  000FE4  5001               	movf	?_strncmp,w,c
  2740  000FE6  1002               	iorwf	?_strncmp+1,w,c
  2741  000FE8  A4D8               	btfss	status,2,c
  2742  000FEA  D032               	goto	l3914
  2743                           
  2744                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1087:             *fmt += ((s
      +                          izeof("ln")/sizeof("ln"[0]))-1);
  2745  000FEC  0E02               	movlw	2
  2746  000FEE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2747  000FF2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2748  000FF6  26DE               	addwf	postinc2,f,c
  2749  000FF8  0E00               	movlw	0
  2750  000FFA  22DD               	addwfc	postdec2,f,c
  2751                           
  2752                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1088:             vp = (void 
      +                          *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
  2753  000FFC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2754  001000  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2755  001004  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2756  001008  0E02               	movlw	2
  2757  00100A  26DE               	addwf	postinc2,f,c
  2758  00100C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2759  001010  0E00               	movlw	0
  2760  001012  22DD               	addwfc	postdec2,f,c
  2761  001014  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2762  001018  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2763  00101C  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2764  001020  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2765                           
  2766                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1089:             *(long *)vp
      +                           = (long)nout;
  2767  001024  C08B  F049         	movff	_nout,??_vfpfcnvrt
  2768  001028  C08C  F04A         	movff	_nout+1,??_vfpfcnvrt+1
  2769  00102C  0E00               	movlw	0
  2770  00102E  BE4A               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,c
  2771  001030  0EFF               	movlw	255
  2772  001032  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2773  001034  6E4C               	movwf	(??_vfpfcnvrt+3)& (0+255),c
  2774  001036  C067  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2775  00103A  C068  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2776  00103E  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  2777  001042  C04A  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  2778  001046  C04B  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  2779  00104A  C04C  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  2780  00104E  D77A               	goto	l3880
  2781  001050                     l3914:
  2782  001050  FFFF               	dw	65535	; assembler added errata NOP
  2783                           
  2784                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1125:         if (!strncmp(*f
      +                          mt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  2785  001052  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2786  001056  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2787  00105A  CFDE F001          	movff	postinc2,strncmp@_l
  2788  00105E  CFDD F002          	movff	postdec2,strncmp@_l+1
  2789  001062  0E36               	movlw	low STR_74
  2790  001064  6E03               	movwf	strncmp@_r,c
  2791  001066  0E06               	movlw	high STR_74
  2792  001068  6E04               	movwf	strncmp@_r+1,c
  2793  00106A  0E00               	movlw	0
  2794  00106C  6E06               	movwf	strncmp@n+1,c
  2795  00106E  0E02               	movlw	2
  2796  001070  6E05               	movwf	strncmp@n,c
  2797  001072  ECF2  F017         	call	_strncmp	;wreg free
  2798  001076  5001               	movf	?_strncmp,w,c
  2799  001078  1002               	iorwf	?_strncmp+1,w,c
  2800  00107A  A4D8               	btfss	status,2,c
  2801  00107C  D01F               	goto	l3924
  2802  00107E                     u4130:
  2803  00107E  FFFF               	dw	65535	; assembler added errata NOP
  2804                           
  2805                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1127:             *fmt += ((s
      +                          izeof("zn")/sizeof("zn"[0]))-1);
  2806  001080  0E02               	movlw	2
  2807  001082  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2808  001086  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2809  00108A  26DE               	addwf	postinc2,f,c
  2810  00108C                     L14:
  2811  00108C  FFFF               	dw	65535	; assembler added errata NOP
  2812  00108E  0E00               	movlw	0
  2813  001090  22DD               	addwfc	postdec2,f,c
  2814                           
  2815                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1128:             vp = (void 
      +                          *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  2816  001092  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2817  001096  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2818  00109A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2819  00109E  0E02               	movlw	2
  2820  0010A0  26DE               	addwf	postinc2,f,c
  2821  0010A2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2822  0010A6  0E00               	movlw	0
  2823  0010A8  22DD               	addwfc	postdec2,f,c
  2824  0010AA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2825  0010AE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2826  0010B2  CFDE F067          	movff	postinc2,vfpfcnvrt@vp
  2827  0010B6  CFDD F068          	movff	postdec2,vfpfcnvrt@vp+1
  2828  0010BA  D762               	goto	l3888
  2829  0010BC                     l3924:
  2830  0010BC  FFFF               	dw	65535	; assembler added errata NOP
  2831                           
  2832                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1138:         if (*fmt[0] == 
      +                          'p') {
  2833  0010BE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2834  0010C2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2835  0010C6  CFDE FFF6          	movff	postinc2,tblptrl
  2836  0010CA  CFDD FFF7          	movff	postdec2,tblptrh
  2837  0010CE                     	if	0	;tblptru may be non-zero
  2838  0010CE                     	endif
  2839  0010CE                     	if	0	;tblptru may be non-zero
  2840  0010CE                     	endif
  2841  0010CE  0008               	tblrd		*
  2842  0010D0  FFFF               	dw	65535	; errata NOP
  2843  0010D2  50F5               	movf	tablat,w,c
  2844  0010D4  0A70               	xorlw	112
  2845  0010D6  A4D8               	btfss	status,2,c
  2846  0010D8  D03E               	goto	l3932
  2847                           
  2848                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1140:             ++*fmt;
  2849  0010DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2850  0010DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2851  0010E2  2ADE               	incf	postinc2,f,c
  2852  0010E4  0E00               	movlw	0
  2853  0010E6  22DD               	addwfc	postdec2,f,c
  2854                           
  2855                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1141:             llu = (unsi
      +                          gned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  2856  0010E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2857  0010EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2858  0010F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2859  0010F4  0E02               	movlw	2
  2860  0010F6  26DE               	addwf	postinc2,f,c
  2861  0010F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2862  0010FC  0E00               	movlw	0
  2863  0010FE  22DD               	addwfc	postdec2,f,c
  2864  001100  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2865  001104  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2866  001108  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2867  00110C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2868  001110  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2869  001114  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2870  001118  6A6C               	clrf	vfpfcnvrt@llu+2,c
  2871  00111A  6A6D               	clrf	vfpfcnvrt@llu+3,c
  2872  00111C  6A6E               	clrf	vfpfcnvrt@llu+4,c
  2873  00111E  6A6F               	clrf	vfpfcnvrt@llu+5,c
  2874  001120  6A70               	clrf	vfpfcnvrt@llu+6,c
  2875  001122  6A71               	clrf	vfpfcnvrt@llu+7,c
  2876                           
  2877                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1143:             return xtoa
      +                          (fp, llu, 'x');
  2878  001124  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  2879  001128  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2880  00112C  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  2881  001130  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2882  001134  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2883  001138  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2884  00113C  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2885  001140  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2886  001144  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2887  001148  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2888  00114C  0E78               	movlw	120
  2889  00114E  6E26               	movwf	xtoa@x,c
  2890  001150  EC8E  F010         	call	_xtoa	;wreg free
  2891  001154  D1B4               	goto	L7
  2892  001156                     l3932:
  2893  001156  FFFF               	dw	65535	; assembler added errata NOP
  2894                           
  2895                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  2896  001158  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2897  00115C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2898  001160  CFDE FFF6          	movff	postinc2,tblptrl
  2899  001164  CFDD FFF7          	movff	postdec2,tblptrh
  2900  001168                     	if	0	;tblptru may be non-zero
  2901  001168                     	endif
  2902  001168                     	if	0	;tblptru may be non-zero
  2903  001168                     	endif
  2904  001168  0008               	tblrd		*
  2905  00116A  FFFF               	dw	65535	; errata NOP
  2906  00116C  50F5               	movf	tablat,w,c
  2907  00116E  0A73               	xorlw	115
  2908  001170  A4D8               	btfss	status,2,c
  2909  001172  D02A               	goto	l3940
  2910                           
  2911                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  2912  001174  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2913  001178  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2914  00117C  2ADE               	incf	postinc2,f,c
  2915  00117E  0E00               	movlw	0
  2916  001180  22DD               	addwfc	postdec2,f,c
  2917                           
  2918                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  2919  001182  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2920  001186  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2921  00118A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2922  00118E  0E02               	movlw	2
  2923  001190  26DE               	addwf	postinc2,f,c
  2924  001192  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2925  001196  0E00               	movlw	0
  2926  001198  22DD               	addwfc	postdec2,f,c
  2927  00119A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2928  00119E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2929  0011A2  CFDE F057          	movff	postinc2,vfpfcnvrt@cp
  2930  0011A6  CFDD F058          	movff	postdec2,vfpfcnvrt@cp+1
  2931                           
  2932                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  2933  0011AA  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  2934  0011AE  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  2935  0011B2  C057  F00C         	movff	vfpfcnvrt@cp,stoa@s
  2936  0011B6  C058  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  2937  0011BA  EC77  F015         	call	_stoa	;wreg free
  2938  0011BE  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  2939  0011C2  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  2940  0011C6  D30F               	goto	l479
  2941  0011C8                     l3940:
  2942  0011C8  FFFF               	dw	65535	; assembler added errata NOP
  2943                           
  2944                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1161:         if (!strncmp(*f
      +                          mt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  2945  0011CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2946  0011CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2947  0011D2  CFDE F001          	movff	postinc2,strncmp@_l
  2948  0011D6  CFDD F002          	movff	postdec2,strncmp@_l+1
  2949  0011DA  0E15               	movlw	low STR_79
  2950  0011DC  6E03               	movwf	strncmp@_r,c
  2951  0011DE  0E06               	movlw	high STR_79
  2952  0011E0  6E04               	movwf	strncmp@_r+1,c
  2953  0011E2  0E00               	movlw	0
  2954  0011E4  6E06               	movwf	strncmp@n+1,c
  2955  0011E6  0E03               	movlw	3
  2956  0011E8  6E05               	movwf	strncmp@n,c
  2957  0011EA  ECF2  F017         	call	_strncmp	;wreg free
  2958  0011EE  5001               	movf	?_strncmp,w,c
  2959  0011F0  1002               	iorwf	?_strncmp+1,w,c
  2960  0011F2  A4D8               	btfss	status,2,c
  2961  0011F4  D040               	goto	l3948
  2962                           
  2963                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1163:             *fmt += ((s
      +                          izeof("hhu")/sizeof("hhu"[0]))-1);
  2964  0011F6  0E03               	movlw	3
  2965  0011F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2966  0011FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2967  001200  26DE               	addwf	postinc2,f,c
  2968  001202  0E00               	movlw	0
  2969  001204  22DD               	addwfc	postdec2,f,c
  2970                           
  2971                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1164:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2972  001206  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2973  00120A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2974  00120E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2975  001212  0E02               	movlw	2
  2976  001214  26DE               	addwf	postinc2,f,c
  2977  001216  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2978  00121A  0E00               	movlw	0
  2979  00121C  22DD               	addwfc	postdec2,f,c
  2980  00121E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2981  001222  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2982  001226  50DF               	movf	indf2,w,c
  2983  001228  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2984  00122A  504B               	movf	??_vfpfcnvrt+2,w,c
  2985  00122C  6E6A               	movwf	vfpfcnvrt@llu,c
  2986  00122E  6A6B               	clrf	vfpfcnvrt@llu+1,c
  2987  001230                     L8:
  2988  001230  FFFF               	dw	65535	; assembler added errata NOP
  2989  001232  6A6C               	clrf	vfpfcnvrt@llu+2,c
  2990  001234  6A6D               	clrf	vfpfcnvrt@llu+3,c
  2991  001236                     L9:
  2992  001236  FFFF               	dw	65535	; assembler added errata NOP
  2993  001238  6A6E               	clrf	vfpfcnvrt@llu+4,c
  2994  00123A  6A6F               	clrf	vfpfcnvrt@llu+5,c
  2995  00123C  6A70               	clrf	vfpfcnvrt@llu+6,c
  2996  00123E  6A71               	clrf	vfpfcnvrt@llu+7,c
  2997                           
  2998                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1166:             return utoa
      +                          (fp, llu);
  2999  001240  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  3000  001244  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3001  001248  C06A  F01E         	movff	vfpfcnvrt@llu,utoa@d
  3002  00124C  C06B  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3003  001250  C06C  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3004  001254  C06D  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3005  001258  C06E  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3006  00125C  C06F  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3007  001260  C070  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3008  001264  C071  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3009  001268  ECBA  F011         	call	_utoa	;wreg free
  3010  00126C  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  3011  001270  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  3012  001274  D2B8               	goto	l479
  3013  001276                     l3948:
  3014  001276  FFFF               	dw	65535	; assembler added errata NOP
  3015                           
  3016                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1172:         if (!strncmp(*f
      +                          mt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  3017  001278  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3018  00127C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3019  001280  CFDE F001          	movff	postinc2,strncmp@_l
  3020  001284  CFDD F002          	movff	postdec2,strncmp@_l+1
  3021  001288  0E16               	movlw	low (STR_79+1)
  3022  00128A  6E03               	movwf	strncmp@_r,c
  3023  00128C  0E06               	movlw	high (STR_79+1)
  3024  00128E  6E04               	movwf	strncmp@_r+1,c
  3025  001290  0E00               	movlw	0
  3026  001292  6E06               	movwf	strncmp@n+1,c
  3027  001294  0E02               	movlw	2
  3028  001296  6E05               	movwf	strncmp@n,c
  3029  001298  ECF2  F017         	call	_strncmp	;wreg free
  3030  00129C  5001               	movf	?_strncmp,w,c
  3031  00129E  1002               	iorwf	?_strncmp+1,w,c
  3032  0012A0  B4D8               	btfsc	status,2,c
  3033  0012A2  D06B               	goto	u4200
  3034                           
  3035                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  3036                           
  3037                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1175:             llu = (unsi
      +                          gned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3038                           
  3039                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1174:             *fmt += ((s
      +                          izeof("hu")/sizeof("hu"[0]))-1);
  3040  0012A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3041  0012A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3042  0012AC  CFDE FFF6          	movff	postinc2,tblptrl
  3043  0012B0  CFDD FFF7          	movff	postdec2,tblptrh
  3044  0012B4                     	if	0	;tblptru may be non-zero
  3045  0012B4                     	endif
  3046  0012B4                     	if	0	;tblptru may be non-zero
  3047  0012B4                     	endif
  3048  0012B4  0008               	tblrd		*
  3049  0012B6  FFFF               	dw	65535	; errata NOP
  3050  0012B8  50F5               	movf	tablat,w,c
  3051  0012BA  0A75               	xorlw	117
  3052  0012BC  A4D8               	btfss	status,2,c
  3053  0012BE  D006               	goto	l3964
  3054                           
  3055                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  3056  0012C0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3057  0012C4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3058  0012C8  2ADE               	incf	postinc2,f,c
  3059  0012CA  D05E               	goto	L18
  3060  0012CC                     l3964:
  3061  0012CC  FFFF               	dw	65535	; assembler added errata NOP
  3062                           
  3063                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  3064  0012CE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3065  0012D2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3066  0012D6  CFDE F001          	movff	postinc2,strncmp@_l
  3067  0012DA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3068  0012DE  0E1E               	movlw	low (STR_1+1)
  3069  0012E0  6E03               	movwf	strncmp@_r,c
  3070  0012E2  0E06               	movlw	high (STR_1+1)
  3071  0012E4  6E04               	movwf	strncmp@_r+1,c
  3072  0012E6  0E00               	movlw	0
  3073  0012E8  6E06               	movwf	strncmp@n+1,c
  3074  0012EA  0E02               	movlw	2
  3075  0012EC  6E05               	movwf	strncmp@n,c
  3076  0012EE  ECF2  F017         	call	_strncmp	;wreg free
  3077  0012F2  5001               	movf	?_strncmp,w,c
  3078  0012F4  1002               	iorwf	?_strncmp+1,w,c
  3079  0012F6  A4D8               	btfss	status,2,c
  3080  0012F8  D029               	goto	l3972
  3081                           
  3082                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  3083  0012FA  0E02               	movlw	2
  3084  0012FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3085  001300  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3086  001304  26DE               	addwf	postinc2,f,c
  3087  001306  0E00               	movlw	0
  3088  001308  22DD               	addwfc	postdec2,f,c
  3089                           
  3090                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3091  00130A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3092  00130E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3093  001312  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3094  001316  0E04               	movlw	4
  3095  001318  26DE               	addwf	postinc2,f,c
  3096  00131A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3097  00131E  0E00               	movlw	0
  3098  001320  22DD               	addwfc	postdec2,f,c
  3099  001322  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3100  001326  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3101  00132A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3102  00132E  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3103  001332  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3104  001336  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3105  00133A  504B               	movf	??_vfpfcnvrt+2,w,c
  3106  00133C  6E6A               	movwf	vfpfcnvrt@llu,c
  3107  00133E  504C               	movf	??_vfpfcnvrt+3,w,c
  3108  001340  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3109  001342  504D               	movf	??_vfpfcnvrt+4,w,c
  3110  001344  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3111  001346  504E               	movf	??_vfpfcnvrt+5,w,c
  3112  001348  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3113  00134A  D775               	goto	L9
  3114  00134C                     l3972:
  3115  00134C  FFFF               	dw	65535	; assembler added errata NOP
  3116                           
  3117                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1236:         if (!strncmp(*f
      +                          mt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  3118  00134E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3119  001352  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3120  001356  CFDE F001          	movff	postinc2,strncmp@_l
  3121  00135A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3122  00135E  0E3F               	movlw	low STR_94
  3123  001360  6E03               	movwf	strncmp@_r,c
  3124  001362  0E06               	movlw	high STR_94
  3125  001364  6E04               	movwf	strncmp@_r+1,c
  3126  001366  0E00               	movlw	0
  3127  001368  6E06               	movwf	strncmp@n+1,c
  3128  00136A  0E02               	movlw	2
  3129  00136C  6E05               	movwf	strncmp@n,c
  3130  00136E  ECF2  F017         	call	_strncmp	;wreg free
  3131  001372  5001               	movf	?_strncmp,w,c
  3132  001374  1002               	iorwf	?_strncmp+1,w,c
  3133  001376  A4D8               	btfss	status,2,c
  3134  001378  D023               	goto	l3980
  3135  00137A                     u4200:
  3136  00137A  FFFF               	dw	65535	; assembler added errata NOP
  3137                           
  3138                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1238:             *fmt += ((s
      +                          izeof("zu")/sizeof("zu"[0]))-1);
  3139  00137C  0E02               	movlw	2
  3140  00137E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3141  001382  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3142  001386  26DE               	addwf	postinc2,f,c
  3143  001388                     L18:
  3144  001388  FFFF               	dw	65535	; assembler added errata NOP
  3145  00138A  0E00               	movlw	0
  3146  00138C  22DD               	addwfc	postdec2,f,c
  3147                           
  3148                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1239:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3149  00138E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3150  001392  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3151  001396  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3152  00139A  0E02               	movlw	2
  3153  00139C  26DE               	addwf	postinc2,f,c
  3154  00139E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3155  0013A2  0E00               	movlw	0
  3156  0013A4  22DD               	addwfc	postdec2,f,c
  3157  0013A6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3158  0013AA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3159  0013AE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3160  0013B2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3161  0013B6  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3162  0013BA  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3163  0013BE  D738               	goto	L8
  3164  0013C0                     l3980:
  3165  0013C0  FFFF               	dw	65535	; assembler added errata NOP
  3166                           
  3167                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1249:         if (!strncmp(*f
      +                          mt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((sizeof("hhX"
      +                          )/sizeof("hhX"[0]))-1))) {
  3168  0013C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3169  0013C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3170  0013CA  CFDE F001          	movff	postinc2,strncmp@_l
  3171  0013CE  CFDD F002          	movff	postdec2,strncmp@_l+1
  3172  0013D2  0E19               	movlw	low STR_99
  3173  0013D4  6E03               	movwf	strncmp@_r,c
  3174  0013D6  0E06               	movlw	high STR_99
  3175  0013D8  6E04               	movwf	strncmp@_r+1,c
  3176  0013DA  0E00               	movlw	0
  3177  0013DC  6E06               	movwf	strncmp@n+1,c
  3178  0013DE  0E03               	movlw	3
  3179  0013E0  6E05               	movwf	strncmp@n,c
  3180  0013E2  ECF2  F017         	call	_strncmp	;wreg free
  3181  0013E6  5001               	movf	?_strncmp,w,c
  3182  0013E8  1002               	iorwf	?_strncmp+1,w,c
  3183  0013EA  B4D8               	btfsc	status,2,c
  3184  0013EC  D016               	goto	u4220
  3185  0013EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3186  0013F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3187  0013F6  CFDE F001          	movff	postinc2,strncmp@_l
  3188  0013FA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3189  0013FE  0E01               	movlw	low STR_103
  3190  001400  6E03               	movwf	strncmp@_r,c
  3191  001402  0E06               	movlw	high STR_103
  3192  001404  6E04               	movwf	strncmp@_r+1,c
  3193  001406  0E00               	movlw	0
  3194  001408  6E06               	movwf	strncmp@n+1,c
  3195  00140A  0E03               	movlw	3
  3196  00140C  6E05               	movwf	strncmp@n,c
  3197  00140E  ECF2  F017         	call	_strncmp	;wreg free
  3198  001412  5001               	movf	?_strncmp,w,c
  3199  001414  1002               	iorwf	?_strncmp+1,w,c
  3200  001416  A4D8               	btfss	status,2,c
  3201  001418  D058               	goto	l3994
  3202  00141A                     u4220:
  3203  00141A  FFFF               	dw	65535	; assembler added errata NOP
  3204                           
  3205                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1250: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1252:             c = (*fmt)[2];
  3206  00141C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3207  001420  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3208  001424  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3209  001428  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3210  00142C  0E02               	movlw	2
  3211  00142E  2649               	addwf	??_vfpfcnvrt,f,c
  3212  001430  0E00               	movlw	0
  3213  001432  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3214  001434  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3215  001438  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3216  00143C                     	if	0	;tblptru may be non-zero
  3217  00143C                     	endif
  3218  00143C                     	if	0	;tblptru may be non-zero
  3219  00143C                     	endif
  3220  00143C  0008               	tblrd		*
  3221  00143E  FFFF               	dw	65535	; errata NOP
  3222  001440  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3223                           
  3224                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1253:             *fmt += ((s
      +                          izeof("hhx")/sizeof("hhx"[0]))-1);
  3225  001444  0E03               	movlw	3
  3226  001446  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3227  00144A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3228  00144E  26DE               	addwf	postinc2,f,c
  3229  001450  0E00               	movlw	0
  3230  001452  22DD               	addwfc	postdec2,f,c
  3231                           
  3232                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1254:             llu = (unsi
      +                          gned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3233  001454  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3234  001458  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3235  00145C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3236  001460  0E02               	movlw	2
  3237  001462  26DE               	addwf	postinc2,f,c
  3238  001464  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3239  001468  0E00               	movlw	0
  3240  00146A  22DD               	addwfc	postdec2,f,c
  3241  00146C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3242  001470  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3243  001474  50DF               	movf	indf2,w,c
  3244  001476  6E4B               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3245  001478  504B               	movf	??_vfpfcnvrt+2,w,c
  3246  00147A  6E6A               	movwf	vfpfcnvrt@llu,c
  3247  00147C  6A6B               	clrf	vfpfcnvrt@llu+1,c
  3248  00147E                     L10:
  3249  00147E  FFFF               	dw	65535	; assembler added errata NOP
  3250  001480  6A6C               	clrf	vfpfcnvrt@llu+2,c
  3251  001482  6A6D               	clrf	vfpfcnvrt@llu+3,c
  3252  001484                     L11:
  3253  001484  FFFF               	dw	65535	; assembler added errata NOP
  3254  001486  6A6E               	clrf	vfpfcnvrt@llu+4,c
  3255  001488  6A6F               	clrf	vfpfcnvrt@llu+5,c
  3256  00148A  6A70               	clrf	vfpfcnvrt@llu+6,c
  3257  00148C  6A71               	clrf	vfpfcnvrt@llu+7,c
  3258                           
  3259                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1256:             return xtoa
      +                          (fp, llu, c);
  3260  00148E  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3261  001492  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3262  001496  C06A  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3263  00149A  C06B  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3264  00149E  C06C  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3265  0014A2  C06D  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3266  0014A6  C06E  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3267  0014AA  C06F  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3268  0014AE  C070  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3269  0014B2  C071  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3270  0014B6  C069  F026         	movff	vfpfcnvrt@c,xtoa@x
  3271  0014BA  EC8E  F010         	call	_xtoa	;wreg free
  3272  0014BE                     L7:
  3273  0014BE  FFFF               	dw	65535	; assembler added errata NOP
  3274  0014C0  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3275  0014C4  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3276  0014C8  D18E               	goto	l479
  3277  0014CA                     l3994:
  3278  0014CA  FFFF               	dw	65535	; assembler added errata NOP
  3279                           
  3280                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1262:         if (!strncmp(*f
      +                          mt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((sizeof("hX")/siz
      +                          eof("hX"[0]))-1))) {
  3281  0014CC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3282  0014D0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3283  0014D4  CFDE F001          	movff	postinc2,strncmp@_l
  3284  0014D8  CFDD F002          	movff	postdec2,strncmp@_l+1
  3285  0014DC  0E1A               	movlw	low (STR_99+1)
  3286  0014DE  6E03               	movwf	strncmp@_r,c
  3287  0014E0  0E06               	movlw	high (STR_99+1)
  3288  0014E2  6E04               	movwf	strncmp@_r+1,c
  3289  0014E4  0E00               	movlw	0
  3290  0014E6  6E06               	movwf	strncmp@n+1,c
  3291  0014E8  0E02               	movlw	2
  3292  0014EA  6E05               	movwf	strncmp@n,c
  3293  0014EC  ECF2  F017         	call	_strncmp	;wreg free
  3294  0014F0  5001               	movf	?_strncmp,w,c
  3295  0014F2  1002               	iorwf	?_strncmp+1,w,c
  3296  0014F4  B4D8               	btfsc	status,2,c
  3297  0014F6  D016               	goto	u4240
  3298  0014F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3299  0014FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3300  001500  CFDE F001          	movff	postinc2,strncmp@_l
  3301  001504  CFDD F002          	movff	postdec2,strncmp@_l+1
  3302  001508  0E02               	movlw	low (STR_103+1)
  3303  00150A  6E03               	movwf	strncmp@_r,c
  3304  00150C  0E06               	movlw	high (STR_103+1)
  3305  00150E  6E04               	movwf	strncmp@_r+1,c
  3306  001510  0E00               	movlw	0
  3307  001512  6E06               	movwf	strncmp@n+1,c
  3308  001514  0E02               	movlw	2
  3309  001516  6E05               	movwf	strncmp@n,c
  3310  001518  ECF2  F017         	call	_strncmp	;wreg free
  3311  00151C  5001               	movf	?_strncmp,w,c
  3312  00151E  1002               	iorwf	?_strncmp+1,w,c
  3313  001520  A4D8               	btfss	status,2,c
  3314  001522  D014               	goto	l4008
  3315  001524                     u4240:
  3316  001524  FFFF               	dw	65535	; assembler added errata NOP
  3317                           
  3318                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1263: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1265:             c = (*fmt)[1];
  3319  001526  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3320  00152A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3321  00152E  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3322  001532  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3323  001536  0E01               	movlw	1
  3324  001538  2649               	addwf	??_vfpfcnvrt,f,c
  3325  00153A  0E00               	movlw	0
  3326  00153C  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3327  00153E  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3328  001542  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3329  001546                     	if	0	;tblptru may be non-zero
  3330  001546                     	endif
  3331  001546                     	if	0	;tblptru may be non-zero
  3332  001546                     	endif
  3333  001546  0008               	tblrd		*
  3334  001548  FFFF               	dw	65535	; errata NOP
  3335  00154A  D0DB               	goto	L26
  3336  00154C                     l4008:
  3337  00154C  FFFF               	dw	65535	; assembler added errata NOP
  3338                           
  3339                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  3340  00154E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3341  001552  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3342  001556  CFDE FFF6          	movff	postinc2,tblptrl
  3343  00155A  CFDD FFF7          	movff	postdec2,tblptrh
  3344  00155E                     	if	0	;tblptru may be non-zero
  3345  00155E                     	endif
  3346  00155E                     	if	0	;tblptru may be non-zero
  3347  00155E                     	endif
  3348  00155E  0008               	tblrd		*
  3349  001560  FFFF               	dw	65535	; errata NOP
  3350  001562  50F5               	movf	tablat,w,c
  3351  001564  0A78               	xorlw	120
  3352  001566  B4D8               	btfsc	status,2,c
  3353  001568  D00E               	goto	u4260
  3354  00156A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3355  00156E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3356  001572  CFDE FFF6          	movff	postinc2,tblptrl
  3357  001576  CFDD FFF7          	movff	postdec2,tblptrh
  3358  00157A                     	if	0	;tblptru may be non-zero
  3359  00157A                     	endif
  3360  00157A                     	if	0	;tblptru may be non-zero
  3361  00157A                     	endif
  3362  00157A  0008               	tblrd		*
  3363  00157C  FFFF               	dw	65535	; errata NOP
  3364  00157E  50F5               	movf	tablat,w,c
  3365  001580  0A58               	xorlw	88
  3366  001582  A4D8               	btfss	status,2,c
  3367  001584  D013               	goto	l4022
  3368  001586                     u4260:
  3369  001586  FFFF               	dw	65535	; assembler added errata NOP
  3370                           
  3371                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  3372  001588  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3373  00158C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3374  001590  CFDE FFF6          	movff	postinc2,tblptrl
  3375  001594  CFDD FFF7          	movff	postdec2,tblptrh
  3376  001598                     	if	0	;tblptru may be non-zero
  3377  001598                     	endif
  3378  001598                     	if	0	;tblptru may be non-zero
  3379  001598                     	endif
  3380  001598  0008               	tblrd		*
  3381  00159A  FFFF               	dw	65535	; errata NOP
  3382  00159C  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3383                           
  3384                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  3385  0015A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3386  0015A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3387  0015A8  2ADE               	incf	postinc2,f,c
  3388  0015AA  D0B4               	goto	L25
  3389  0015AC                     l4022:
  3390  0015AC  FFFF               	dw	65535	; assembler added errata NOP
  3391                           
  3392                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  3393  0015AE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3394  0015B2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3395  0015B6  CFDE F001          	movff	postinc2,strncmp@_l
  3396  0015BA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3397  0015BE  0E42               	movlw	low STR_117
  3398  0015C0  6E03               	movwf	strncmp@_r,c
  3399  0015C2  0E06               	movlw	high STR_117
  3400  0015C4  6E04               	movwf	strncmp@_r+1,c
  3401  0015C6  0E00               	movlw	0
  3402  0015C8  6E06               	movwf	strncmp@n+1,c
  3403  0015CA  0E02               	movlw	2
  3404  0015CC  6E05               	movwf	strncmp@n,c
  3405  0015CE  ECF2  F017         	call	_strncmp	;wreg free
  3406  0015D2  5001               	movf	?_strncmp,w,c
  3407  0015D4  1002               	iorwf	?_strncmp+1,w,c
  3408  0015D6  B4D8               	btfsc	status,2,c
  3409  0015D8  D016               	goto	u4280
  3410  0015DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3411  0015DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3412  0015E2  CFDE F001          	movff	postinc2,strncmp@_l
  3413  0015E6  CFDD F002          	movff	postdec2,strncmp@_l+1
  3414  0015EA  0E21               	movlw	low STR_121
  3415  0015EC  6E03               	movwf	strncmp@_r,c
  3416  0015EE  0E06               	movlw	high STR_121
  3417  0015F0  6E04               	movwf	strncmp@_r+1,c
  3418  0015F2  0E00               	movlw	0
  3419  0015F4  6E06               	movwf	strncmp@n+1,c
  3420  0015F6  0E02               	movlw	2
  3421  0015F8  6E05               	movwf	strncmp@n,c
  3422  0015FA  ECF2  F017         	call	_strncmp	;wreg free
  3423  0015FE  5001               	movf	?_strncmp,w,c
  3424  001600  1002               	iorwf	?_strncmp+1,w,c
  3425  001602  A4D8               	btfss	status,2,c
  3426  001604  D03E               	goto	l4036
  3427  001606                     u4280:
  3428  001606  FFFF               	dw	65535	; assembler added errata NOP
  3429                           
  3430                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  3431  001608  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3432  00160C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3433  001610  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3434  001614  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3435  001618  0E01               	movlw	1
  3436  00161A  2649               	addwf	??_vfpfcnvrt,f,c
  3437  00161C  0E00               	movlw	0
  3438  00161E  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3439  001620  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3440  001624  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3441  001628                     	if	0	;tblptru may be non-zero
  3442  001628                     	endif
  3443  001628                     	if	0	;tblptru may be non-zero
  3444  001628                     	endif
  3445  001628  0008               	tblrd		*
  3446  00162A  FFFF               	dw	65535	; errata NOP
  3447  00162C  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3448                           
  3449                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  3450  001630  0E02               	movlw	2
  3451  001632  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3452  001636  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3453  00163A  26DE               	addwf	postinc2,f,c
  3454  00163C  0E00               	movlw	0
  3455  00163E  22DD               	addwfc	postdec2,f,c
  3456                           
  3457                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  3458  001640  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3459  001644  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3460  001648  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3461  00164C  0E04               	movlw	4
  3462  00164E  26DE               	addwf	postinc2,f,c
  3463  001650  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3464  001654  0E00               	movlw	0
  3465  001656  22DD               	addwfc	postdec2,f,c
  3466  001658  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3467  00165C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3468  001660  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3469  001664  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  3470  001668  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  3471  00166C  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  3472  001670  504B               	movf	??_vfpfcnvrt+2,w,c
  3473  001672  6E6A               	movwf	vfpfcnvrt@llu,c
  3474  001674  504C               	movf	??_vfpfcnvrt+3,w,c
  3475  001676  6E6B               	movwf	vfpfcnvrt@llu+1,c
  3476  001678  504D               	movf	??_vfpfcnvrt+4,w,c
  3477  00167A  6E6C               	movwf	vfpfcnvrt@llu+2,c
  3478  00167C  504E               	movf	??_vfpfcnvrt+5,w,c
  3479  00167E  6E6D               	movwf	vfpfcnvrt@llu+3,c
  3480  001680  D701               	goto	L11
  3481  001682                     l4036:
  3482  001682  FFFF               	dw	65535	; assembler added errata NOP
  3483                           
  3484                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1337:         if (!strncmp(*f
      +                          mt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((sizeof("zX")/siz
      +                          eof("zX"[0]))-1))) {
  3485  001684  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3486  001688  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3487  00168C  CFDE F001          	movff	postinc2,strncmp@_l
  3488  001690  CFDD F002          	movff	postdec2,strncmp@_l+1
  3489  001694  0E45               	movlw	low STR_126
  3490  001696  6E03               	movwf	strncmp@_r,c
  3491  001698  0E06               	movlw	high STR_126
  3492  00169A  6E04               	movwf	strncmp@_r+1,c
  3493  00169C  0E00               	movlw	0
  3494  00169E  6E06               	movwf	strncmp@n+1,c
  3495  0016A0  0E02               	movlw	2
  3496  0016A2  6E05               	movwf	strncmp@n,c
  3497  0016A4  ECF2  F017         	call	_strncmp	;wreg free
  3498  0016A8  5001               	movf	?_strncmp,w,c
  3499  0016AA  1002               	iorwf	?_strncmp+1,w,c
  3500  0016AC  B4D8               	btfsc	status,2,c
  3501  0016AE  D016               	goto	u4300
  3502  0016B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3503  0016B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3504  0016B8  CFDE F001          	movff	postinc2,strncmp@_l
  3505  0016BC  CFDD F002          	movff	postdec2,strncmp@_l+1
  3506  0016C0  0E24               	movlw	low STR_130
  3507  0016C2  6E03               	movwf	strncmp@_r,c
  3508  0016C4  0E06               	movlw	high STR_130
  3509  0016C6  6E04               	movwf	strncmp@_r+1,c
  3510  0016C8  0E00               	movlw	0
  3511  0016CA  6E06               	movwf	strncmp@n+1,c
  3512  0016CC  0E02               	movlw	2
  3513  0016CE  6E05               	movwf	strncmp@n,c
  3514  0016D0  ECF2  F017         	call	_strncmp	;wreg free
  3515  0016D4  5001               	movf	?_strncmp,w,c
  3516  0016D6  1002               	iorwf	?_strncmp+1,w,c
  3517  0016D8  A4D8               	btfss	status,2,c
  3518  0016DA  D038               	goto	l4050
  3519  0016DC                     u4300:
  3520  0016DC  FFFF               	dw	65535	; assembler added errata NOP
  3521                           
  3522                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1338: ;/opt/microchip/xc8/v2.
      +                          05/pic/sources/c99/common/doprnt.c: 1340:             c = (*fmt)[1];
  3523  0016DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3524  0016E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3525  0016E6  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3526  0016EA  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3527  0016EE  0E01               	movlw	1
  3528  0016F0  2649               	addwf	??_vfpfcnvrt,f,c
  3529  0016F2  0E00               	movlw	0
  3530  0016F4  224A               	addwfc	??_vfpfcnvrt+1,f,c
  3531  0016F6  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3532  0016FA  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3533  0016FE                     	if	0	;tblptru may be non-zero
  3534  0016FE                     	endif
  3535  0016FE                     	if	0	;tblptru may be non-zero
  3536  0016FE                     	endif
  3537  0016FE  0008               	tblrd		*
  3538  001700  FFFF               	dw	65535	; errata NOP
  3539  001702                     L26:
  3540  001702  FFFF               	dw	65535	; assembler added errata NOP
  3541  001704  CFF5 F069          	movff	tablat,vfpfcnvrt@c
  3542                           
  3543                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1341:             *fmt += ((s
      +                          izeof("zx")/sizeof("zx"[0]))-1);
  3544  001708  0E02               	movlw	2
  3545  00170A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3546  00170E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3547  001712  26DE               	addwf	postinc2,f,c
  3548  001714                     L25:
  3549  001714  FFFF               	dw	65535	; assembler added errata NOP
  3550  001716  0E00               	movlw	0
  3551  001718  22DD               	addwfc	postdec2,f,c
  3552                           
  3553                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1342:             llu = (unsi
      +                          gned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3554  00171A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3555  00171E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3556  001722  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3557  001726  0E02               	movlw	2
  3558  001728  26DE               	addwf	postinc2,f,c
  3559  00172A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3560  00172E  0E00               	movlw	0
  3561  001730  22DD               	addwfc	postdec2,f,c
  3562  001732  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3563  001736  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3564  00173A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3565  00173E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3566  001742  C04B  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3567  001746  C04C  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3568  00174A  D699               	goto	L10
  3569  00174C                     l4050:
  3570  00174C  FFFF               	dw	65535	; assembler added errata NOP
  3571                           
  3572                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  3573  00174E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3574  001752  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3575  001756  CFDE FFF6          	movff	postinc2,tblptrl
  3576  00175A  CFDD FFF7          	movff	postdec2,tblptrh
  3577  00175E                     	if	0	;tblptru may be non-zero
  3578  00175E                     	endif
  3579  00175E                     	if	0	;tblptru may be non-zero
  3580  00175E                     	endif
  3581  00175E  0008               	tblrd		*
  3582  001760  FFFF               	dw	65535	; errata NOP
  3583  001762  50F5               	movf	tablat,w,c
  3584  001764  0A25               	xorlw	37
  3585  001766  A4D8               	btfss	status,2,c
  3586  001768  D018               	goto	l4060
  3587                           
  3588                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  3589  00176A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3590  00176E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3591  001772  2ADE               	incf	postinc2,f,c
  3592  001774  0E00               	movlw	0
  3593  001776  22DD               	addwfc	postdec2,f,c
  3594                           
  3595                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  3596  001778  0E00               	movlw	0
  3597  00177A  6E02               	movwf	fputc@c+1,c
  3598  00177C  0E25               	movlw	37
  3599  00177E  6E01               	movwf	fputc@c,c
  3600  001780  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3601  001784  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3602  001788  ECB1  F018         	call	_fputc	;wreg free
  3603  00178C                     l4056:
  3604  00178C  FFFF               	dw	65535	; assembler added errata NOP
  3605                           
  3606                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  3607  00178E  0E00               	movlw	0
  3608  001790  6E44               	movwf	?_vfpfcnvrt+1,c
  3609  001792  0E01               	movlw	1
  3610  001794                     L5:
  3611  001794  FFFF               	dw	65535	; assembler added errata NOP
  3612  001796  6E43               	movwf	?_vfpfcnvrt,c
  3613  001798  D026               	goto	l479
  3614  00179A                     l4060:
  3615  00179A  FFFF               	dw	65535	; assembler added errata NOP
  3616                           
  3617                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  3618  00179C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3619  0017A0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3620  0017A4  2ADE               	incf	postinc2,f,c
  3621  0017A6  0E00               	movlw	0
  3622  0017A8  22DD               	addwfc	postdec2,f,c
  3623  0017AA  EFA2  F007         	goto	l3880
  3624  0017AE                     l4066:
  3625  0017AE  FFFF               	dw	65535	; assembler added errata NOP
  3626                           
  3627                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  3628  0017B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3629  0017B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3630  0017B8  CFDE FFF6          	movff	postinc2,tblptrl
  3631  0017BC  CFDD FFF7          	movff	postdec2,tblptrh
  3632  0017C0                     	if	0	;tblptru may be non-zero
  3633  0017C0                     	endif
  3634  0017C0                     	if	0	;tblptru may be non-zero
  3635  0017C0                     	endif
  3636  0017C0  0008               	tblrd		*
  3637  0017C2  FFFF               	dw	65535	; errata NOP
  3638  0017C4  50F5               	movf	tablat,w,c
  3639  0017C6  6E01               	movwf	fputc@c,c
  3640  0017C8  6A02               	clrf	fputc@c+1,c
  3641  0017CA  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3642  0017CE  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3643  0017D2  ECB1  F018         	call	_fputc	;wreg free
  3644                           
  3645                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  3646  0017D6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3647  0017DA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3648  0017DE  2ADE               	incf	postinc2,f,c
  3649  0017E0  0E00               	movlw	0
  3650  0017E2  22DD               	addwfc	postdec2,f,c
  3651  0017E4  D7D3               	goto	l4056
  3652  0017E6                     l479:
  3653  0017E6  FFFF               	dw	65535	; assembler added errata NOP
  3654  0017E8  0012               	return		;funcret
  3655  0017EA  FFFF               	dw	65535	; errata NOP
  3656  0017EC                     __end_of_vfpfcnvrt:
  3657                           	opt callstack 0
  3658                           
  3659 ;; *************** function _xtoa *****************
  3660 ;; Defined at:
  3661 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3664 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  3665 ;;  d               8   29[COMRAM] unsigned long long 
  3666 ;;  x               1   37[COMRAM] unsigned char 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  n               8   54[COMRAM] unsigned long long 
  3669 ;;  c               2   64[COMRAM] int 
  3670 ;;  i               2   62[COMRAM] int 
  3671 ;;  w               2   52[COMRAM] int 
  3672 ;;  p               2   50[COMRAM] int 
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  2   27[COMRAM] int 
  3675 ;; Registers used:
  3676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3682 ;;      Params:        11       0       0       0       0       0       0
  3683 ;;      Locals:        20       0       0       0       0       0       0
  3684 ;;      Temps:          8       0       0       0       0       0       0
  3685 ;;      Totals:        39       0       0       0       0       0       0
  3686 ;;Total ram usage:       39 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; Hardware stack levels required when called:    6
  3689 ;; This function calls:
  3690 ;;		_isalpha
  3691 ;;		_isupper
  3692 ;;		_pad
  3693 ;;		_toupper
  3694 ;; This function is called by:
  3695 ;;		_vfpfcnvrt
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text6
  3700  00211C                     __ptext6:
  3701                           	opt callstack 0
  3702  00211C                     _xtoa:
  3703                           	opt callstack 0
  3704  00211C  FFFF               	dw	65535	; assembler added errata NOP
  3705                           
  3706                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  3707                           
  3708                           ;incstack = 0
  3709  00211E  0100               	movlb	0	; () banked
  3710  002120  AF90               	btfss	(_prec+1)& (0+255),7,b
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  3714  002122  9391               	bcf	_flags& (0+255),1,b
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  3718  002124  BF90               	btfsc	(_prec+1)& (0+255),7,b
  3719  002126  D005               	goto	u3520
  3720  002128  5190               	movf	(_prec+1)& (0+255),w,b
  3721  00212A  E109               	bnz	l417
  3722  00212C  058F               	decf	_prec& (0+255),w,b
  3723  00212E  B0D8               	btfsc	status,0,c
  3724  002130  D006               	goto	l417
  3725  002132                     u3520:
  3726  002132  FFFF               	dw	65535	; assembler added errata NOP
  3727                           
  3728                           ; BSR set to: 0
  3729  002134  0E00               	movlw	0
  3730  002136  6E34               	movwf	xtoa@p+1,c
  3731  002138  0E01               	movlw	1
  3732  00213A  6E33               	movwf	xtoa@p,c
  3733  00213C  D005               	goto	l419
  3734  00213E                     l417:
  3735  00213E  FFFF               	dw	65535	; assembler added errata NOP
  3736                           
  3737                           ; BSR set to: 0
  3738  002140  C08F  F033         	movff	_prec,xtoa@p
  3739  002144  C090  F034         	movff	_prec+1,xtoa@p+1
  3740  002148                     l419:
  3741  002148  FFFF               	dw	65535	; assembler added errata NOP
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  3745  00214A  C08D  F035         	movff	_width,xtoa@w
  3746  00214E  C08E  F036         	movff	_width+1,xtoa@w+1
  3747                           
  3748                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  3749  002152  A991               	btfss	_flags& (0+255),4,b
  3750  002154  D004               	goto	l3580
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  3754  002156  0EFE               	movlw	254
  3755  002158  2635               	addwf	xtoa@w,f,c
  3756  00215A  0EFF               	movlw	255
  3757  00215C  2236               	addwfc	xtoa@w+1,f,c
  3758  00215E                     l3580:
  3759  00215E  FFFF               	dw	65535	; assembler added errata NOP
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  3763  002160  C01E  F037         	movff	xtoa@d,xtoa@n
  3764  002164  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  3765  002168  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  3766  00216C  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  3767  002170  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  3768  002174  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  3769  002178  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  3770  00217C  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  3774  002180  0E00               	movlw	0
  3775  002182  6E40               	movwf	xtoa@i+1,c
  3776  002184  0E1F               	movlw	31
  3777  002186  6E3F               	movwf	xtoa@i,c
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  3781  002188  0E00               	movlw	0
  3782  00218A  6FB6               	movwf	(_dbuf+31)& (0+255),b
  3783                           
  3784                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3785  00218C  D09D               	goto	l3616
  3786  00218E                     l3586:
  3787  00218E  FFFF               	dw	65535	; assembler added errata NOP
  3788                           
  3789                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  3790  002190  063F               	decf	xtoa@i,f,c
  3791  002192  A0D8               	btfss	status,0,c
  3792  002194  0640               	decf	xtoa@i+1,f,c
  3793                           
  3794                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  3795  002196  0E0F               	movlw	15
  3796  002198  1437               	andwf	xtoa@n,w,c
  3797  00219A  6E41               	movwf	xtoa@c,c
  3798  00219C  6A42               	clrf	xtoa@c+1,c
  3799                           
  3800                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  3801  00219E  BE42               	btfsc	xtoa@c+1,7,c
  3802  0021A0  D008               	goto	l3594
  3803  0021A2  5042               	movf	xtoa@c+1,w,c
  3804  0021A4  E104               	bnz	u3540
  3805  0021A6  0E0A               	movlw	10
  3806  0021A8  5C41               	subwf	xtoa@c,w,c
  3807  0021AA  A0D8               	btfss	status,0,c
  3808  0021AC  D002               	goto	l3594
  3809  0021AE                     u3540:
  3810  0021AE  0E57               	movlw	87
  3811  0021B0  D002               	goto	L19
  3812  0021B2                     l3594:
  3813  0021B2  FFFF               	dw	65535	; assembler added errata NOP
  3814  0021B4  0E30               	movlw	48
  3815  0021B6                     L19:
  3816  0021B6  FFFF               	dw	65535	; assembler added errata NOP
  3817  0021B8  2441               	addwf	xtoa@c,w,c
  3818  0021BA  6E41               	movwf	xtoa@c,c
  3819  0021BC  0E00               	movlw	0
  3820  0021BE  2042               	addwfc	xtoa@c+1,w,c
  3821  0021C0  6E42               	movwf	xtoa@c+1,c
  3822                           
  3823                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 ? isupper
      +                          ((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|32)-'a') 
      +                          < 26)) {
  3824  0021C2  0EBF               	movlw	191
  3825  0021C4  6E27               	movwf	??_xtoa& (0+255),c
  3826  0021C6  0EFF               	movlw	255
  3827  0021C8  6E28               	movwf	(??_xtoa+1)& (0+255),c
  3828  0021CA  5026               	movf	xtoa@x,w,c
  3829  0021CC  6E29               	movwf	(??_xtoa+2)& (0+255),c
  3830  0021CE  6A2A               	clrf	(??_xtoa+3)& (0+255),c
  3831  0021D0  5027               	movf	??_xtoa,w,c
  3832  0021D2  2629               	addwf	??_xtoa+2,f,c
  3833  0021D4  5028               	movf	??_xtoa+1,w,c
  3834  0021D6  222A               	addwfc	??_xtoa+3,f,c
  3835  0021D8  502A               	movf	??_xtoa+3,w,c
  3836  0021DA  E106               	bnz	u3550
  3837  0021DC  0E1A               	movlw	26
  3838  0021DE  5C29               	subwf	??_xtoa+2,w,c
  3839  0021E0  B0D8               	btfsc	status,0,c
  3840  0021E2  D002               	goto	u3550
  3841  0021E4  0E01               	movlw	1
  3842  0021E6  D002               	goto	u3560
  3843  0021E8                     u3550:
  3844  0021E8  FFFF               	dw	65535	; assembler added errata NOP
  3845  0021EA  0E00               	movlw	0
  3846  0021EC                     u3560:
  3847  0021EC  FFFF               	dw	65535	; assembler added errata NOP
  3848  0021EE  6E2F               	movwf	_xtoa$1135,c
  3849  0021F0  6A30               	clrf	_xtoa$1135+1,c
  3850  0021F2  502F               	movf	_xtoa$1135,w,c
  3851  0021F4  1030               	iorwf	_xtoa$1135+1,w,c
  3852  0021F6  B4D8               	btfsc	status,2,c
  3853  0021F8  D029               	goto	l3608
  3854  0021FA  0E9F               	movlw	159
  3855  0021FC  6E27               	movwf	??_xtoa& (0+255),c
  3856  0021FE  0EFF               	movlw	255
  3857  002200  6E28               	movwf	(??_xtoa+1)& (0+255),c
  3858  002202  0E20               	movlw	32
  3859  002204  1041               	iorwf	xtoa@c,w,c
  3860  002206  6E29               	movwf	(??_xtoa+2)& (0+255),c
  3861  002208  0E00               	movlw	0
  3862  00220A  1042               	iorwf	xtoa@c+1,w,c
  3863  00220C  6E2A               	movwf	(??_xtoa+3)& (0+255),c
  3864  00220E  5027               	movf	??_xtoa,w,c
  3865  002210  2629               	addwf	??_xtoa+2,f,c
  3866  002212  5028               	movf	??_xtoa+1,w,c
  3867  002214  222A               	addwfc	??_xtoa+3,f,c
  3868  002216  502A               	movf	??_xtoa+3,w,c
  3869  002218  E106               	bnz	u3580
  3870  00221A  0E1A               	movlw	26
  3871  00221C  5C29               	subwf	??_xtoa+2,w,c
  3872  00221E  B0D8               	btfsc	status,0,c
  3873  002220  D002               	goto	u3580
  3874  002222  0E01               	movlw	1
  3875  002224  D002               	goto	u3590
  3876  002226                     u3580:
  3877  002226  FFFF               	dw	65535	; assembler added errata NOP
  3878  002228  0E00               	movlw	0
  3879  00222A                     u3590:
  3880  00222A  FFFF               	dw	65535	; assembler added errata NOP
  3881  00222C  6E31               	movwf	_xtoa$1136,c
  3882  00222E  6A32               	clrf	_xtoa$1136+1,c
  3883  002230  5031               	movf	_xtoa$1136,w,c
  3884  002232  1032               	iorwf	_xtoa$1136+1,w,c
  3885  002234  B4D8               	btfsc	status,2,c
  3886  002236  D00A               	goto	l3608
  3887                           
  3888                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  3889  002238  C041  F007         	movff	xtoa@c,toupper@c
  3890  00223C  C042  F008         	movff	xtoa@c+1,toupper@c+1
  3891  002240  EC49  F01A         	call	_toupper	;wreg free
  3892  002244  C007  F041         	movff	?_toupper,xtoa@c
  3893  002248  C008  F042         	movff	?_toupper+1,xtoa@c+1
  3894  00224C                     l3608:
  3895  00224C  FFFF               	dw	65535	; assembler added errata NOP
  3896                           
  3897                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  3898  00224E  0E97               	movlw	low _dbuf
  3899  002250  243F               	addwf	xtoa@i,w,c
  3900  002252  6ED9               	movwf	fsr2l,c
  3901  002254  0E00               	movlw	high _dbuf
  3902  002256  2040               	addwfc	xtoa@i+1,w,c
  3903  002258  6EDA               	movwf	fsr2h,c
  3904  00225A  C041  FFDF         	movff	xtoa@c,indf2
  3905                           
  3906                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  3907  00225E  0633               	decf	xtoa@p,f,c
  3908  002260  A0D8               	btfss	status,0,c
  3909  002262  0634               	decf	xtoa@p+1,f,c
  3910                           
  3911                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  3912  002264  0635               	decf	xtoa@w,f,c
  3913  002266  A0D8               	btfss	status,0,c
  3914  002268  0636               	decf	xtoa@w+1,f,c
  3915                           
  3916                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  3917  00226A  C037  F027         	movff	xtoa@n,??_xtoa
  3918  00226E  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  3919  002272  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  3920  002276  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  3921  00227A  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  3922  00227E  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  3923  002282  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  3924  002286  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  3925  00228A  0E05               	movlw	5
  3926  00228C  D00A               	goto	u3610
  3927  00228E                     u3615:
  3928  00228E  FFFF               	dw	65535	; assembler added errata NOP
  3929  002290  90D8               	bcf	status,0,c
  3930  002292  322E               	rrcf	??_xtoa+7,f,c
  3931  002294  322D               	rrcf	??_xtoa+6,f,c
  3932  002296  322C               	rrcf	??_xtoa+5,f,c
  3933  002298  322B               	rrcf	??_xtoa+4,f,c
  3934  00229A  322A               	rrcf	??_xtoa+3,f,c
  3935  00229C  3229               	rrcf	??_xtoa+2,f,c
  3936  00229E  3228               	rrcf	??_xtoa+1,f,c
  3937  0022A0  3227               	rrcf	??_xtoa,f,c
  3938  0022A2                     u3610:
  3939  0022A2  FFFF               	dw	65535	; assembler added errata NOP
  3940  0022A4  2EE8               	decfsz	wreg,f,c
  3941  0022A6  D7F3               	goto	u3615
  3942  0022A8  C027  F037         	movff	??_xtoa,xtoa@n
  3943  0022AC  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  3944  0022B0  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  3945  0022B4  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  3946  0022B8  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  3947  0022BC  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  3948  0022C0  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  3949  0022C4  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  3950  0022C8                     l3616:
  3951  0022C8  FFFF               	dw	65535	; assembler added errata NOP
  3952                           
  3953                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3954  0022CA  BE40               	btfsc	xtoa@i+1,7,c
  3955  0022CC  D022               	goto	u3660
  3956  0022CE  5040               	movf	xtoa@i+1,w,c
  3957  0022D0  E104               	bnz	u3620
  3958  0022D2  0E02               	movlw	2
  3959  0022D4  5C3F               	subwf	xtoa@i,w,c
  3960  0022D6  A0D8               	btfss	status,0,c
  3961  0022D8  D01C               	goto	u3660
  3962  0022DA                     u3620:
  3963  0022DA  5037               	movf	xtoa@n,w,c
  3964  0022DC  1038               	iorwf	xtoa@n+1,w,c
  3965  0022DE  1039               	iorwf	xtoa@n+2,w,c
  3966  0022E0  103A               	iorwf	xtoa@n+3,w,c
  3967  0022E2  103B               	iorwf	xtoa@n+4,w,c
  3968  0022E4  103C               	iorwf	xtoa@n+5,w,c
  3969  0022E6  103D               	iorwf	xtoa@n+6,w,c
  3970  0022E8  103E               	iorwf	xtoa@n+7,w,c
  3971  0022EA  A4D8               	btfss	status,2,c
  3972  0022EC  D750               	goto	l3586
  3973  0022EE  BE34               	btfsc	xtoa@p+1,7,c
  3974  0022F0  D005               	goto	u3640
  3975  0022F2  5034               	movf	xtoa@p+1,w,c
  3976  0022F4  E102               	bnz	u3641
  3977  0022F6  0433               	decf	xtoa@p,w,c
  3978  0022F8  B0D8               	btfsc	status,0,c
  3979  0022FA                     u3641:
  3980  0022FA  D749               	goto	l3586
  3981  0022FC                     u3640:
  3982  0022FC  FFFF               	dw	65535	; assembler added errata NOP
  3983  0022FE  BE36               	btfsc	xtoa@w+1,7,c
  3984  002300  D008               	goto	u3660
  3985  002302  5036               	movf	xtoa@w+1,w,c
  3986  002304  E103               	bnz	u3650
  3987  002306  0435               	decf	xtoa@w,w,c
  3988  002308  A0D8               	btfss	status,0,c
  3989  00230A  D003               	goto	u3660
  3990  00230C                     u3650:
  3991  00230C  0100               	movlb	0	; () banked
  3992  00230E  B391               	btfsc	_flags& (0+255),1,b
  3993  002310  D73E               	goto	l3586
  3994  002312                     u3660:
  3995  002312  FFFF               	dw	65535	; assembler added errata NOP
  3996                           
  3997                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  3998  002314  0100               	movlb	0	; () banked
  3999  002316  A991               	btfss	_flags& (0+255),4,b
  4000  002318  D016               	goto	l3632
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  4004  00231A  063F               	decf	xtoa@i,f,c
  4005  00231C  A0D8               	btfss	status,0,c
  4006  00231E  0640               	decf	xtoa@i+1,f,c
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  4010  002320  0E97               	movlw	low _dbuf
  4011  002322  243F               	addwf	xtoa@i,w,c
  4012  002324  6ED9               	movwf	fsr2l,c
  4013  002326  0E00               	movlw	high _dbuf
  4014  002328  2040               	addwfc	xtoa@i+1,w,c
  4015  00232A  6EDA               	movwf	fsr2h,c
  4016  00232C  C026  FFDF         	movff	xtoa@x,indf2
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  4020  002330  063F               	decf	xtoa@i,f,c
  4021  002332  A0D8               	btfss	status,0,c
  4022  002334  0640               	decf	xtoa@i+1,f,c
  4023                           
  4024                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  4025  002336  0E97               	movlw	low _dbuf
  4026  002338  243F               	addwf	xtoa@i,w,c
  4027  00233A  6ED9               	movwf	fsr2l,c
  4028  00233C  0E00               	movlw	high _dbuf
  4029  00233E  2040               	addwfc	xtoa@i+1,w,c
  4030  002340  6EDA               	movwf	fsr2h,c
  4031  002342  0E30               	movlw	48
  4032  002344  6EDF               	movwf	indf2,c
  4033  002346                     l3632:
  4034  002346  FFFF               	dw	65535	; assembler added errata NOP
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  4038  002348  C01C  F011         	movff	xtoa@fp,pad@fp
  4039  00234C  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4040  002350  0E97               	movlw	low _dbuf
  4041  002352  243F               	addwf	xtoa@i,w,c
  4042  002354  6E13               	movwf	pad@buf,c
  4043  002356  0E00               	movlw	high _dbuf
  4044  002358  2040               	addwfc	xtoa@i+1,w,c
  4045  00235A  6E14               	movwf	pad@buf+1,c
  4046  00235C  C035  F015         	movff	xtoa@w,pad@p
  4047  002360  C036  F016         	movff	xtoa@w+1,pad@p+1
  4048  002364  EC07  F019         	call	_pad	;wreg free
  4049  002368  C011  F01C         	movff	?_pad,?_xtoa
  4050  00236C  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4051  002370  0012               	return		;funcret
  4052  002372  FFFF               	dw	65535	; errata NOP
  4053  002374                     __end_of_xtoa:
  4054                           	opt callstack 0
  4055                           
  4056 ;; *************** function _toupper *****************
  4057 ;; Defined at:
  4058 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;  c               2    6[COMRAM] int 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;		None
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  2    6[COMRAM] int 
  4065 ;; Registers used:
  4066 ;;		wreg, status,2, status,0
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4072 ;;      Params:         2       0       0       0       0       0       0
  4073 ;;      Locals:         2       0       0       0       0       0       0
  4074 ;;      Temps:          4       0       0       0       0       0       0
  4075 ;;      Totals:         8       0       0       0       0       0       0
  4076 ;;Total ram usage:        8 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; Hardware stack levels required when called:    3
  4079 ;; This function calls:
  4080 ;;		_islower
  4081 ;; This function is called by:
  4082 ;;		_xtoa
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text7
  4087  003492                     __ptext7:
  4088                           	opt callstack 0
  4089  003492                     _toupper:
  4090                           	opt callstack 0
  4091  003492  FFFF               	dw	65535	; assembler added errata NOP
  4092                           
  4093                           ;incstack = 0
  4094  003494  0E9F               	movlw	159
  4095  003496  6E09               	movwf	??_toupper& (0+255),c
  4096  003498  0EFF               	movlw	255
  4097  00349A  6E0A               	movwf	(??_toupper+1)& (0+255),c
  4098  00349C  C007  F00B         	movff	toupper@c,??_toupper+2
  4099  0034A0  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4100  0034A4  5009               	movf	??_toupper,w,c
  4101  0034A6  260B               	addwf	??_toupper+2,f,c
  4102  0034A8  500A               	movf	??_toupper+1,w,c
  4103  0034AA  220C               	addwfc	??_toupper+3,f,c
  4104  0034AC  500C               	movf	??_toupper+3,w,c
  4105  0034AE  E106               	bnz	u2820
  4106  0034B0  0E1A               	movlw	26
  4107  0034B2  5C0B               	subwf	??_toupper+2,w,c
  4108  0034B4  B0D8               	btfsc	status,0,c
  4109  0034B6  D002               	goto	u2820
  4110  0034B8  0E01               	movlw	1
  4111  0034BA  D002               	goto	u2830
  4112  0034BC                     u2820:
  4113  0034BC  FFFF               	dw	65535	; assembler added errata NOP
  4114  0034BE  0E00               	movlw	0
  4115  0034C0                     u2830:
  4116  0034C0  FFFF               	dw	65535	; assembler added errata NOP
  4117  0034C2  6E0D               	movwf	_toupper$1902,c
  4118  0034C4  6A0E               	clrf	_toupper$1902+1,c
  4119  0034C6  500D               	movf	_toupper$1902,w,c
  4120  0034C8  100E               	iorwf	_toupper$1902+1,w,c
  4121  0034CA  B4D8               	btfsc	status,2,c
  4122  0034CC  D005               	goto	l1352
  4123  0034CE  0E5F               	movlw	95
  4124  0034D0  1407               	andwf	toupper@c,w,c
  4125  0034D2  6E07               	movwf	?_toupper,c
  4126  0034D4  6A08               	clrf	?_toupper+1,c
  4127  0034D6  D005               	goto	l1357
  4128  0034D8                     l1352:
  4129  0034D8  FFFF               	dw	65535	; assembler added errata NOP
  4130  0034DA  C007  F007         	movff	toupper@c,?_toupper
  4131  0034DE  C008  F008         	movff	toupper@c+1,?_toupper+1
  4132  0034E2                     l1357:
  4133  0034E2  FFFF               	dw	65535	; assembler added errata NOP
  4134  0034E4  0012               	return		;funcret
  4135  0034E6  FFFF               	dw	65535	; errata NOP
  4136  0034E8                     __end_of_toupper:
  4137                           	opt callstack 0
  4138                           
  4139 ;; *************** function _islower *****************
  4140 ;; Defined at:
  4141 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  c               2    0[COMRAM] int 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;		None
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  2    0[COMRAM] int 
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, status,0
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4155 ;;      Params:         2       0       0       0       0       0       0
  4156 ;;      Locals:         0       0       0       0       0       0       0
  4157 ;;      Temps:          4       0       0       0       0       0       0
  4158 ;;      Totals:         6       0       0       0       0       0       0
  4159 ;;Total ram usage:        6 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    2
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_toupper
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text8
  4170  0037F0                     __ptext8:
  4171                           	opt callstack 0
  4172  0037F0                     _islower:
  4173                           	opt callstack 0
  4174  0037F0  FFFF               	dw	65535	; assembler added errata NOP
  4175                           
  4176                           ;incstack = 0
  4177  0037F2  0E9F               	movlw	159
  4178  0037F4  6E03               	movwf	??_islower& (0+255),c
  4179  0037F6  0EFF               	movlw	255
  4180  0037F8  6E04               	movwf	(??_islower+1)& (0+255),c
  4181  0037FA  C001  F005         	movff	islower@c,??_islower+2
  4182  0037FE  C002  F006         	movff	islower@c+1,??_islower+3
  4183  003802  5003               	movf	??_islower,w,c
  4184  003804  2605               	addwf	??_islower+2,f,c
  4185  003806  5004               	movf	??_islower+1,w,c
  4186  003808  2206               	addwfc	??_islower+3,f,c
  4187  00380A  5006               	movf	??_islower+3,w,c
  4188  00380C  E106               	bnz	u2710
  4189  00380E  0E1A               	movlw	26
  4190  003810  5C05               	subwf	??_islower+2,w,c
  4191  003812  B0D8               	btfsc	status,0,c
  4192  003814  D002               	goto	u2710
  4193  003816  0E01               	movlw	1
  4194  003818  D002               	goto	u2720
  4195  00381A                     u2710:
  4196  00381A  FFFF               	dw	65535	; assembler added errata NOP
  4197  00381C  0E00               	movlw	0
  4198  00381E                     u2720:
  4199  00381E  FFFF               	dw	65535	; assembler added errata NOP
  4200  003820  6E01               	movwf	?_islower,c
  4201  003822  6A02               	clrf	?_islower+1,c
  4202  003824  0012               	return		;funcret
  4203  003826  FFFF               	dw	65535	; errata NOP
  4204  003828                     __end_of_islower:
  4205                           	opt callstack 0
  4206                           
  4207 ;; *************** function _isupper *****************
  4208 ;; Defined at:
  4209 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;  c               2    0[COMRAM] int 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  2    0[COMRAM] int 
  4216 ;; Registers used:
  4217 ;;		wreg, status,2, status,0
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4223 ;;      Params:         2       0       0       0       0       0       0
  4224 ;;      Locals:         0       0       0       0       0       0       0
  4225 ;;      Temps:          4       0       0       0       0       0       0
  4226 ;;      Totals:         6       0       0       0       0       0       0
  4227 ;;Total ram usage:        6 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:    2
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_xtoa
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text9
  4238  003828                     __ptext9:
  4239                           	opt callstack 0
  4240  003828                     _isupper:
  4241                           	opt callstack 0
  4242  003828  FFFF               	dw	65535	; assembler added errata NOP
  4243                           
  4244                           ;incstack = 0
  4245  00382A  0EBF               	movlw	191
  4246  00382C  6E03               	movwf	??_isupper& (0+255),c
  4247  00382E  0EFF               	movlw	255
  4248  003830  6E04               	movwf	(??_isupper+1)& (0+255),c
  4249  003832  C001  F005         	movff	isupper@c,??_isupper+2
  4250  003836  C002  F006         	movff	isupper@c+1,??_isupper+3
  4251  00383A  5003               	movf	??_isupper,w,c
  4252  00383C  2605               	addwf	??_isupper+2,f,c
  4253  00383E  5004               	movf	??_isupper+1,w,c
  4254  003840  2206               	addwfc	??_isupper+3,f,c
  4255  003842  5006               	movf	??_isupper+3,w,c
  4256  003844  E106               	bnz	u2780
  4257  003846  0E1A               	movlw	26
  4258  003848  5C05               	subwf	??_isupper+2,w,c
  4259  00384A  B0D8               	btfsc	status,0,c
  4260  00384C  D002               	goto	u2780
  4261  00384E  0E01               	movlw	1
  4262  003850  D002               	goto	u2790
  4263  003852                     u2780:
  4264  003852  FFFF               	dw	65535	; assembler added errata NOP
  4265  003854  0E00               	movlw	0
  4266  003856                     u2790:
  4267  003856  FFFF               	dw	65535	; assembler added errata NOP
  4268  003858  6E01               	movwf	?_isupper,c
  4269  00385A  6A02               	clrf	?_isupper+1,c
  4270  00385C  0012               	return		;funcret
  4271  00385E  FFFF               	dw	65535	; errata NOP
  4272  003860                     __end_of_isupper:
  4273                           	opt callstack 0
  4274                           
  4275 ;; *************** function _isalpha *****************
  4276 ;; Defined at:
  4277 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  c               2    0[COMRAM] int 
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;		None
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  2    0[COMRAM] int 
  4284 ;; Registers used:
  4285 ;;		wreg, status,2, status,0
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4291 ;;      Params:         2       0       0       0       0       0       0
  4292 ;;      Locals:         0       0       0       0       0       0       0
  4293 ;;      Temps:          4       0       0       0       0       0       0
  4294 ;;      Totals:         6       0       0       0       0       0       0
  4295 ;;Total ram usage:        6 bytes
  4296 ;; Hardware stack levels used:    1
  4297 ;; Hardware stack levels required when called:    2
  4298 ;; This function calls:
  4299 ;;		Nothing
  4300 ;; This function is called by:
  4301 ;;		_xtoa
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           	psect	text10
  4306  003778                     __ptext10:
  4307                           	opt callstack 0
  4308  003778                     _isalpha:
  4309                           	opt callstack 0
  4310  003778  FFFF               	dw	65535	; assembler added errata NOP
  4311                           
  4312                           ;incstack = 0
  4313  00377A  0E9F               	movlw	159
  4314  00377C  6E03               	movwf	??_isalpha& (0+255),c
  4315  00377E  0EFF               	movlw	255
  4316  003780  6E04               	movwf	(??_isalpha+1)& (0+255),c
  4317  003782  0E20               	movlw	32
  4318  003784  1001               	iorwf	isalpha@c,w,c
  4319  003786  6E05               	movwf	(??_isalpha+2)& (0+255),c
  4320  003788  0E00               	movlw	0
  4321  00378A  1002               	iorwf	isalpha@c+1,w,c
  4322  00378C  6E06               	movwf	(??_isalpha+3)& (0+255),c
  4323  00378E  5003               	movf	??_isalpha,w,c
  4324  003790  2605               	addwf	??_isalpha+2,f,c
  4325  003792  5004               	movf	??_isalpha+1,w,c
  4326  003794  2206               	addwfc	??_isalpha+3,f,c
  4327  003796  5006               	movf	??_isalpha+3,w,c
  4328  003798  E106               	bnz	u2800
  4329  00379A  0E1A               	movlw	26
  4330  00379C  5C05               	subwf	??_isalpha+2,w,c
  4331  00379E  B0D8               	btfsc	status,0,c
  4332  0037A0  D002               	goto	u2800
  4333  0037A2  0E01               	movlw	1
  4334  0037A4  D002               	goto	u2810
  4335  0037A6                     u2800:
  4336  0037A6  FFFF               	dw	65535	; assembler added errata NOP
  4337  0037A8  0E00               	movlw	0
  4338  0037AA                     u2810:
  4339  0037AA  FFFF               	dw	65535	; assembler added errata NOP
  4340  0037AC  6E01               	movwf	?_isalpha,c
  4341  0037AE  6A02               	clrf	?_isalpha+1,c
  4342  0037B0  0012               	return		;funcret
  4343  0037B2  FFFF               	dw	65535	; errata NOP
  4344  0037B4                     __end_of_isalpha:
  4345                           	opt callstack 0
  4346                           
  4347 ;; *************** function _utoa *****************
  4348 ;; Defined at:
  4349 ;;		line 593 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4352 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  4353 ;;  d               8   29[COMRAM] unsigned long long 
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;  n               8   49[COMRAM] unsigned long long 
  4356 ;;  i               2   57[COMRAM] int 
  4357 ;;  w               2   47[COMRAM] int 
  4358 ;;  p               2   45[COMRAM] int 
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  2   27[COMRAM] int 
  4361 ;; Registers used:
  4362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4368 ;;      Params:        10       0       0       0       0       0       0
  4369 ;;      Locals:        14       0       0       0       0       0       0
  4370 ;;      Temps:          8       0       0       0       0       0       0
  4371 ;;      Totals:        32       0       0       0       0       0       0
  4372 ;;Total ram usage:       32 bytes
  4373 ;; Hardware stack levels used:    1
  4374 ;; Hardware stack levels required when called:    6
  4375 ;; This function calls:
  4376 ;;		___lodiv
  4377 ;;		___lomod
  4378 ;;		_pad
  4379 ;; This function is called by:
  4380 ;;		_vfpfcnvrt
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text11
  4385  002374                     __ptext11:
  4386                           	opt callstack 0
  4387  002374                     _utoa:
  4388                           	opt callstack 0
  4389  002374  FFFF               	dw	65535	; assembler added errata NOP
  4390                           
  4391                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  4392                           
  4393                           ;incstack = 0
  4394  002376  0100               	movlb	0	; () banked
  4395  002378  AF90               	btfss	(_prec+1)& (0+255),7,b
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  4399  00237A  9391               	bcf	_flags& (0+255),1,b
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  4403  00237C  BF90               	btfsc	(_prec+1)& (0+255),7,b
  4404  00237E  D005               	goto	u3450
  4405  002380  5190               	movf	(_prec+1)& (0+255),w,b
  4406  002382  E109               	bnz	l402
  4407  002384  058F               	decf	_prec& (0+255),w,b
  4408  002386  B0D8               	btfsc	status,0,c
  4409  002388  D006               	goto	l402
  4410  00238A                     u3450:
  4411  00238A  FFFF               	dw	65535	; assembler added errata NOP
  4412                           
  4413                           ; BSR set to: 0
  4414  00238C  0E00               	movlw	0
  4415  00238E  6E2F               	movwf	utoa@p+1,c
  4416  002390  0E01               	movlw	1
  4417  002392  6E2E               	movwf	utoa@p,c
  4418  002394  D005               	goto	l404
  4419  002396                     l402:
  4420  002396  FFFF               	dw	65535	; assembler added errata NOP
  4421                           
  4422                           ; BSR set to: 0
  4423  002398  C08F  F02E         	movff	_prec,utoa@p
  4424  00239C  C090  F02F         	movff	_prec+1,utoa@p+1
  4425  0023A0                     l404:
  4426  0023A0  FFFF               	dw	65535	; assembler added errata NOP
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 603:     w = width;
  4430  0023A2  C08D  F030         	movff	_width,utoa@w
  4431  0023A6  C08E  F031         	movff	_width+1,utoa@w+1
  4432                           
  4433                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 606:     n = d;
  4434  0023AA  C01E  F032         	movff	utoa@d,utoa@n
  4435  0023AE  C01F  F033         	movff	utoa@d+1,utoa@n+1
  4436  0023B2  C020  F034         	movff	utoa@d+2,utoa@n+2
  4437  0023B6  C021  F035         	movff	utoa@d+3,utoa@n+3
  4438  0023BA  C022  F036         	movff	utoa@d+4,utoa@n+4
  4439  0023BE  C023  F037         	movff	utoa@d+5,utoa@n+5
  4440  0023C2  C024  F038         	movff	utoa@d+6,utoa@n+6
  4441  0023C6  C025  F039         	movff	utoa@d+7,utoa@n+7
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  4445  0023CA  0E00               	movlw	0
  4446  0023CC  6E3B               	movwf	utoa@i+1,c
  4447  0023CE  0E1F               	movlw	31
  4448  0023D0  6E3A               	movwf	utoa@i,c
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  4452  0023D2  0E00               	movlw	0
  4453  0023D4  6FB6               	movwf	(_dbuf+31)& (0+255),b
  4454                           
  4455                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4456  0023D6  D077               	goto	l3556
  4457  0023D8                     l3546:
  4458  0023D8  FFFF               	dw	65535	; assembler added errata NOP
  4459                           
  4460                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 610:         --i;
  4461  0023DA  063A               	decf	utoa@i,f,c
  4462  0023DC  A0D8               	btfss	status,0,c
  4463  0023DE  063B               	decf	utoa@i+1,f,c
  4464                           
  4465                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  4466  0023E0  0E97               	movlw	low _dbuf
  4467  0023E2  243A               	addwf	utoa@i,w,c
  4468  0023E4  6ED9               	movwf	fsr2l,c
  4469  0023E6  0E00               	movlw	high _dbuf
  4470  0023E8  203B               	addwfc	utoa@i+1,w,c
  4471  0023EA  6EDA               	movwf	fsr2h,c
  4472  0023EC  C032  F001         	movff	utoa@n,___lomod@dividend
  4473  0023F0  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  4474  0023F4  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  4475  0023F8  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  4476  0023FC  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  4477  002400  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  4478  002404  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  4479  002408  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  4480  00240C  0E0A               	movlw	10
  4481  00240E  6E09               	movwf	___lomod@divisor,c
  4482  002410  0E00               	movlw	0
  4483  002412  6E0A               	movwf	___lomod@divisor+1,c
  4484  002414  0E00               	movlw	0
  4485  002416  6E0B               	movwf	___lomod@divisor+2,c
  4486  002418  0E00               	movlw	0
  4487  00241A  6E0C               	movwf	___lomod@divisor+3,c
  4488  00241C  0E00               	movlw	0
  4489  00241E  6E0D               	movwf	___lomod@divisor+4,c
  4490  002420  0E00               	movlw	0
  4491  002422  6E0E               	movwf	___lomod@divisor+5,c
  4492  002424  0E00               	movlw	0
  4493  002426  6E0F               	movwf	___lomod@divisor+6,c
  4494  002428  0E00               	movlw	0
  4495  00242A  6E10               	movwf	___lomod@divisor+7,c
  4496  00242C  EC53  F018         	call	___lomod	;wreg free
  4497  002430  C001  F026         	movff	?___lomod,??_utoa
  4498  002434  C002  F027         	movff	?___lomod+1,??_utoa+1
  4499  002438  C003  F028         	movff	?___lomod+2,??_utoa+2
  4500  00243C  C004  F029         	movff	?___lomod+3,??_utoa+3
  4501  002440  C005  F02A         	movff	?___lomod+4,??_utoa+4
  4502  002444  C006  F02B         	movff	?___lomod+5,??_utoa+5
  4503  002448  C007  F02C         	movff	?___lomod+6,??_utoa+6
  4504  00244C  C008  F02D         	movff	?___lomod+7,??_utoa+7
  4505  002450  5026               	movf	??_utoa,w,c
  4506  002452  0F30               	addlw	48
  4507  002454  6EDF               	movwf	indf2,c
  4508                           
  4509                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 612:         --p;
  4510  002456  062E               	decf	utoa@p,f,c
  4511  002458  A0D8               	btfss	status,0,c
  4512  00245A  062F               	decf	utoa@p+1,f,c
  4513                           
  4514                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 613:         --w;
  4515  00245C  0630               	decf	utoa@w,f,c
  4516  00245E  A0D8               	btfss	status,0,c
  4517  002460  0631               	decf	utoa@w+1,f,c
  4518                           
  4519                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  4520  002462  C032  F001         	movff	utoa@n,___lodiv@dividend
  4521  002466  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  4522  00246A  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  4523  00246E  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  4524  002472  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  4525  002476  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  4526  00247A  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  4527  00247E  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  4528  002482  0E0A               	movlw	10
  4529  002484  6E09               	movwf	___lodiv@divisor,c
  4530  002486  0E00               	movlw	0
  4531  002488  6E0A               	movwf	___lodiv@divisor+1,c
  4532  00248A  0E00               	movlw	0
  4533  00248C  6E0B               	movwf	___lodiv@divisor+2,c
  4534  00248E  0E00               	movlw	0
  4535  002490  6E0C               	movwf	___lodiv@divisor+3,c
  4536  002492  0E00               	movlw	0
  4537  002494  6E0D               	movwf	___lodiv@divisor+4,c
  4538  002496  0E00               	movlw	0
  4539  002498  6E0E               	movwf	___lodiv@divisor+5,c
  4540  00249A  0E00               	movlw	0
  4541  00249C  6E0F               	movwf	___lodiv@divisor+6,c
  4542  00249E  0E00               	movlw	0
  4543  0024A0  6E10               	movwf	___lodiv@divisor+7,c
  4544  0024A2  ECB5  F016         	call	___lodiv	;wreg free
  4545  0024A6  C001  F032         	movff	?___lodiv,utoa@n
  4546  0024AA  C002  F033         	movff	?___lodiv+1,utoa@n+1
  4547  0024AE  C003  F034         	movff	?___lodiv+2,utoa@n+2
  4548  0024B2  C004  F035         	movff	?___lodiv+3,utoa@n+3
  4549  0024B6  C005  F036         	movff	?___lodiv+4,utoa@n+4
  4550  0024BA  C006  F037         	movff	?___lodiv+5,utoa@n+5
  4551  0024BE  C007  F038         	movff	?___lodiv+6,utoa@n+6
  4552  0024C2  C008  F039         	movff	?___lodiv+7,utoa@n+7
  4553  0024C6                     l3556:
  4554  0024C6  FFFF               	dw	65535	; assembler added errata NOP
  4555                           
  4556                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  4557  0024C8  503A               	movf	utoa@i,w,c
  4558  0024CA  103B               	iorwf	utoa@i+1,w,c
  4559  0024CC  B4D8               	btfsc	status,2,c
  4560  0024CE  D01C               	goto	u3500
  4561  0024D0  5032               	movf	utoa@n,w,c
  4562  0024D2  1033               	iorwf	utoa@n+1,w,c
  4563  0024D4  1034               	iorwf	utoa@n+2,w,c
  4564  0024D6  1035               	iorwf	utoa@n+3,w,c
  4565  0024D8  1036               	iorwf	utoa@n+4,w,c
  4566  0024DA  1037               	iorwf	utoa@n+5,w,c
  4567  0024DC  1038               	iorwf	utoa@n+6,w,c
  4568  0024DE  1039               	iorwf	utoa@n+7,w,c
  4569  0024E0  A4D8               	btfss	status,2,c
  4570  0024E2  D77A               	goto	l3546
  4571  0024E4  BE2F               	btfsc	utoa@p+1,7,c
  4572  0024E6  D005               	goto	u3480
  4573  0024E8  502F               	movf	utoa@p+1,w,c
  4574  0024EA  E102               	bnz	u3481
  4575  0024EC  042E               	decf	utoa@p,w,c
  4576  0024EE  B0D8               	btfsc	status,0,c
  4577  0024F0                     u3481:
  4578  0024F0  D773               	goto	l3546
  4579  0024F2                     u3480:
  4580  0024F2  FFFF               	dw	65535	; assembler added errata NOP
  4581  0024F4  BE31               	btfsc	utoa@w+1,7,c
  4582  0024F6  D008               	goto	u3500
  4583  0024F8  5031               	movf	utoa@w+1,w,c
  4584  0024FA  E103               	bnz	u3490
  4585  0024FC  0430               	decf	utoa@w,w,c
  4586  0024FE  A0D8               	btfss	status,0,c
  4587  002500  D003               	goto	u3500
  4588  002502                     u3490:
  4589  002502  0100               	movlb	0	; () banked
  4590  002504  B391               	btfsc	_flags& (0+255),1,b
  4591  002506  D768               	goto	l3546
  4592  002508                     u3500:
  4593  002508  FFFF               	dw	65535	; assembler added errata NOP
  4594                           
  4595                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  4596  00250A  C01C  F011         	movff	utoa@fp,pad@fp
  4597  00250E  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  4598  002512  0E97               	movlw	low _dbuf
  4599  002514  243A               	addwf	utoa@i,w,c
  4600  002516  6E13               	movwf	pad@buf,c
  4601  002518  0E00               	movlw	high _dbuf
  4602  00251A  203B               	addwfc	utoa@i+1,w,c
  4603  00251C  6E14               	movwf	pad@buf+1,c
  4604  00251E  C030  F015         	movff	utoa@w,pad@p
  4605  002522  C031  F016         	movff	utoa@w+1,pad@p+1
  4606  002526  EC07  F019         	call	_pad	;wreg free
  4607  00252A  C011  F01C         	movff	?_pad,?_utoa
  4608  00252E  C012  F01D         	movff	?_pad+1,?_utoa+1
  4609  002532  0012               	return		;funcret
  4610  002534  FFFF               	dw	65535	; errata NOP
  4611  002536                     __end_of_utoa:
  4612                           	opt callstack 0
  4613                           
  4614 ;; *************** function ___lomod *****************
  4615 ;; Defined at:
  4616 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lomod.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  dividend        8    0[COMRAM] unsigned long long 
  4619 ;;  divisor         8    8[COMRAM] unsigned long long 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;  counter         1   16[COMRAM] unsigned char 
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  8    0[COMRAM] unsigned long long 
  4624 ;; Registers used:
  4625 ;;		wreg, status,2, status,0
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4631 ;;      Params:        16       0       0       0       0       0       0
  4632 ;;      Locals:         1       0       0       0       0       0       0
  4633 ;;      Temps:          0       0       0       0       0       0       0
  4634 ;;      Totals:        17       0       0       0       0       0       0
  4635 ;;Total ram usage:       17 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; Hardware stack levels required when called:    2
  4638 ;; This function calls:
  4639 ;;		Nothing
  4640 ;; This function is called by:
  4641 ;;		_utoa
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text12
  4646  0030A6                     __ptext12:
  4647                           	opt callstack 0
  4648  0030A6                     ___lomod:
  4649                           	opt callstack 0
  4650  0030A6  FFFF               	dw	65535	; assembler added errata NOP
  4651                           
  4652                           ;incstack = 0
  4653  0030A8  5009               	movf	___lomod@divisor,w,c
  4654  0030AA  100A               	iorwf	___lomod@divisor+1,w,c
  4655  0030AC  100B               	iorwf	___lomod@divisor+2,w,c
  4656  0030AE  100C               	iorwf	___lomod@divisor+3,w,c
  4657  0030B0  100D               	iorwf	___lomod@divisor+4,w,c
  4658  0030B2  100E               	iorwf	___lomod@divisor+5,w,c
  4659  0030B4  100F               	iorwf	___lomod@divisor+6,w,c
  4660  0030B6  1010               	iorwf	___lomod@divisor+7,w,c
  4661  0030B8  B4D8               	btfsc	status,2,c
  4662  0030BA  D040               	goto	l984
  4663  0030BC  0E01               	movlw	1
  4664  0030BE  6E11               	movwf	___lomod@counter,c
  4665  0030C0  D00B               	goto	l3346
  4666  0030C2                     l3344:
  4667  0030C2  FFFF               	dw	65535	; assembler added errata NOP
  4668  0030C4  90D8               	bcf	status,0,c
  4669  0030C6  3609               	rlcf	___lomod@divisor,f,c
  4670  0030C8  360A               	rlcf	___lomod@divisor+1,f,c
  4671  0030CA  360B               	rlcf	___lomod@divisor+2,f,c
  4672  0030CC  360C               	rlcf	___lomod@divisor+3,f,c
  4673  0030CE  360D               	rlcf	___lomod@divisor+4,f,c
  4674  0030D0  360E               	rlcf	___lomod@divisor+5,f,c
  4675  0030D2  360F               	rlcf	___lomod@divisor+6,f,c
  4676  0030D4  3610               	rlcf	___lomod@divisor+7,f,c
  4677  0030D6  2A11               	incf	___lomod@counter,f,c
  4678  0030D8                     l3346:
  4679  0030D8  FFFF               	dw	65535	; assembler added errata NOP
  4680  0030DA  AE10               	btfss	___lomod@divisor+7,7,c
  4681  0030DC  D7F2               	goto	l3344
  4682  0030DE                     u3050:
  4683  0030DE  FFFF               	dw	65535	; assembler added errata NOP
  4684  0030E0  5009               	movf	___lomod@divisor,w,c
  4685  0030E2  5C01               	subwf	___lomod@dividend,w,c
  4686  0030E4  500A               	movf	___lomod@divisor+1,w,c
  4687  0030E6  5802               	subwfb	___lomod@dividend+1,w,c
  4688  0030E8  500B               	movf	___lomod@divisor+2,w,c
  4689  0030EA  5803               	subwfb	___lomod@dividend+2,w,c
  4690  0030EC  500C               	movf	___lomod@divisor+3,w,c
  4691  0030EE  5804               	subwfb	___lomod@dividend+3,w,c
  4692  0030F0  500D               	movf	___lomod@divisor+4,w,c
  4693  0030F2  5805               	subwfb	___lomod@dividend+4,w,c
  4694  0030F4  500E               	movf	___lomod@divisor+5,w,c
  4695  0030F6  5806               	subwfb	___lomod@dividend+5,w,c
  4696  0030F8  500F               	movf	___lomod@divisor+6,w,c
  4697  0030FA  5807               	subwfb	___lomod@dividend+6,w,c
  4698  0030FC  5010               	movf	___lomod@divisor+7,w,c
  4699  0030FE  5808               	subwfb	___lomod@dividend+7,w,c
  4700  003100  A0D8               	btfss	status,0,c
  4701  003102  D010               	goto	l3352
  4702  003104  5009               	movf	___lomod@divisor,w,c
  4703  003106  5E01               	subwf	___lomod@dividend,f,c
  4704  003108  500A               	movf	___lomod@divisor+1,w,c
  4705  00310A  5A02               	subwfb	___lomod@dividend+1,f,c
  4706  00310C  500B               	movf	___lomod@divisor+2,w,c
  4707  00310E  5A03               	subwfb	___lomod@dividend+2,f,c
  4708  003110  500C               	movf	___lomod@divisor+3,w,c
  4709  003112  5A04               	subwfb	___lomod@dividend+3,f,c
  4710  003114  500D               	movf	___lomod@divisor+4,w,c
  4711  003116  5A05               	subwfb	___lomod@dividend+4,f,c
  4712  003118  500E               	movf	___lomod@divisor+5,w,c
  4713  00311A  5A06               	subwfb	___lomod@dividend+5,f,c
  4714  00311C  500F               	movf	___lomod@divisor+6,w,c
  4715  00311E  5A07               	subwfb	___lomod@dividend+6,f,c
  4716  003120  5010               	movf	___lomod@divisor+7,w,c
  4717  003122  5A08               	subwfb	___lomod@dividend+7,f,c
  4718  003124                     l3352:
  4719  003124  FFFF               	dw	65535	; assembler added errata NOP
  4720  003126  90D8               	bcf	status,0,c
  4721  003128  3210               	rrcf	___lomod@divisor+7,f,c
  4722  00312A  320F               	rrcf	___lomod@divisor+6,f,c
  4723  00312C  320E               	rrcf	___lomod@divisor+5,f,c
  4724  00312E  320D               	rrcf	___lomod@divisor+4,f,c
  4725  003130  320C               	rrcf	___lomod@divisor+3,f,c
  4726  003132  320B               	rrcf	___lomod@divisor+2,f,c
  4727  003134  320A               	rrcf	___lomod@divisor+1,f,c
  4728  003136  3209               	rrcf	___lomod@divisor,f,c
  4729  003138  2E11               	decfsz	___lomod@counter,f,c
  4730  00313A  D7D1               	goto	u3050
  4731  00313C                     l984:
  4732  00313C  FFFF               	dw	65535	; assembler added errata NOP
  4733  00313E  C001  F001         	movff	___lomod@dividend,?___lomod
  4734  003142  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  4735  003146  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  4736  00314A  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  4737  00314E  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  4738  003152  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  4739  003156  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  4740  00315A  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  4741  00315E  0012               	return		;funcret
  4742  003160  FFFF               	dw	65535	; errata NOP
  4743  003162                     __end_of___lomod:
  4744                           	opt callstack 0
  4745                           
  4746 ;; *************** function ___lodiv *****************
  4747 ;; Defined at:
  4748 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lodiv.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;  dividend        8    0[COMRAM] unsigned long long 
  4751 ;;  divisor         8    8[COMRAM] unsigned long long 
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;  quotient        8   16[COMRAM] unsigned long long 
  4754 ;;  counter         1   24[COMRAM] unsigned char 
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  8    0[COMRAM] unsigned long long 
  4757 ;; Registers used:
  4758 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4764 ;;      Params:        16       0       0       0       0       0       0
  4765 ;;      Locals:         9       0       0       0       0       0       0
  4766 ;;      Temps:          0       0       0       0       0       0       0
  4767 ;;      Totals:        25       0       0       0       0       0       0
  4768 ;;Total ram usage:       25 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; Hardware stack levels required when called:    2
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_utoa
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           	psect	text13
  4779  002D6A                     __ptext13:
  4780                           	opt callstack 0
  4781  002D6A                     ___lodiv:
  4782                           	opt callstack 0
  4783  002D6A  FFFF               	dw	65535	; assembler added errata NOP
  4784                           
  4785                           ;incstack = 0
  4786  002D6C  EE20  F011         	lfsr	2,___lodiv@quotient
  4787  002D70  0E07               	movlw	7
  4788  002D72                     u3001:
  4789  002D72  6ADE               	clrf	postinc2,c
  4790  002D74  06E8               	decf	wreg,f,c
  4791  002D76  E2FD               	bc	u3001
  4792  002D78  5009               	movf	___lodiv@divisor,w,c
  4793  002D7A  100A               	iorwf	___lodiv@divisor+1,w,c
  4794  002D7C  100B               	iorwf	___lodiv@divisor+2,w,c
  4795  002D7E  100C               	iorwf	___lodiv@divisor+3,w,c
  4796  002D80  100D               	iorwf	___lodiv@divisor+4,w,c
  4797  002D82  100E               	iorwf	___lodiv@divisor+5,w,c
  4798  002D84  100F               	iorwf	___lodiv@divisor+6,w,c
  4799  002D86  1010               	iorwf	___lodiv@divisor+7,w,c
  4800  002D88  B4D8               	btfsc	status,2,c
  4801  002D8A  D04A               	goto	l974
  4802  002D8C  0E01               	movlw	1
  4803  002D8E  6E19               	movwf	___lodiv@counter,c
  4804  002D90  D00B               	goto	l3326
  4805  002D92                     l3324:
  4806  002D92  FFFF               	dw	65535	; assembler added errata NOP
  4807  002D94  90D8               	bcf	status,0,c
  4808  002D96  3609               	rlcf	___lodiv@divisor,f,c
  4809  002D98  360A               	rlcf	___lodiv@divisor+1,f,c
  4810  002D9A  360B               	rlcf	___lodiv@divisor+2,f,c
  4811  002D9C  360C               	rlcf	___lodiv@divisor+3,f,c
  4812  002D9E  360D               	rlcf	___lodiv@divisor+4,f,c
  4813  002DA0  360E               	rlcf	___lodiv@divisor+5,f,c
  4814  002DA2  360F               	rlcf	___lodiv@divisor+6,f,c
  4815  002DA4  3610               	rlcf	___lodiv@divisor+7,f,c
  4816  002DA6  2A19               	incf	___lodiv@counter,f,c
  4817  002DA8                     l3326:
  4818  002DA8  FFFF               	dw	65535	; assembler added errata NOP
  4819  002DAA  AE10               	btfss	___lodiv@divisor+7,7,c
  4820  002DAC  D7F2               	goto	l3324
  4821  002DAE                     u3020:
  4822  002DAE  FFFF               	dw	65535	; assembler added errata NOP
  4823  002DB0  90D8               	bcf	status,0,c
  4824  002DB2  3611               	rlcf	___lodiv@quotient,f,c
  4825  002DB4  3612               	rlcf	___lodiv@quotient+1,f,c
  4826  002DB6  3613               	rlcf	___lodiv@quotient+2,f,c
  4827  002DB8  3614               	rlcf	___lodiv@quotient+3,f,c
  4828  002DBA  3615               	rlcf	___lodiv@quotient+4,f,c
  4829  002DBC  3616               	rlcf	___lodiv@quotient+5,f,c
  4830  002DBE  3617               	rlcf	___lodiv@quotient+6,f,c
  4831  002DC0  3618               	rlcf	___lodiv@quotient+7,f,c
  4832  002DC2  5009               	movf	___lodiv@divisor,w,c
  4833  002DC4  5C01               	subwf	___lodiv@dividend,w,c
  4834  002DC6  500A               	movf	___lodiv@divisor+1,w,c
  4835  002DC8  5802               	subwfb	___lodiv@dividend+1,w,c
  4836  002DCA  500B               	movf	___lodiv@divisor+2,w,c
  4837  002DCC  5803               	subwfb	___lodiv@dividend+2,w,c
  4838  002DCE  500C               	movf	___lodiv@divisor+3,w,c
  4839  002DD0  5804               	subwfb	___lodiv@dividend+3,w,c
  4840  002DD2  500D               	movf	___lodiv@divisor+4,w,c
  4841  002DD4  5805               	subwfb	___lodiv@dividend+4,w,c
  4842  002DD6  500E               	movf	___lodiv@divisor+5,w,c
  4843  002DD8  5806               	subwfb	___lodiv@dividend+5,w,c
  4844  002DDA  500F               	movf	___lodiv@divisor+6,w,c
  4845  002DDC  5807               	subwfb	___lodiv@dividend+6,w,c
  4846  002DDE  5010               	movf	___lodiv@divisor+7,w,c
  4847  002DE0  5808               	subwfb	___lodiv@dividend+7,w,c
  4848  002DE2  A0D8               	btfss	status,0,c
  4849  002DE4  D011               	goto	l3336
  4850  002DE6  5009               	movf	___lodiv@divisor,w,c
  4851  002DE8  5E01               	subwf	___lodiv@dividend,f,c
  4852  002DEA  500A               	movf	___lodiv@divisor+1,w,c
  4853  002DEC  5A02               	subwfb	___lodiv@dividend+1,f,c
  4854  002DEE  500B               	movf	___lodiv@divisor+2,w,c
  4855  002DF0  5A03               	subwfb	___lodiv@dividend+2,f,c
  4856  002DF2  500C               	movf	___lodiv@divisor+3,w,c
  4857  002DF4  5A04               	subwfb	___lodiv@dividend+3,f,c
  4858  002DF6  500D               	movf	___lodiv@divisor+4,w,c
  4859  002DF8  5A05               	subwfb	___lodiv@dividend+4,f,c
  4860  002DFA  500E               	movf	___lodiv@divisor+5,w,c
  4861  002DFC  5A06               	subwfb	___lodiv@dividend+5,f,c
  4862  002DFE  500F               	movf	___lodiv@divisor+6,w,c
  4863  002E00  5A07               	subwfb	___lodiv@dividend+6,f,c
  4864  002E02  5010               	movf	___lodiv@divisor+7,w,c
  4865  002E04  5A08               	subwfb	___lodiv@dividend+7,f,c
  4866  002E06  8011               	bsf	___lodiv@quotient,0,c
  4867  002E08                     l3336:
  4868  002E08  FFFF               	dw	65535	; assembler added errata NOP
  4869  002E0A  90D8               	bcf	status,0,c
  4870  002E0C  3210               	rrcf	___lodiv@divisor+7,f,c
  4871  002E0E  320F               	rrcf	___lodiv@divisor+6,f,c
  4872  002E10  320E               	rrcf	___lodiv@divisor+5,f,c
  4873  002E12  320D               	rrcf	___lodiv@divisor+4,f,c
  4874  002E14  320C               	rrcf	___lodiv@divisor+3,f,c
  4875  002E16  320B               	rrcf	___lodiv@divisor+2,f,c
  4876  002E18  320A               	rrcf	___lodiv@divisor+1,f,c
  4877  002E1A  3209               	rrcf	___lodiv@divisor,f,c
  4878  002E1C  2E19               	decfsz	___lodiv@counter,f,c
  4879  002E1E  D7C7               	goto	u3020
  4880  002E20                     l974:
  4881  002E20  FFFF               	dw	65535	; assembler added errata NOP
  4882  002E22  C011  F001         	movff	___lodiv@quotient,?___lodiv
  4883  002E26  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  4884  002E2A  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  4885  002E2E  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  4886  002E32  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  4887  002E36  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  4888  002E3A  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  4889  002E3E  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  4890  002E42  0012               	return		;funcret
  4891  002E44  FFFF               	dw	65535	; errata NOP
  4892  002E46                     __end_of___lodiv:
  4893                           	opt callstack 0
  4894                           
  4895 ;; *************** function _strncmp *****************
  4896 ;; Defined at:
  4897 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4900 ;;		 -> STR_2(3), STR_1(4), 
  4901 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4902 ;;		 -> STR_132(3), STR_128(3), STR_123(3), STR_119(3), 
  4903 ;;		 -> STR_114(3), STR_110(3), STR_105(4), STR_101(4), 
  4904 ;;		 -> STR_96(3), STR_91(3), STR_86(3), STR_81(4), 
  4905 ;;		 -> STR_76(3), STR_71(3), STR_66(3), STR_61(4), 
  4906 ;;		 -> STR_56(3), STR_51(3), STR_46(3), STR_41(4), 
  4907 ;;		 -> STR_36(3), STR_32(3), STR_27(3), STR_23(3), 
  4908 ;;		 -> STR_18(3), STR_14(3), STR_9(4), STR_5(4), 
  4909 ;;  n               2    4[COMRAM] unsigned int 
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4912 ;;		 -> STR_132(3), STR_128(3), STR_123(3), STR_119(3), 
  4913 ;;		 -> STR_114(3), STR_110(3), STR_105(4), STR_101(4), 
  4914 ;;		 -> STR_96(3), STR_91(3), STR_86(3), STR_81(4), 
  4915 ;;		 -> STR_76(3), STR_71(3), STR_66(3), STR_61(4), 
  4916 ;;		 -> STR_56(3), STR_51(3), STR_46(3), STR_41(4), 
  4917 ;;		 -> STR_36(3), STR_32(3), STR_27(3), STR_23(3), 
  4918 ;;		 -> STR_18(3), STR_14(3), STR_9(4), STR_5(4), 
  4919 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4920 ;;		 -> STR_2(3), STR_1(4), 
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  2    0[COMRAM] int 
  4923 ;; Registers used:
  4924 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4930 ;;      Params:         6       0       0       0       0       0       0
  4931 ;;      Locals:         4       0       0       0       0       0       0
  4932 ;;      Temps:          1       0       0       0       0       0       0
  4933 ;;      Totals:        11       0       0       0       0       0       0
  4934 ;;Total ram usage:       11 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; Hardware stack levels required when called:    2
  4937 ;; This function calls:
  4938 ;;		Nothing
  4939 ;; This function is called by:
  4940 ;;		_vfpfcnvrt
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           	psect	text14
  4945  002FE4                     __ptext14:
  4946                           	opt callstack 0
  4947  002FE4                     _strncmp:
  4948                           	opt callstack 0
  4949  002FE4  FFFF               	dw	65535	; assembler added errata NOP
  4950                           
  4951                           ;incstack = 0
  4952  002FE6  C001  F008         	movff	strncmp@_l,strncmp@l
  4953  002FEA  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4954  002FEE  C003  F00A         	movff	strncmp@_r,strncmp@r
  4955  002FF2  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4956  002FF6  0605               	decf	strncmp@n,f,c
  4957  002FF8  A0D8               	btfss	status,0,c
  4958  002FFA  0606               	decf	strncmp@n+1,f,c
  4959  002FFC  2805               	incf	strncmp@n,w,c
  4960  002FFE  E110               	bnz	l3686
  4961  003000  2806               	incf	strncmp@n+1,w,c
  4962  003002  A4D8               	btfss	status,2,c
  4963  003004  D00D               	goto	l3686
  4964  003006  0E00               	movlw	0
  4965  003008  6E02               	movwf	?_strncmp+1,c
  4966  00300A  0E00               	movlw	0
  4967  00300C  6E01               	movwf	?_strncmp,c
  4968  00300E  D048               	goto	l1342
  4969  003010                     l3684:
  4970  003010  FFFF               	dw	65535	; assembler added errata NOP
  4971  003012  4A08               	infsnz	strncmp@l,f,c
  4972  003014  2A09               	incf	strncmp@l+1,f,c
  4973  003016  4A0A               	infsnz	strncmp@r,f,c
  4974  003018  2A0B               	incf	strncmp@r+1,f,c
  4975  00301A  0605               	decf	strncmp@n,f,c
  4976  00301C  A0D8               	btfss	status,0,c
  4977  00301E  0606               	decf	strncmp@n+1,f,c
  4978  003020                     l3686:
  4979  003020  FFFF               	dw	65535	; assembler added errata NOP
  4980  003022  C008  FFF6         	movff	strncmp@l,tblptrl
  4981  003026  C009  FFF7         	movff	strncmp@l+1,tblptrh
  4982  00302A                     	if	0	;tblptru may be non-zero
  4983  00302A                     	endif
  4984  00302A                     	if	0	;tblptru may be non-zero
  4985  00302A                     	endif
  4986  00302A  0008               	tblrd		*
  4987  00302C  FFFF               	dw	65535	; errata NOP
  4988  00302E  50F5               	movf	tablat,w,c
  4989  003030  0900               	iorlw	0
  4990  003032  B4D8               	btfsc	status,2,c
  4991  003034  D020               	goto	u3790
  4992  003036  C00A  FFF6         	movff	strncmp@r,tblptrl
  4993  00303A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4994  00303E                     	if	0	;tblptru may be non-zero
  4995  00303E                     	endif
  4996  00303E                     	if	0	;tblptru may be non-zero
  4997  00303E                     	endif
  4998  00303E  0008               	tblrd		*
  4999  003040  FFFF               	dw	65535	; errata NOP
  5000  003042  50F5               	movf	tablat,w,c
  5001  003044  0900               	iorlw	0
  5002  003046  B4D8               	btfsc	status,2,c
  5003  003048  D016               	goto	u3790
  5004  00304A  5005               	movf	strncmp@n,w,c
  5005  00304C  1006               	iorwf	strncmp@n+1,w,c
  5006  00304E  B4D8               	btfsc	status,2,c
  5007  003050  D012               	goto	u3790
  5008  003052  C008  FFF6         	movff	strncmp@l,tblptrl
  5009  003056  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5010  00305A                     	if	0	;tblptru may be non-zero
  5011  00305A                     	endif
  5012  00305A                     	if	0	;tblptru may be non-zero
  5013  00305A                     	endif
  5014  00305A  0008               	tblrd		*
  5015  00305C  FFFF               	dw	65535	; errata NOP
  5016  00305E  CFF5 F007          	movff	tablat,??_strncmp
  5017  003062  C00A  FFF6         	movff	strncmp@r,tblptrl
  5018  003066  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5019  00306A                     	if	0	;tblptru may be non-zero
  5020  00306A                     	endif
  5021  00306A                     	if	0	;tblptru may be non-zero
  5022  00306A                     	endif
  5023  00306A  0008               	tblrd		*
  5024  00306C  FFFF               	dw	65535	; errata NOP
  5025  00306E  50F5               	movf	tablat,w,c
  5026  003070  1807               	xorwf	??_strncmp,w,c
  5027  003072  B4D8               	btfsc	status,2,c
  5028  003074  D7CD               	goto	l3684
  5029  003076                     u3790:
  5030  003076  FFFF               	dw	65535	; assembler added errata NOP
  5031  003078  C008  FFF6         	movff	strncmp@l,tblptrl
  5032  00307C  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5033  003080                     	if	0	;tblptru may be non-zero
  5034  003080                     	endif
  5035  003080                     	if	0	;tblptru may be non-zero
  5036  003080                     	endif
  5037  003080  0008               	tblrd		*
  5038  003082  FFFF               	dw	65535	; errata NOP
  5039  003084  CFF5 F007          	movff	tablat,??_strncmp
  5040  003088  C00A  FFF6         	movff	strncmp@r,tblptrl
  5041  00308C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5042  003090                     	if	0	;tblptru may be non-zero
  5043  003090                     	endif
  5044  003090                     	if	0	;tblptru may be non-zero
  5045  003090                     	endif
  5046  003090  0008               	tblrd		*
  5047  003092  FFFF               	dw	65535	; errata NOP
  5048  003094  50F5               	movf	tablat,w,c
  5049  003096  5C07               	subwf	??_strncmp,w,c
  5050  003098  6E01               	movwf	?_strncmp,c
  5051  00309A  6A02               	clrf	?_strncmp+1,c
  5052  00309C  A0D8               	btfss	status,0,c
  5053  00309E  0602               	decf	?_strncmp+1,f,c
  5054  0030A0                     l1342:
  5055  0030A0  FFFF               	dw	65535	; assembler added errata NOP
  5056  0030A2  0012               	return		;funcret
  5057  0030A4  FFFF               	dw	65535	; errata NOP
  5058  0030A6                     __end_of_strncmp:
  5059                           	opt callstack 0
  5060                           
  5061 ;; *************** function _stoa *****************
  5062 ;; Defined at:
  5063 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5066 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5067 ;;  s               2   11[COMRAM] PTR unsigned char 
  5068 ;;		 -> ?_snprintf(2), ?_sprintf(2), 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;  nuls            7   14[COMRAM] unsigned char [7]
  5071 ;;  l               2   29[COMRAM] int 
  5072 ;;  p               2   27[COMRAM] int 
  5073 ;;  cp              2   25[COMRAM] PTR unsigned char 
  5074 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), 
  5075 ;;  w               2   23[COMRAM] int 
  5076 ;;  i               2   21[COMRAM] int 
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  2    9[COMRAM] int 
  5079 ;; Registers used:
  5080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5086 ;;      Params:         4       0       0       0       0       0       0
  5087 ;;      Locals:        17       0       0       0       0       0       0
  5088 ;;      Temps:          1       0       0       0       0       0       0
  5089 ;;      Totals:        22       0       0       0       0       0       0
  5090 ;;Total ram usage:       22 bytes
  5091 ;; Hardware stack levels used:    1
  5092 ;; Hardware stack levels required when called:    4
  5093 ;; This function calls:
  5094 ;;		_fputc
  5095 ;;		_strlen
  5096 ;; This function is called by:
  5097 ;;		_vfpfcnvrt
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text15
  5102  002AEE                     __ptext15:
  5103                           	opt callstack 0
  5104  002AEE                     _stoa:
  5105                           	opt callstack 0
  5106  002AEE  FFFF               	dw	65535	; assembler added errata NOP
  5107                           
  5108                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  5109                           
  5110                           ;incstack = 0
  5111  002AF0  EE20  F0E1         	lfsr	2,stoa@F1152
  5112  002AF4  EE10  F00F         	lfsr	1,stoa@nuls
  5113  002AF8  0E06               	movlw	6
  5114  002AFA                     u3351:
  5115  002AFA  CFDB FFE3          	movff	plusw2,plusw1
  5116  002AFE  06E8               	decf	wreg,f,c
  5117  002B00  E2FC               	bc	u3351
  5118                           
  5119                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  5120  002B02  C00C  F01A         	movff	stoa@s,stoa@cp
  5121  002B06  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  5122                           
  5123                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  5124  002B0A  501A               	movf	stoa@cp,w,c
  5125  002B0C  101B               	iorwf	stoa@cp+1,w,c
  5126  002B0E  A4D8               	btfss	status,2,c
  5127  002B10  D004               	goto	l3500
  5128                           
  5129                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  5130  002B12  0E0F               	movlw	low stoa@nuls
  5131  002B14  6E1A               	movwf	stoa@cp,c
  5132  002B16  0E00               	movlw	high stoa@nuls
  5133  002B18  6E1B               	movwf	stoa@cp+1,c
  5134  002B1A                     l3500:
  5135  002B1A  FFFF               	dw	65535	; assembler added errata NOP
  5136                           
  5137                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  5138  002B1C  C01A  F001         	movff	stoa@cp,strlen@s
  5139  002B20  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  5140  002B24  EC4C  F01C         	call	_strlen	;wreg free
  5141  002B28  C001  F01E         	movff	?_strlen,stoa@l
  5142  002B2C  C002  F01F         	movff	?_strlen+1,stoa@l+1
  5143                           
  5144                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  5145  002B30  C08F  F01C         	movff	_prec,stoa@p
  5146  002B34  C090  F01D         	movff	_prec+1,stoa@p+1
  5147                           
  5148                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  5149  002B38  BE1D               	btfsc	stoa@p+1,7,c
  5150  002B3A  D00E               	goto	l383
  5151  002B3C  501E               	movf	stoa@l,w,c
  5152  002B3E  5C1C               	subwf	stoa@p,w,c
  5153  002B40  501D               	movf	stoa@p+1,w,c
  5154  002B42  0A80               	xorlw	128
  5155  002B44  6E0E               	movwf	??_stoa& (0+255),c
  5156  002B46  501F               	movf	stoa@l+1,w,c
  5157  002B48  0A80               	xorlw	128
  5158  002B4A  580E               	subwfb	??_stoa& (0+255),w,c
  5159  002B4C  B0D8               	btfsc	status,0,c
  5160  002B4E  D004               	goto	l383
  5161  002B50  C01C  F01E         	movff	stoa@p,stoa@l
  5162  002B54  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  5163  002B58                     l383:
  5164  002B58  FFFF               	dw	65535	; assembler added errata NOP
  5165                           
  5166                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  5167  002B5A  C01E  F01C         	movff	stoa@l,stoa@p
  5168  002B5E  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  5169                           
  5170                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  5171  002B62  C08D  F018         	movff	_width,stoa@w
  5172  002B66  C08E  F019         	movff	_width+1,stoa@w+1
  5173                           
  5174                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  5175  002B6A  0100               	movlb	0	; () banked
  5176  002B6C  A191               	btfss	_flags& (0+255),0,b
  5177  002B6E  D00E               	goto	l3514
  5178  002B70  D018               	goto	u3400
  5179  002B72                     l3510:
  5180  002B72  FFFF               	dw	65535	; assembler added errata NOP
  5181                           
  5182                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  5183  002B74  0E00               	movlw	0
  5184  002B76  6E02               	movwf	fputc@c+1,c
  5185  002B78  0E20               	movlw	32
  5186  002B7A  6E01               	movwf	fputc@c,c
  5187  002B7C  C00A  F003         	movff	stoa@fp,fputc@fp
  5188  002B80  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5189  002B84  ECB1  F018         	call	_fputc	;wreg free
  5190                           
  5191                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  5192  002B88  4A1E               	infsnz	stoa@l,f,c
  5193  002B8A  2A1F               	incf	stoa@l+1,f,c
  5194  002B8C                     l3514:
  5195  002B8C  FFFF               	dw	65535	; assembler added errata NOP
  5196                           
  5197                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  5198  002B8E  5018               	movf	stoa@w,w,c
  5199  002B90  5C1E               	subwf	stoa@l,w,c
  5200  002B92  501F               	movf	stoa@l+1,w,c
  5201  002B94  0A80               	xorlw	128
  5202  002B96  6E0E               	movwf	??_stoa& (0+255),c
  5203  002B98  5019               	movf	stoa@w+1,w,c
  5204  002B9A  0A80               	xorlw	128
  5205  002B9C  580E               	subwfb	??_stoa& (0+255),w,c
  5206  002B9E  A0D8               	btfss	status,0,c
  5207  002BA0  D7E8               	goto	l3510
  5208  002BA2                     u3400:
  5209  002BA2  FFFF               	dw	65535	; assembler added errata NOP
  5210                           
  5211                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  5212  002BA4  0E00               	movlw	0
  5213  002BA6  6E17               	movwf	stoa@i+1,c
  5214  002BA8  0E00               	movlw	0
  5215  002BAA  6E16               	movwf	stoa@i,c
  5216                           
  5217                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  5218  002BAC  D014               	goto	l3524
  5219  002BAE                     l3518:
  5220  002BAE  FFFF               	dw	65535	; assembler added errata NOP
  5221                           
  5222                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  5223  002BB0  C01A  FFD9         	movff	stoa@cp,fsr2l
  5224  002BB4  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  5225  002BB8  50DF               	movf	indf2,w,c
  5226  002BBA  6E0E               	movwf	??_stoa& (0+255),c
  5227  002BBC  500E               	movf	??_stoa,w,c
  5228  002BBE  6E01               	movwf	fputc@c,c
  5229  002BC0  6A02               	clrf	fputc@c+1,c
  5230  002BC2  C00A  F003         	movff	stoa@fp,fputc@fp
  5231  002BC6  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5232  002BCA  ECB1  F018         	call	_fputc	;wreg free
  5233                           
  5234                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  5235  002BCE  4A1A               	infsnz	stoa@cp,f,c
  5236  002BD0  2A1B               	incf	stoa@cp+1,f,c
  5237                           
  5238                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  5239  002BD2  4A16               	infsnz	stoa@i,f,c
  5240  002BD4  2A17               	incf	stoa@i+1,f,c
  5241  002BD6                     l3524:
  5242  002BD6  FFFF               	dw	65535	; assembler added errata NOP
  5243                           
  5244                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  5245  002BD8  501C               	movf	stoa@p,w,c
  5246  002BDA  5C16               	subwf	stoa@i,w,c
  5247  002BDC  5017               	movf	stoa@i+1,w,c
  5248  002BDE  0A80               	xorlw	128
  5249  002BE0  6E0E               	movwf	??_stoa& (0+255),c
  5250  002BE2  501D               	movf	stoa@p+1,w,c
  5251  002BE4  0A80               	xorlw	128
  5252  002BE6  580E               	subwfb	??_stoa& (0+255),w,c
  5253  002BE8  A0D8               	btfss	status,0,c
  5254  002BEA  D7E1               	goto	l3518
  5255                           
  5256                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  5257  002BEC  0100               	movlb	0	; () banked
  5258  002BEE  B191               	btfsc	_flags& (0+255),0,b
  5259  002BF0  D00E               	goto	l3532
  5260  002BF2  D018               	goto	u3430
  5261  002BF4                     l3528:
  5262  002BF4  FFFF               	dw	65535	; assembler added errata NOP
  5263                           
  5264                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  5265  002BF6  0E00               	movlw	0
  5266  002BF8  6E02               	movwf	fputc@c+1,c
  5267  002BFA  0E20               	movlw	32
  5268  002BFC  6E01               	movwf	fputc@c,c
  5269  002BFE  C00A  F003         	movff	stoa@fp,fputc@fp
  5270  002C02  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5271  002C06  ECB1  F018         	call	_fputc	;wreg free
  5272                           
  5273                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  5274  002C0A  4A1E               	infsnz	stoa@l,f,c
  5275  002C0C  2A1F               	incf	stoa@l+1,f,c
  5276  002C0E                     l3532:
  5277  002C0E  FFFF               	dw	65535	; assembler added errata NOP
  5278                           
  5279                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  5280  002C10  5018               	movf	stoa@w,w,c
  5281  002C12  5C1E               	subwf	stoa@l,w,c
  5282  002C14  501F               	movf	stoa@l+1,w,c
  5283  002C16  0A80               	xorlw	128
  5284  002C18  6E0E               	movwf	??_stoa& (0+255),c
  5285  002C1A  5019               	movf	stoa@w+1,w,c
  5286  002C1C  0A80               	xorlw	128
  5287  002C1E  580E               	subwfb	??_stoa& (0+255),w,c
  5288  002C20  A0D8               	btfss	status,0,c
  5289  002C22  D7E8               	goto	l3528
  5290  002C24                     u3430:
  5291  002C24  FFFF               	dw	65535	; assembler added errata NOP
  5292                           
  5293                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  5294                           
  5295                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 586:     }
  5296  002C26  C01E  F00A         	movff	stoa@l,?_stoa
  5297  002C2A  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  5298  002C2E  0012               	return		;funcret
  5299  002C30  FFFF               	dw	65535	; errata NOP
  5300  002C32                     __end_of_stoa:
  5301                           	opt callstack 0
  5302                           
  5303 ;; *************** function _otoa *****************
  5304 ;; Defined at:
  5305 ;;		line 507 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5308 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5309 ;;  d               8   29[COMRAM] unsigned long long 
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;  n               8   51[COMRAM] unsigned long long 
  5312 ;;  i               2   59[COMRAM] int 
  5313 ;;  w               2   49[COMRAM] int 
  5314 ;;  t               2   47[COMRAM] int 
  5315 ;;  p               2   45[COMRAM] int 
  5316 ;; Return value:  Size  Location     Type
  5317 ;;                  2   27[COMRAM] int 
  5318 ;; Registers used:
  5319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5325 ;;      Params:        10       0       0       0       0       0       0
  5326 ;;      Locals:        16       0       0       0       0       0       0
  5327 ;;      Temps:          8       0       0       0       0       0       0
  5328 ;;      Totals:        34       0       0       0       0       0       0
  5329 ;;Total ram usage:       34 bytes
  5330 ;; Hardware stack levels used:    1
  5331 ;; Hardware stack levels required when called:    6
  5332 ;; This function calls:
  5333 ;;		_pad
  5334 ;; This function is called by:
  5335 ;;		_vfpfcnvrt
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           	psect	text16
  5340  002536                     __ptext16:
  5341                           	opt callstack 0
  5342  002536                     _otoa:
  5343                           	opt callstack 0
  5344  002536  FFFF               	dw	65535	; assembler added errata NOP
  5345                           
  5346                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 507: static int otoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 508: {
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 509:     int i, p, t, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 510:     unsigned long long n;;/op
      +                          t/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 513:     if (!(prec < 0)) {
  5347                           
  5348                           ;incstack = 0
  5349  002538  0100               	movlb	0	; () banked
  5350  00253A  AF90               	btfss	(_prec+1)& (0+255),7,b
  5351                           
  5352                           ; BSR set to: 0
  5353                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 514:         flags &= ~(1 << 
      +                          1);
  5354  00253C  9391               	bcf	_flags& (0+255),1,b
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 516:     p = (0 < prec) ? pre
      +                          c : 1;
  5358  00253E  BF90               	btfsc	(_prec+1)& (0+255),7,b
  5359  002540  D005               	goto	u3260
  5360  002542  5190               	movf	(_prec+1)& (0+255),w,b
  5361  002544  E109               	bnz	l363
  5362  002546  058F               	decf	_prec& (0+255),w,b
  5363  002548  B0D8               	btfsc	status,0,c
  5364  00254A  D006               	goto	l363
  5365  00254C                     u3260:
  5366  00254C  FFFF               	dw	65535	; assembler added errata NOP
  5367                           
  5368                           ; BSR set to: 0
  5369  00254E  0E00               	movlw	0
  5370  002550  6E2F               	movwf	otoa@p+1,c
  5371  002552  0E01               	movlw	1
  5372  002554  6E2E               	movwf	otoa@p,c
  5373  002556  D005               	goto	l365
  5374  002558                     l363:
  5375  002558  FFFF               	dw	65535	; assembler added errata NOP
  5376                           
  5377                           ; BSR set to: 0
  5378  00255A  C08F  F02E         	movff	_prec,otoa@p
  5379  00255E  C090  F02F         	movff	_prec+1,otoa@p+1
  5380  002562                     l365:
  5381  002562  FFFF               	dw	65535	; assembler added errata NOP
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 517:     w = width;
  5385  002564  C08D  F032         	movff	_width,otoa@w
  5386  002568  C08E  F033         	movff	_width+1,otoa@w+1
  5387                           
  5388                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 520:     n = d;
  5389  00256C  C01E  F034         	movff	otoa@d,otoa@n
  5390  002570  C01F  F035         	movff	otoa@d+1,otoa@n+1
  5391  002574  C020  F036         	movff	otoa@d+2,otoa@n+2
  5392  002578  C021  F037         	movff	otoa@d+3,otoa@n+3
  5393  00257C  C022  F038         	movff	otoa@d+4,otoa@n+4
  5394  002580  C023  F039         	movff	otoa@d+5,otoa@n+5
  5395  002584  C024  F03A         	movff	otoa@d+6,otoa@n+6
  5396  002588  C025  F03B         	movff	otoa@d+7,otoa@n+7
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 521:     i = sizeof(dbuf) - 1
      +                          ;
  5400  00258C  0E00               	movlw	0
  5401  00258E  6E3D               	movwf	otoa@i+1,c
  5402  002590  0E1F               	movlw	31
  5403  002592  6E3C               	movwf	otoa@i,c
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 522:     dbuf[i] = '\0';
  5407  002594  0E00               	movlw	0
  5408  002596  6FB6               	movwf	(_dbuf+31)& (0+255),b
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 523:     t = 0;
  5412  002598  0E00               	movlw	0
  5413  00259A  6E31               	movwf	otoa@t+1,c
  5414  00259C  0E00               	movlw	0
  5415  00259E  6E30               	movwf	otoa@t,c
  5416                           
  5417                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5418  0025A0  D046               	goto	l3470
  5419  0025A2                     l3458:
  5420  0025A2  FFFF               	dw	65535	; assembler added errata NOP
  5421                           
  5422                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 525:         --i;
  5423  0025A4  063C               	decf	otoa@i,f,c
  5424  0025A6  A0D8               	btfss	status,0,c
  5425  0025A8  063D               	decf	otoa@i+1,f,c
  5426                           
  5427                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 526:         t = n & 07;
  5428  0025AA  0E07               	movlw	7
  5429  0025AC  1434               	andwf	otoa@n,w,c
  5430  0025AE  6E30               	movwf	otoa@t,c
  5431  0025B0  6A31               	clrf	otoa@t+1,c
  5432                           
  5433                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 527:         dbuf[i] = '0' + 
      +                          t;
  5434  0025B2  0E97               	movlw	low _dbuf
  5435  0025B4  243C               	addwf	otoa@i,w,c
  5436  0025B6  6ED9               	movwf	fsr2l,c
  5437  0025B8  0E00               	movlw	high _dbuf
  5438  0025BA  203D               	addwfc	otoa@i+1,w,c
  5439  0025BC  6EDA               	movwf	fsr2h,c
  5440  0025BE  5030               	movf	otoa@t,w,c
  5441  0025C0  0F30               	addlw	48
  5442  0025C2  6EDF               	movwf	indf2,c
  5443                           
  5444                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 528:         --p;
  5445  0025C4  062E               	decf	otoa@p,f,c
  5446  0025C6  A0D8               	btfss	status,0,c
  5447  0025C8  062F               	decf	otoa@p+1,f,c
  5448                           
  5449                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 529:         --w;
  5450  0025CA  0632               	decf	otoa@w,f,c
  5451  0025CC  A0D8               	btfss	status,0,c
  5452  0025CE  0633               	decf	otoa@w+1,f,c
  5453                           
  5454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 530:         n = n >> 3;
  5455  0025D0  C034  F026         	movff	otoa@n,??_otoa
  5456  0025D4  C035  F027         	movff	otoa@n+1,??_otoa+1
  5457  0025D8  C036  F028         	movff	otoa@n+2,??_otoa+2
  5458  0025DC  C037  F029         	movff	otoa@n+3,??_otoa+3
  5459  0025E0  C038  F02A         	movff	otoa@n+4,??_otoa+4
  5460  0025E4  C039  F02B         	movff	otoa@n+5,??_otoa+5
  5461  0025E8  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  5462  0025EC  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  5463  0025F0  0E04               	movlw	4
  5464  0025F2  D00A               	goto	u3270
  5465  0025F4                     u3275:
  5466  0025F4  FFFF               	dw	65535	; assembler added errata NOP
  5467  0025F6  90D8               	bcf	status,0,c
  5468  0025F8  322D               	rrcf	??_otoa+7,f,c
  5469  0025FA  322C               	rrcf	??_otoa+6,f,c
  5470  0025FC  322B               	rrcf	??_otoa+5,f,c
  5471  0025FE  322A               	rrcf	??_otoa+4,f,c
  5472  002600  3229               	rrcf	??_otoa+3,f,c
  5473  002602  3228               	rrcf	??_otoa+2,f,c
  5474  002604  3227               	rrcf	??_otoa+1,f,c
  5475  002606  3226               	rrcf	??_otoa,f,c
  5476  002608                     u3270:
  5477  002608  FFFF               	dw	65535	; assembler added errata NOP
  5478  00260A  2EE8               	decfsz	wreg,f,c
  5479  00260C  D7F3               	goto	u3275
  5480  00260E  C026  F034         	movff	??_otoa,otoa@n
  5481  002612  C027  F035         	movff	??_otoa+1,otoa@n+1
  5482  002616  C028  F036         	movff	??_otoa+2,otoa@n+2
  5483  00261A  C029  F037         	movff	??_otoa+3,otoa@n+3
  5484  00261E  C02A  F038         	movff	??_otoa+4,otoa@n+4
  5485  002622  C02B  F039         	movff	??_otoa+5,otoa@n+5
  5486  002626  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  5487  00262A  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  5488  00262E                     l3470:
  5489  00262E  FFFF               	dw	65535	; assembler added errata NOP
  5490                           
  5491                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 524:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5492  002630  BE3D               	btfsc	otoa@i+1,7,c
  5493  002632  D021               	goto	u3320
  5494  002634  503D               	movf	otoa@i+1,w,c
  5495  002636  E103               	bnz	u3280
  5496  002638  043C               	decf	otoa@i,w,c
  5497  00263A  A0D8               	btfss	status,0,c
  5498  00263C  D01C               	goto	u3320
  5499  00263E                     u3280:
  5500  00263E  5034               	movf	otoa@n,w,c
  5501  002640  1035               	iorwf	otoa@n+1,w,c
  5502  002642  1036               	iorwf	otoa@n+2,w,c
  5503  002644  1037               	iorwf	otoa@n+3,w,c
  5504  002646  1038               	iorwf	otoa@n+4,w,c
  5505  002648  1039               	iorwf	otoa@n+5,w,c
  5506  00264A  103A               	iorwf	otoa@n+6,w,c
  5507  00264C  103B               	iorwf	otoa@n+7,w,c
  5508  00264E  A4D8               	btfss	status,2,c
  5509  002650  D7A8               	goto	l3458
  5510  002652  BE2F               	btfsc	otoa@p+1,7,c
  5511  002654  D005               	goto	u3300
  5512  002656  502F               	movf	otoa@p+1,w,c
  5513  002658  E1A4               	bnz	l3458
  5514  00265A  042E               	decf	otoa@p,w,c
  5515  00265C  B0D8               	btfsc	status,0,c
  5516  00265E  D7A1               	goto	l3458
  5517  002660                     u3300:
  5518  002660  FFFF               	dw	65535	; assembler added errata NOP
  5519  002662  BE33               	btfsc	otoa@w+1,7,c
  5520  002664  D008               	goto	u3320
  5521  002666  5033               	movf	otoa@w+1,w,c
  5522  002668  E103               	bnz	u3310
  5523  00266A  0432               	decf	otoa@w,w,c
  5524  00266C  A0D8               	btfss	status,0,c
  5525  00266E  D003               	goto	u3320
  5526  002670                     u3310:
  5527  002670  0100               	movlb	0	; () banked
  5528  002672  B391               	btfsc	_flags& (0+255),1,b
  5529  002674  D796               	goto	l3458
  5530  002676                     u3320:
  5531  002676  FFFF               	dw	65535	; assembler added errata NOP
  5532                           
  5533                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 534:     if ((flags & (1 << 4
      +                          )) && t) {
  5534  002678  0100               	movlb	0	; () banked
  5535  00267A  A991               	btfss	_flags& (0+255),4,b
  5536  00267C  D012               	goto	l3488
  5537                           
  5538                           ; BSR set to: 0
  5539  00267E  5030               	movf	otoa@t,w,c
  5540  002680  1031               	iorwf	otoa@t+1,w,c
  5541  002682  B4D8               	btfsc	status,2,c
  5542  002684  D00E               	goto	l3488
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 535:         --i;
  5546  002686  063C               	decf	otoa@i,f,c
  5547  002688  A0D8               	btfss	status,0,c
  5548  00268A  063D               	decf	otoa@i+1,f,c
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 536:         dbuf[i] = '0';
  5552  00268C  0E97               	movlw	low _dbuf
  5553  00268E  243C               	addwf	otoa@i,w,c
  5554  002690  6ED9               	movwf	fsr2l,c
  5555  002692  0E00               	movlw	high _dbuf
  5556  002694  203D               	addwfc	otoa@i+1,w,c
  5557  002696  6EDA               	movwf	fsr2h,c
  5558  002698  0E30               	movlw	48
  5559  00269A  6EDF               	movwf	indf2,c
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 537:         --w;
  5563  00269C  0632               	decf	otoa@w,f,c
  5564  00269E  A0D8               	btfss	status,0,c
  5565  0026A0  0633               	decf	otoa@w+1,f,c
  5566  0026A2                     l3488:
  5567  0026A2  FFFF               	dw	65535	; assembler added errata NOP
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 541:     return pad(fp, &dbuf
      +                          [i], w);
  5571  0026A4  C01C  F011         	movff	otoa@fp,pad@fp
  5572  0026A8  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  5573  0026AC  0E97               	movlw	low _dbuf
  5574  0026AE  243C               	addwf	otoa@i,w,c
  5575  0026B0  6E13               	movwf	pad@buf,c
  5576  0026B2  0E00               	movlw	high _dbuf
  5577  0026B4  203D               	addwfc	otoa@i+1,w,c
  5578  0026B6  6E14               	movwf	pad@buf+1,c
  5579  0026B8  C032  F015         	movff	otoa@w,pad@p
  5580  0026BC  C033  F016         	movff	otoa@w+1,pad@p+1
  5581  0026C0  EC07  F019         	call	_pad	;wreg free
  5582  0026C4  C011  F01C         	movff	?_pad,?_otoa
  5583  0026C8  C012  F01D         	movff	?_pad+1,?_otoa+1
  5584  0026CC  0012               	return		;funcret
  5585  0026CE  FFFF               	dw	65535	; errata NOP
  5586  0026D0                     __end_of_otoa:
  5587                           	opt callstack 0
  5588                           
  5589 ;; *************** function _dtoa *****************
  5590 ;; Defined at:
  5591 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5594 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  5595 ;;  d               8   29[COMRAM] long long 
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;  n               8   53[COMRAM] long long 
  5598 ;;  i               2   61[COMRAM] int 
  5599 ;;  s               2   51[COMRAM] int 
  5600 ;;  w               2   49[COMRAM] int 
  5601 ;;  p               2   47[COMRAM] int 
  5602 ;; Return value:  Size  Location     Type
  5603 ;;                  2   27[COMRAM] int 
  5604 ;; Registers used:
  5605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5606 ;; Tracked objects:
  5607 ;;		On entry : 0/0
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5611 ;;      Params:        10       0       0       0       0       0       0
  5612 ;;      Locals:        18       0       0       0       0       0       0
  5613 ;;      Temps:          8       0       0       0       0       0       0
  5614 ;;      Totals:        36       0       0       0       0       0       0
  5615 ;;Total ram usage:       36 bytes
  5616 ;; Hardware stack levels used:    1
  5617 ;; Hardware stack levels required when called:    6
  5618 ;; This function calls:
  5619 ;;		___aodiv
  5620 ;;		___aomod
  5621 ;;		_abs
  5622 ;;		_pad
  5623 ;; This function is called by:
  5624 ;;		_vfpfcnvrt
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           
  5628                           	psect	text17
  5629  001EB2                     __ptext17:
  5630                           	opt callstack 0
  5631  001EB2                     _dtoa:
  5632                           	opt callstack 0
  5633  001EB2  FFFF               	dw	65535	; assembler added errata NOP
  5634                           
  5635                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  5636                           
  5637                           ;incstack = 0
  5638  001EB4  C01E  F036         	movff	dtoa@d,dtoa@n
  5639  001EB8  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5640  001EBC  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5641  001EC0  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5642  001EC4  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5643  001EC8  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5644  001ECC  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5645  001ED0  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5646                           
  5647                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  5648  001ED4  AE3D               	btfss	dtoa@n+7,7,c
  5649  001ED6  D002               	goto	u3100
  5650  001ED8  0E01               	movlw	1
  5651  001EDA  D002               	goto	u3110
  5652  001EDC                     u3100:
  5653  001EDC  FFFF               	dw	65535	; assembler added errata NOP
  5654  001EDE  0E00               	movlw	0
  5655  001EE0                     u3110:
  5656  001EE0  FFFF               	dw	65535	; assembler added errata NOP
  5657  001EE2  6E34               	movwf	dtoa@s,c
  5658  001EE4  6A35               	clrf	dtoa@s+1,c
  5659                           
  5660                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  5661  001EE6  5034               	movf	dtoa@s,w,c
  5662  001EE8  1035               	iorwf	dtoa@s+1,w,c
  5663  001EEA  B4D8               	btfsc	status,2,c
  5664  001EEC  D010               	goto	l3388
  5665                           
  5666                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  5667  001EEE  1E3D               	comf	dtoa@n+7,f,c
  5668  001EF0  1E3C               	comf	dtoa@n+6,f,c
  5669  001EF2  1E3B               	comf	dtoa@n+5,f,c
  5670  001EF4  1E3A               	comf	dtoa@n+4,f,c
  5671  001EF6  1E39               	comf	dtoa@n+3,f,c
  5672  001EF8  1E38               	comf	dtoa@n+2,f,c
  5673  001EFA  1E37               	comf	dtoa@n+1,f,c
  5674  001EFC  6C36               	negf	dtoa@n,c
  5675  001EFE  0E00               	movlw	0
  5676  001F00  2237               	addwfc	dtoa@n+1,f,c
  5677  001F02  2238               	addwfc	dtoa@n+2,f,c
  5678  001F04  2239               	addwfc	dtoa@n+3,f,c
  5679  001F06  223A               	addwfc	dtoa@n+4,f,c
  5680  001F08  223B               	addwfc	dtoa@n+5,f,c
  5681  001F0A  223C               	addwfc	dtoa@n+6,f,c
  5682  001F0C  223D               	addwfc	dtoa@n+7,f,c
  5683  001F0E                     l3388:
  5684  001F0E  FFFF               	dw	65535	; assembler added errata NOP
  5685                           
  5686                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  5687  001F10  0100               	movlb	0	; () banked
  5688  001F12  AF90               	btfss	(_prec+1)& (0+255),7,b
  5689                           
  5690                           ; BSR set to: 0
  5691                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  5692  001F14  9391               	bcf	_flags& (0+255),1,b
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  5696  001F16  BF90               	btfsc	(_prec+1)& (0+255),7,b
  5697  001F18  D005               	goto	u3140
  5698  001F1A  5190               	movf	(_prec+1)& (0+255),w,b
  5699  001F1C  E109               	bnz	l338
  5700  001F1E  058F               	decf	_prec& (0+255),w,b
  5701  001F20  B0D8               	btfsc	status,0,c
  5702  001F22  D006               	goto	l338
  5703  001F24                     u3140:
  5704  001F24  FFFF               	dw	65535	; assembler added errata NOP
  5705                           
  5706                           ; BSR set to: 0
  5707  001F26  0E00               	movlw	0
  5708  001F28  6E31               	movwf	dtoa@p+1,c
  5709  001F2A  0E01               	movlw	1
  5710  001F2C  6E30               	movwf	dtoa@p,c
  5711  001F2E  D005               	goto	l340
  5712  001F30                     l338:
  5713  001F30  FFFF               	dw	65535	; assembler added errata NOP
  5714                           
  5715                           ; BSR set to: 0
  5716  001F32  C08F  F030         	movff	_prec,dtoa@p
  5717  001F36  C090  F031         	movff	_prec+1,dtoa@p+1
  5718  001F3A                     l340:
  5719  001F3A  FFFF               	dw	65535	; assembler added errata NOP
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  5723  001F3C  C08D  F032         	movff	_width,dtoa@w
  5724  001F40  C08E  F033         	movff	_width+1,dtoa@w+1
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  5728  001F44  5034               	movf	dtoa@s,w,c
  5729  001F46  1035               	iorwf	dtoa@s+1,w,c
  5730  001F48  A4D8               	btfss	status,2,c
  5731  001F4A  D002               	goto	u3160
  5732                           
  5733                           ; BSR set to: 0
  5734  001F4C  A591               	btfss	_flags& (0+255),2,b
  5735  001F4E  D004               	goto	l3402
  5736  001F50                     u3160:
  5737  001F50  FFFF               	dw	65535	; assembler added errata NOP
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  5741  001F52  0632               	decf	dtoa@w,f,c
  5742  001F54  A0D8               	btfss	status,0,c
  5743  001F56  0633               	decf	dtoa@w+1,f,c
  5744  001F58                     l3402:
  5745  001F58  FFFF               	dw	65535	; assembler added errata NOP
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  5749  001F5A  0E00               	movlw	0
  5750  001F5C  6E3F               	movwf	dtoa@i+1,c
  5751  001F5E  0E1F               	movlw	31
  5752  001F60  6E3E               	movwf	dtoa@i,c
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  5756  001F62  0E00               	movlw	0
  5757  001F64  6FB6               	movwf	(_dbuf+31)& (0+255),b
  5758                           
  5759                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5760  001F66  D07D               	goto	l3416
  5761  001F68                     l3406:
  5762  001F68  FFFF               	dw	65535	; assembler added errata NOP
  5763                           
  5764                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  5765  001F6A  063E               	decf	dtoa@i,f,c
  5766  001F6C  A0D8               	btfss	status,0,c
  5767  001F6E  063F               	decf	dtoa@i+1,f,c
  5768                           
  5769                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  5770  001F70  0E97               	movlw	low _dbuf
  5771  001F72  243E               	addwf	dtoa@i,w,c
  5772  001F74  6ED9               	movwf	fsr2l,c
  5773  001F76  0E00               	movlw	high _dbuf
  5774  001F78  203F               	addwfc	dtoa@i+1,w,c
  5775  001F7A  6EDA               	movwf	fsr2h,c
  5776  001F7C  C036  F001         	movff	dtoa@n,___aomod@dividend
  5777  001F80  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5778  001F84  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5779  001F88  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5780  001F8C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5781  001F90  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5782  001F94  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5783  001F98  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5784  001F9C  0E0A               	movlw	10
  5785  001F9E  6E09               	movwf	___aomod@divisor,c
  5786  001FA0  0E00               	movlw	0
  5787  001FA2  6E0A               	movwf	___aomod@divisor+1,c
  5788  001FA4  0E00               	movlw	0
  5789  001FA6  6E0B               	movwf	___aomod@divisor+2,c
  5790  001FA8  0E00               	movlw	0
  5791  001FAA  6E0C               	movwf	___aomod@divisor+3,c
  5792  001FAC  0E00               	movlw	0
  5793  001FAE  6E0D               	movwf	___aomod@divisor+4,c
  5794  001FB0  0E00               	movlw	0
  5795  001FB2  6E0E               	movwf	___aomod@divisor+5,c
  5796  001FB4  0E00               	movlw	0
  5797  001FB6  6E0F               	movwf	___aomod@divisor+6,c
  5798  001FB8  0E00               	movlw	0
  5799  001FBA  6E10               	movwf	___aomod@divisor+7,c
  5800  001FBC  EC19  F016         	call	___aomod	;wreg free
  5801  001FC0  C001  F026         	movff	?___aomod,??_dtoa
  5802  001FC4  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5803  001FC8  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5804  001FCC  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5805  001FD0  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5806  001FD4  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5807  001FD8  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5808  001FDC  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5809  001FE0  C026  F013         	movff	??_dtoa,abs@a
  5810  001FE4  C028  F014         	movff	??_dtoa+2,abs@a+1
  5811  001FE8  ECDA  F01B         	call	_abs	;wreg free
  5812  001FEC  5013               	movf	?_abs,w,c
  5813  001FEE  0F30               	addlw	48
  5814  001FF0  6EDF               	movwf	indf2,c
  5815                           
  5816                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  5817  001FF2  0630               	decf	dtoa@p,f,c
  5818  001FF4  A0D8               	btfss	status,0,c
  5819  001FF6  0631               	decf	dtoa@p+1,f,c
  5820                           
  5821                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  5822  001FF8  0632               	decf	dtoa@w,f,c
  5823  001FFA  A0D8               	btfss	status,0,c
  5824  001FFC  0633               	decf	dtoa@w+1,f,c
  5825                           
  5826                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  5827  001FFE  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5828  002002  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5829  002006  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5830  00200A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5831  00200E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5832  002012  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5833  002016  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5834  00201A  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5835  00201E  0E0A               	movlw	10
  5836  002020  6E09               	movwf	___aodiv@divisor,c
  5837  002022  0E00               	movlw	0
  5838  002024  6E0A               	movwf	___aodiv@divisor+1,c
  5839  002026  0E00               	movlw	0
  5840  002028  6E0B               	movwf	___aodiv@divisor+2,c
  5841  00202A  0E00               	movlw	0
  5842  00202C  6E0C               	movwf	___aodiv@divisor+3,c
  5843  00202E  0E00               	movlw	0
  5844  002030  6E0D               	movwf	___aodiv@divisor+4,c
  5845  002032  0E00               	movlw	0
  5846  002034  6E0E               	movwf	___aodiv@divisor+5,c
  5847  002036  0E00               	movlw	0
  5848  002038  6E0F               	movwf	___aodiv@divisor+6,c
  5849  00203A  0E00               	movlw	0
  5850  00203C  6E10               	movwf	___aodiv@divisor+7,c
  5851  00203E  EC1B  F014         	call	___aodiv	;wreg free
  5852  002042  C001  F036         	movff	?___aodiv,dtoa@n
  5853  002046  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5854  00204A  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5855  00204E  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5856  002052  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5857  002056  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5858  00205A  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5859  00205E  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5860  002062                     l3416:
  5861  002062  FFFF               	dw	65535	; assembler added errata NOP
  5862                           
  5863                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5864  002064  BE3F               	btfsc	dtoa@i+1,7,c
  5865  002066  D021               	goto	u3210
  5866  002068  503F               	movf	dtoa@i+1,w,c
  5867  00206A  E103               	bnz	u3170
  5868  00206C  043E               	decf	dtoa@i,w,c
  5869  00206E  A0D8               	btfss	status,0,c
  5870  002070  D01C               	goto	u3210
  5871  002072                     u3170:
  5872  002072  5036               	movf	dtoa@n,w,c
  5873  002074  1037               	iorwf	dtoa@n+1,w,c
  5874  002076  1038               	iorwf	dtoa@n+2,w,c
  5875  002078  1039               	iorwf	dtoa@n+3,w,c
  5876  00207A  103A               	iorwf	dtoa@n+4,w,c
  5877  00207C  103B               	iorwf	dtoa@n+5,w,c
  5878  00207E  103C               	iorwf	dtoa@n+6,w,c
  5879  002080  103D               	iorwf	dtoa@n+7,w,c
  5880  002082  A4D8               	btfss	status,2,c
  5881  002084  D771               	goto	l3406
  5882  002086  BE31               	btfsc	dtoa@p+1,7,c
  5883  002088  D005               	goto	u3190
  5884  00208A  5031               	movf	dtoa@p+1,w,c
  5885  00208C  E102               	bnz	u3191
  5886  00208E  0430               	decf	dtoa@p,w,c
  5887  002090  B0D8               	btfsc	status,0,c
  5888  002092                     u3191:
  5889  002092  D76A               	goto	l3406
  5890  002094                     u3190:
  5891  002094  FFFF               	dw	65535	; assembler added errata NOP
  5892  002096  BE33               	btfsc	dtoa@w+1,7,c
  5893  002098  D008               	goto	u3210
  5894  00209A  5033               	movf	dtoa@w+1,w,c
  5895  00209C  E103               	bnz	u3200
  5896  00209E  0432               	decf	dtoa@w,w,c
  5897  0020A0  A0D8               	btfss	status,0,c
  5898  0020A2  D003               	goto	u3210
  5899  0020A4                     u3200:
  5900  0020A4  0100               	movlb	0	; () banked
  5901  0020A6  B391               	btfsc	_flags& (0+255),1,b
  5902  0020A8  D75F               	goto	l3406
  5903  0020AA                     u3210:
  5904  0020AA  FFFF               	dw	65535	; assembler added errata NOP
  5905                           
  5906                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  5907  0020AC  5034               	movf	dtoa@s,w,c
  5908  0020AE  1035               	iorwf	dtoa@s+1,w,c
  5909  0020B0  A4D8               	btfss	status,2,c
  5910  0020B2  D003               	goto	u3230
  5911  0020B4  0100               	movlb	0	; () banked
  5912  0020B6  A591               	btfss	_flags& (0+255),2,b
  5913  0020B8  D01A               	goto	l3440
  5914  0020BA                     u3230:
  5915  0020BA  FFFF               	dw	65535	; assembler added errata NOP
  5916                           
  5917                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  5918  0020BC  063E               	decf	dtoa@i,f,c
  5919  0020BE  A0D8               	btfss	status,0,c
  5920  0020C0  063F               	decf	dtoa@i+1,f,c
  5921                           
  5922                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  5923  0020C2  5034               	movf	dtoa@s,w,c
  5924  0020C4  1035               	iorwf	dtoa@s+1,w,c
  5925  0020C6  A4D8               	btfss	status,2,c
  5926  0020C8  D004               	goto	l3436
  5927  0020CA  0E00               	movlw	0
  5928  0020CC  6E2F               	movwf	_dtoa$1099+1,c
  5929  0020CE  0E2B               	movlw	43
  5930  0020D0  D004               	goto	L20
  5931  0020D2                     l3436:
  5932  0020D2  FFFF               	dw	65535	; assembler added errata NOP
  5933  0020D4  0E00               	movlw	0
  5934  0020D6  6E2F               	movwf	_dtoa$1099+1,c
  5935  0020D8  0E2D               	movlw	45
  5936  0020DA                     L20:
  5937  0020DA  FFFF               	dw	65535	; assembler added errata NOP
  5938  0020DC  6E2E               	movwf	_dtoa$1099,c
  5939  0020DE  0E97               	movlw	low _dbuf
  5940  0020E0  243E               	addwf	dtoa@i,w,c
  5941  0020E2  6ED9               	movwf	fsr2l,c
  5942  0020E4  0E00               	movlw	high _dbuf
  5943  0020E6  203F               	addwfc	dtoa@i+1,w,c
  5944  0020E8  6EDA               	movwf	fsr2h,c
  5945  0020EA  C02E  FFDF         	movff	_dtoa$1099,indf2
  5946  0020EE                     l3440:
  5947  0020EE  FFFF               	dw	65535	; assembler added errata NOP
  5948                           
  5949                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  5950  0020F0  C01C  F011         	movff	dtoa@fp,pad@fp
  5951  0020F4  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5952  0020F8  0E97               	movlw	low _dbuf
  5953  0020FA  243E               	addwf	dtoa@i,w,c
  5954  0020FC  6E13               	movwf	pad@buf,c
  5955  0020FE  0E00               	movlw	high _dbuf
  5956  002100  203F               	addwfc	dtoa@i+1,w,c
  5957  002102  6E14               	movwf	pad@buf+1,c
  5958  002104  C032  F015         	movff	dtoa@w,pad@p
  5959  002108  C033  F016         	movff	dtoa@w+1,pad@p+1
  5960  00210C  EC07  F019         	call	_pad	;wreg free
  5961  002110  C011  F01C         	movff	?_pad,?_dtoa
  5962  002114  C012  F01D         	movff	?_pad+1,?_dtoa+1
  5963  002118  0012               	return		;funcret
  5964  00211A  FFFF               	dw	65535	; errata NOP
  5965  00211C                     __end_of_dtoa:
  5966                           	opt callstack 0
  5967                           
  5968 ;; *************** function _abs *****************
  5969 ;; Defined at:
  5970 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  a               2   18[COMRAM] int 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;		None
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  2   18[COMRAM] int 
  5977 ;; Registers used:
  5978 ;;		wreg, status,2, status,0
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5984 ;;      Params:         2       0       0       0       0       0       0
  5985 ;;      Locals:         0       0       0       0       0       0       0
  5986 ;;      Temps:          2       0       0       0       0       0       0
  5987 ;;      Totals:         4       0       0       0       0       0       0
  5988 ;;Total ram usage:        4 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:    2
  5991 ;; This function calls:
  5992 ;;		Nothing
  5993 ;; This function is called by:
  5994 ;;		_dtoa
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text18
  5999  0037B4                     __ptext18:
  6000                           	opt callstack 0
  6001  0037B4                     _abs:
  6002                           	opt callstack 0
  6003  0037B4  FFFF               	dw	65535	; assembler added errata NOP
  6004                           
  6005                           ;incstack = 0
  6006  0037B6  BE14               	btfsc	abs@a+1,7,c
  6007  0037B8  D005               	goto	u2770
  6008  0037BA  5014               	movf	abs@a+1,w,c
  6009  0037BC  E111               	bnz	l1211
  6010  0037BE  0413               	decf	abs@a,w,c
  6011  0037C0  B0D8               	btfsc	status,0,c
  6012  0037C2  D00E               	goto	l1211
  6013  0037C4                     u2770:
  6014  0037C4  FFFF               	dw	65535	; assembler added errata NOP
  6015  0037C6  C013  F015         	movff	abs@a,??_abs
  6016  0037CA  C014  F016         	movff	abs@a+1,??_abs+1
  6017  0037CE  1E15               	comf	??_abs,f,c
  6018  0037D0  1E16               	comf	??_abs+1,f,c
  6019  0037D2  4A15               	infsnz	??_abs,f,c
  6020  0037D4  2A16               	incf	??_abs+1,f,c
  6021  0037D6  C015  F013         	movff	??_abs,?_abs
  6022  0037DA  C016  F014         	movff	??_abs+1,?_abs+1
  6023  0037DE  D005               	goto	l1214
  6024  0037E0                     l1211:
  6025  0037E0  FFFF               	dw	65535	; assembler added errata NOP
  6026  0037E2  C013  F013         	movff	abs@a,?_abs
  6027  0037E6  C014  F014         	movff	abs@a+1,?_abs+1
  6028  0037EA                     l1214:
  6029  0037EA  FFFF               	dw	65535	; assembler added errata NOP
  6030  0037EC  0012               	return		;funcret
  6031  0037EE  FFFF               	dw	65535	; errata NOP
  6032  0037F0                     __end_of_abs:
  6033                           	opt callstack 0
  6034                           
  6035 ;; *************** function ___aomod *****************
  6036 ;; Defined at:
  6037 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  dividend        8    0[COMRAM] long long 
  6040 ;;  divisor         8    8[COMRAM] long long 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  sign            1   17[COMRAM] unsigned char 
  6043 ;;  counter         1   16[COMRAM] unsigned char 
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  8    0[COMRAM] long long 
  6046 ;; Registers used:
  6047 ;;		wreg, status,2, status,0
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6053 ;;      Params:        16       0       0       0       0       0       0
  6054 ;;      Locals:         2       0       0       0       0       0       0
  6055 ;;      Temps:          0       0       0       0       0       0       0
  6056 ;;      Totals:        18       0       0       0       0       0       0
  6057 ;;Total ram usage:       18 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    2
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_dtoa
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           	psect	text19
  6068  002C32                     __ptext19:
  6069                           	opt callstack 0
  6070  002C32                     ___aomod:
  6071                           	opt callstack 0
  6072  002C32  FFFF               	dw	65535	; assembler added errata NOP
  6073                           
  6074                           ;incstack = 0
  6075  002C34  0E00               	movlw	0
  6076  002C36  6E12               	movwf	___aomod@sign,c
  6077  002C38  AE08               	btfss	___aomod@dividend+7,7,c
  6078  002C3A  D012               	goto	l3290
  6079  002C3C  1E08               	comf	___aomod@dividend+7,f,c
  6080  002C3E  1E07               	comf	___aomod@dividend+6,f,c
  6081  002C40  1E06               	comf	___aomod@dividend+5,f,c
  6082  002C42  1E05               	comf	___aomod@dividend+4,f,c
  6083  002C44  1E04               	comf	___aomod@dividend+3,f,c
  6084  002C46  1E03               	comf	___aomod@dividend+2,f,c
  6085  002C48  1E02               	comf	___aomod@dividend+1,f,c
  6086  002C4A  6C01               	negf	___aomod@dividend,c
  6087  002C4C  0E00               	movlw	0
  6088  002C4E  2202               	addwfc	___aomod@dividend+1,f,c
  6089  002C50  2203               	addwfc	___aomod@dividend+2,f,c
  6090  002C52  2204               	addwfc	___aomod@dividend+3,f,c
  6091  002C54  2205               	addwfc	___aomod@dividend+4,f,c
  6092  002C56  2206               	addwfc	___aomod@dividend+5,f,c
  6093  002C58  2207               	addwfc	___aomod@dividend+6,f,c
  6094  002C5A  2208               	addwfc	___aomod@dividend+7,f,c
  6095  002C5C  0E01               	movlw	1
  6096  002C5E  6E12               	movwf	___aomod@sign,c
  6097  002C60                     l3290:
  6098  002C60  FFFF               	dw	65535	; assembler added errata NOP
  6099  002C62  AE10               	btfss	___aomod@divisor+7,7,c
  6100  002C64  D010               	goto	l3294
  6101  002C66  1E10               	comf	___aomod@divisor+7,f,c
  6102  002C68  1E0F               	comf	___aomod@divisor+6,f,c
  6103  002C6A  1E0E               	comf	___aomod@divisor+5,f,c
  6104  002C6C  1E0D               	comf	___aomod@divisor+4,f,c
  6105  002C6E  1E0C               	comf	___aomod@divisor+3,f,c
  6106  002C70  1E0B               	comf	___aomod@divisor+2,f,c
  6107  002C72  1E0A               	comf	___aomod@divisor+1,f,c
  6108  002C74  6C09               	negf	___aomod@divisor,c
  6109  002C76  0E00               	movlw	0
  6110  002C78  220A               	addwfc	___aomod@divisor+1,f,c
  6111  002C7A  220B               	addwfc	___aomod@divisor+2,f,c
  6112  002C7C  220C               	addwfc	___aomod@divisor+3,f,c
  6113  002C7E  220D               	addwfc	___aomod@divisor+4,f,c
  6114  002C80  220E               	addwfc	___aomod@divisor+5,f,c
  6115  002C82  220F               	addwfc	___aomod@divisor+6,f,c
  6116  002C84  2210               	addwfc	___aomod@divisor+7,f,c
  6117  002C86                     l3294:
  6118  002C86  FFFF               	dw	65535	; assembler added errata NOP
  6119  002C88  5009               	movf	___aomod@divisor,w,c
  6120  002C8A  100A               	iorwf	___aomod@divisor+1,w,c
  6121  002C8C  100B               	iorwf	___aomod@divisor+2,w,c
  6122  002C8E  100C               	iorwf	___aomod@divisor+3,w,c
  6123  002C90  100D               	iorwf	___aomod@divisor+4,w,c
  6124  002C92  100E               	iorwf	___aomod@divisor+5,w,c
  6125  002C94  100F               	iorwf	___aomod@divisor+6,w,c
  6126  002C96  1010               	iorwf	___aomod@divisor+7,w,c
  6127  002C98  B4D8               	btfsc	status,2,c
  6128  002C9A  D040               	goto	l3310
  6129  002C9C  0E01               	movlw	1
  6130  002C9E  6E11               	movwf	___aomod@counter,c
  6131  002CA0  D00B               	goto	l3300
  6132  002CA2                     l3298:
  6133  002CA2  FFFF               	dw	65535	; assembler added errata NOP
  6134  002CA4  90D8               	bcf	status,0,c
  6135  002CA6  3609               	rlcf	___aomod@divisor,f,c
  6136  002CA8  360A               	rlcf	___aomod@divisor+1,f,c
  6137  002CAA  360B               	rlcf	___aomod@divisor+2,f,c
  6138  002CAC  360C               	rlcf	___aomod@divisor+3,f,c
  6139  002CAE  360D               	rlcf	___aomod@divisor+4,f,c
  6140  002CB0  360E               	rlcf	___aomod@divisor+5,f,c
  6141  002CB2  360F               	rlcf	___aomod@divisor+6,f,c
  6142  002CB4  3610               	rlcf	___aomod@divisor+7,f,c
  6143  002CB6  2A11               	incf	___aomod@counter,f,c
  6144  002CB8                     l3300:
  6145  002CB8  FFFF               	dw	65535	; assembler added errata NOP
  6146  002CBA  AE10               	btfss	___aomod@divisor+7,7,c
  6147  002CBC  D7F2               	goto	l3298
  6148  002CBE                     u2970:
  6149  002CBE  FFFF               	dw	65535	; assembler added errata NOP
  6150  002CC0  5009               	movf	___aomod@divisor,w,c
  6151  002CC2  5C01               	subwf	___aomod@dividend,w,c
  6152  002CC4  500A               	movf	___aomod@divisor+1,w,c
  6153  002CC6  5802               	subwfb	___aomod@dividend+1,w,c
  6154  002CC8  500B               	movf	___aomod@divisor+2,w,c
  6155  002CCA  5803               	subwfb	___aomod@dividend+2,w,c
  6156  002CCC  500C               	movf	___aomod@divisor+3,w,c
  6157  002CCE  5804               	subwfb	___aomod@dividend+3,w,c
  6158  002CD0  500D               	movf	___aomod@divisor+4,w,c
  6159  002CD2  5805               	subwfb	___aomod@dividend+4,w,c
  6160  002CD4  500E               	movf	___aomod@divisor+5,w,c
  6161  002CD6  5806               	subwfb	___aomod@dividend+5,w,c
  6162  002CD8  500F               	movf	___aomod@divisor+6,w,c
  6163  002CDA  5807               	subwfb	___aomod@dividend+6,w,c
  6164  002CDC  5010               	movf	___aomod@divisor+7,w,c
  6165  002CDE  5808               	subwfb	___aomod@dividend+7,w,c
  6166  002CE0  A0D8               	btfss	status,0,c
  6167  002CE2  D010               	goto	l3306
  6168  002CE4  5009               	movf	___aomod@divisor,w,c
  6169  002CE6  5E01               	subwf	___aomod@dividend,f,c
  6170  002CE8  500A               	movf	___aomod@divisor+1,w,c
  6171  002CEA  5A02               	subwfb	___aomod@dividend+1,f,c
  6172  002CEC  500B               	movf	___aomod@divisor+2,w,c
  6173  002CEE  5A03               	subwfb	___aomod@dividend+2,f,c
  6174  002CF0  500C               	movf	___aomod@divisor+3,w,c
  6175  002CF2  5A04               	subwfb	___aomod@dividend+3,f,c
  6176  002CF4  500D               	movf	___aomod@divisor+4,w,c
  6177  002CF6  5A05               	subwfb	___aomod@dividend+4,f,c
  6178  002CF8  500E               	movf	___aomod@divisor+5,w,c
  6179  002CFA  5A06               	subwfb	___aomod@dividend+5,f,c
  6180  002CFC  500F               	movf	___aomod@divisor+6,w,c
  6181  002CFE  5A07               	subwfb	___aomod@dividend+6,f,c
  6182  002D00  5010               	movf	___aomod@divisor+7,w,c
  6183  002D02  5A08               	subwfb	___aomod@dividend+7,f,c
  6184  002D04                     l3306:
  6185  002D04  FFFF               	dw	65535	; assembler added errata NOP
  6186  002D06  90D8               	bcf	status,0,c
  6187  002D08  3210               	rrcf	___aomod@divisor+7,f,c
  6188  002D0A  320F               	rrcf	___aomod@divisor+6,f,c
  6189  002D0C  320E               	rrcf	___aomod@divisor+5,f,c
  6190  002D0E  320D               	rrcf	___aomod@divisor+4,f,c
  6191  002D10  320C               	rrcf	___aomod@divisor+3,f,c
  6192  002D12  320B               	rrcf	___aomod@divisor+2,f,c
  6193  002D14  320A               	rrcf	___aomod@divisor+1,f,c
  6194  002D16  3209               	rrcf	___aomod@divisor,f,c
  6195  002D18  2E11               	decfsz	___aomod@counter,f,c
  6196  002D1A  D7D1               	goto	u2970
  6197  002D1C                     l3310:
  6198  002D1C  FFFF               	dw	65535	; assembler added errata NOP
  6199  002D1E  5012               	movf	___aomod@sign,w,c
  6200  002D20  B4D8               	btfsc	status,2,c
  6201  002D22  D010               	goto	l3314
  6202  002D24  1E08               	comf	___aomod@dividend+7,f,c
  6203  002D26  1E07               	comf	___aomod@dividend+6,f,c
  6204  002D28  1E06               	comf	___aomod@dividend+5,f,c
  6205  002D2A  1E05               	comf	___aomod@dividend+4,f,c
  6206  002D2C  1E04               	comf	___aomod@dividend+3,f,c
  6207  002D2E  1E03               	comf	___aomod@dividend+2,f,c
  6208  002D30  1E02               	comf	___aomod@dividend+1,f,c
  6209  002D32  6C01               	negf	___aomod@dividend,c
  6210  002D34  0E00               	movlw	0
  6211  002D36  2202               	addwfc	___aomod@dividend+1,f,c
  6212  002D38  2203               	addwfc	___aomod@dividend+2,f,c
  6213  002D3A  2204               	addwfc	___aomod@dividend+3,f,c
  6214  002D3C  2205               	addwfc	___aomod@dividend+4,f,c
  6215  002D3E  2206               	addwfc	___aomod@dividend+5,f,c
  6216  002D40  2207               	addwfc	___aomod@dividend+6,f,c
  6217  002D42  2208               	addwfc	___aomod@dividend+7,f,c
  6218  002D44                     l3314:
  6219  002D44  FFFF               	dw	65535	; assembler added errata NOP
  6220  002D46  C001  F001         	movff	___aomod@dividend,?___aomod
  6221  002D4A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6222  002D4E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6223  002D52  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6224  002D56  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6225  002D5A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6226  002D5E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6227  002D62  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6228  002D66  0012               	return		;funcret
  6229  002D68  FFFF               	dw	65535	; errata NOP
  6230  002D6A                     __end_of___aomod:
  6231                           	opt callstack 0
  6232                           
  6233 ;; *************** function ___aodiv *****************
  6234 ;; Defined at:
  6235 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;  dividend        8    0[COMRAM] long long 
  6238 ;;  divisor         8    8[COMRAM] long long 
  6239 ;; Auto vars:     Size  Location     Type
  6240 ;;  quotient        8   18[COMRAM] long long 
  6241 ;;  sign            1   17[COMRAM] unsigned char 
  6242 ;;  counter         1   16[COMRAM] unsigned char 
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  8    0[COMRAM] long long 
  6245 ;; Registers used:
  6246 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6252 ;;      Params:        16       0       0       0       0       0       0
  6253 ;;      Locals:        10       0       0       0       0       0       0
  6254 ;;      Temps:          0       0       0       0       0       0       0
  6255 ;;      Totals:        26       0       0       0       0       0       0
  6256 ;;Total ram usage:       26 bytes
  6257 ;; Hardware stack levels used:    1
  6258 ;; Hardware stack levels required when called:    2
  6259 ;; This function calls:
  6260 ;;		Nothing
  6261 ;; This function is called by:
  6262 ;;		_dtoa
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           	psect	text20
  6267  002836                     __ptext20:
  6268                           	opt callstack 0
  6269  002836                     ___aodiv:
  6270                           	opt callstack 0
  6271  002836  FFFF               	dw	65535	; assembler added errata NOP
  6272                           
  6273                           ;incstack = 0
  6274  002838  0E00               	movlw	0
  6275  00283A  6E12               	movwf	___aodiv@sign,c
  6276  00283C  AE10               	btfss	___aodiv@divisor+7,7,c
  6277  00283E  D012               	goto	l3246
  6278  002840  1E10               	comf	___aodiv@divisor+7,f,c
  6279  002842  1E0F               	comf	___aodiv@divisor+6,f,c
  6280  002844  1E0E               	comf	___aodiv@divisor+5,f,c
  6281  002846  1E0D               	comf	___aodiv@divisor+4,f,c
  6282  002848  1E0C               	comf	___aodiv@divisor+3,f,c
  6283  00284A  1E0B               	comf	___aodiv@divisor+2,f,c
  6284  00284C  1E0A               	comf	___aodiv@divisor+1,f,c
  6285  00284E  6C09               	negf	___aodiv@divisor,c
  6286  002850  0E00               	movlw	0
  6287  002852  220A               	addwfc	___aodiv@divisor+1,f,c
  6288  002854  220B               	addwfc	___aodiv@divisor+2,f,c
  6289  002856  220C               	addwfc	___aodiv@divisor+3,f,c
  6290  002858  220D               	addwfc	___aodiv@divisor+4,f,c
  6291  00285A  220E               	addwfc	___aodiv@divisor+5,f,c
  6292  00285C  220F               	addwfc	___aodiv@divisor+6,f,c
  6293  00285E  2210               	addwfc	___aodiv@divisor+7,f,c
  6294  002860  0E01               	movlw	1
  6295  002862  6E12               	movwf	___aodiv@sign,c
  6296  002864                     l3246:
  6297  002864  FFFF               	dw	65535	; assembler added errata NOP
  6298  002866  AE08               	btfss	___aodiv@dividend+7,7,c
  6299  002868  D012               	goto	l3252
  6300  00286A  1E08               	comf	___aodiv@dividend+7,f,c
  6301  00286C  1E07               	comf	___aodiv@dividend+6,f,c
  6302  00286E  1E06               	comf	___aodiv@dividend+5,f,c
  6303  002870  1E05               	comf	___aodiv@dividend+4,f,c
  6304  002872  1E04               	comf	___aodiv@dividend+3,f,c
  6305  002874  1E03               	comf	___aodiv@dividend+2,f,c
  6306  002876  1E02               	comf	___aodiv@dividend+1,f,c
  6307  002878  6C01               	negf	___aodiv@dividend,c
  6308  00287A  0E00               	movlw	0
  6309  00287C  2202               	addwfc	___aodiv@dividend+1,f,c
  6310  00287E  2203               	addwfc	___aodiv@dividend+2,f,c
  6311  002880  2204               	addwfc	___aodiv@dividend+3,f,c
  6312  002882  2205               	addwfc	___aodiv@dividend+4,f,c
  6313  002884  2206               	addwfc	___aodiv@dividend+5,f,c
  6314  002886  2207               	addwfc	___aodiv@dividend+6,f,c
  6315  002888  2208               	addwfc	___aodiv@dividend+7,f,c
  6316  00288A  0E01               	movlw	1
  6317  00288C  1A12               	xorwf	___aodiv@sign,f,c
  6318  00288E                     l3252:
  6319  00288E  FFFF               	dw	65535	; assembler added errata NOP
  6320  002890  EE20  F013         	lfsr	2,___aodiv@quotient
  6321  002894  0E07               	movlw	7
  6322  002896                     u2891:
  6323  002896  6ADE               	clrf	postinc2,c
  6324  002898  06E8               	decf	wreg,f,c
  6325  00289A  E2FD               	bc	u2891
  6326  00289C  5009               	movf	___aodiv@divisor,w,c
  6327  00289E  100A               	iorwf	___aodiv@divisor+1,w,c
  6328  0028A0  100B               	iorwf	___aodiv@divisor+2,w,c
  6329  0028A2  100C               	iorwf	___aodiv@divisor+3,w,c
  6330  0028A4  100D               	iorwf	___aodiv@divisor+4,w,c
  6331  0028A6  100E               	iorwf	___aodiv@divisor+5,w,c
  6332  0028A8  100F               	iorwf	___aodiv@divisor+6,w,c
  6333  0028AA  1010               	iorwf	___aodiv@divisor+7,w,c
  6334  0028AC  B4D8               	btfsc	status,2,c
  6335  0028AE  D04A               	goto	l3274
  6336  0028B0  0E01               	movlw	1
  6337  0028B2  6E11               	movwf	___aodiv@counter,c
  6338  0028B4  D00B               	goto	l3260
  6339  0028B6                     l3258:
  6340  0028B6  FFFF               	dw	65535	; assembler added errata NOP
  6341  0028B8  90D8               	bcf	status,0,c
  6342  0028BA  3609               	rlcf	___aodiv@divisor,f,c
  6343  0028BC  360A               	rlcf	___aodiv@divisor+1,f,c
  6344  0028BE  360B               	rlcf	___aodiv@divisor+2,f,c
  6345  0028C0  360C               	rlcf	___aodiv@divisor+3,f,c
  6346  0028C2  360D               	rlcf	___aodiv@divisor+4,f,c
  6347  0028C4  360E               	rlcf	___aodiv@divisor+5,f,c
  6348  0028C6  360F               	rlcf	___aodiv@divisor+6,f,c
  6349  0028C8  3610               	rlcf	___aodiv@divisor+7,f,c
  6350  0028CA  2A11               	incf	___aodiv@counter,f,c
  6351  0028CC                     l3260:
  6352  0028CC  FFFF               	dw	65535	; assembler added errata NOP
  6353  0028CE  AE10               	btfss	___aodiv@divisor+7,7,c
  6354  0028D0  D7F2               	goto	l3258
  6355  0028D2                     u2910:
  6356  0028D2  FFFF               	dw	65535	; assembler added errata NOP
  6357  0028D4  90D8               	bcf	status,0,c
  6358  0028D6  3613               	rlcf	___aodiv@quotient,f,c
  6359  0028D8  3614               	rlcf	___aodiv@quotient+1,f,c
  6360  0028DA  3615               	rlcf	___aodiv@quotient+2,f,c
  6361  0028DC  3616               	rlcf	___aodiv@quotient+3,f,c
  6362  0028DE  3617               	rlcf	___aodiv@quotient+4,f,c
  6363  0028E0  3618               	rlcf	___aodiv@quotient+5,f,c
  6364  0028E2  3619               	rlcf	___aodiv@quotient+6,f,c
  6365  0028E4  361A               	rlcf	___aodiv@quotient+7,f,c
  6366  0028E6  5009               	movf	___aodiv@divisor,w,c
  6367  0028E8  5C01               	subwf	___aodiv@dividend,w,c
  6368  0028EA  500A               	movf	___aodiv@divisor+1,w,c
  6369  0028EC  5802               	subwfb	___aodiv@dividend+1,w,c
  6370  0028EE  500B               	movf	___aodiv@divisor+2,w,c
  6371  0028F0  5803               	subwfb	___aodiv@dividend+2,w,c
  6372  0028F2  500C               	movf	___aodiv@divisor+3,w,c
  6373  0028F4  5804               	subwfb	___aodiv@dividend+3,w,c
  6374  0028F6  500D               	movf	___aodiv@divisor+4,w,c
  6375  0028F8  5805               	subwfb	___aodiv@dividend+4,w,c
  6376  0028FA  500E               	movf	___aodiv@divisor+5,w,c
  6377  0028FC  5806               	subwfb	___aodiv@dividend+5,w,c
  6378  0028FE  500F               	movf	___aodiv@divisor+6,w,c
  6379  002900  5807               	subwfb	___aodiv@dividend+6,w,c
  6380  002902  5010               	movf	___aodiv@divisor+7,w,c
  6381  002904  5808               	subwfb	___aodiv@dividend+7,w,c
  6382  002906  A0D8               	btfss	status,0,c
  6383  002908  D011               	goto	l3270
  6384  00290A  5009               	movf	___aodiv@divisor,w,c
  6385  00290C  5E01               	subwf	___aodiv@dividend,f,c
  6386  00290E  500A               	movf	___aodiv@divisor+1,w,c
  6387  002910  5A02               	subwfb	___aodiv@dividend+1,f,c
  6388  002912  500B               	movf	___aodiv@divisor+2,w,c
  6389  002914  5A03               	subwfb	___aodiv@dividend+2,f,c
  6390  002916  500C               	movf	___aodiv@divisor+3,w,c
  6391  002918  5A04               	subwfb	___aodiv@dividend+3,f,c
  6392  00291A  500D               	movf	___aodiv@divisor+4,w,c
  6393  00291C  5A05               	subwfb	___aodiv@dividend+4,f,c
  6394  00291E  500E               	movf	___aodiv@divisor+5,w,c
  6395  002920  5A06               	subwfb	___aodiv@dividend+5,f,c
  6396  002922  500F               	movf	___aodiv@divisor+6,w,c
  6397  002924  5A07               	subwfb	___aodiv@dividend+6,f,c
  6398  002926  5010               	movf	___aodiv@divisor+7,w,c
  6399  002928  5A08               	subwfb	___aodiv@dividend+7,f,c
  6400  00292A  8013               	bsf	___aodiv@quotient,0,c
  6401  00292C                     l3270:
  6402  00292C  FFFF               	dw	65535	; assembler added errata NOP
  6403  00292E  90D8               	bcf	status,0,c
  6404  002930  3210               	rrcf	___aodiv@divisor+7,f,c
  6405  002932  320F               	rrcf	___aodiv@divisor+6,f,c
  6406  002934  320E               	rrcf	___aodiv@divisor+5,f,c
  6407  002936  320D               	rrcf	___aodiv@divisor+4,f,c
  6408  002938  320C               	rrcf	___aodiv@divisor+3,f,c
  6409  00293A  320B               	rrcf	___aodiv@divisor+2,f,c
  6410  00293C  320A               	rrcf	___aodiv@divisor+1,f,c
  6411  00293E  3209               	rrcf	___aodiv@divisor,f,c
  6412  002940  2E11               	decfsz	___aodiv@counter,f,c
  6413  002942  D7C7               	goto	u2910
  6414  002944                     l3274:
  6415  002944  FFFF               	dw	65535	; assembler added errata NOP
  6416  002946  5012               	movf	___aodiv@sign,w,c
  6417  002948  B4D8               	btfsc	status,2,c
  6418  00294A  D010               	goto	l3278
  6419  00294C  1E1A               	comf	___aodiv@quotient+7,f,c
  6420  00294E  1E19               	comf	___aodiv@quotient+6,f,c
  6421  002950  1E18               	comf	___aodiv@quotient+5,f,c
  6422  002952  1E17               	comf	___aodiv@quotient+4,f,c
  6423  002954  1E16               	comf	___aodiv@quotient+3,f,c
  6424  002956  1E15               	comf	___aodiv@quotient+2,f,c
  6425  002958  1E14               	comf	___aodiv@quotient+1,f,c
  6426  00295A  6C13               	negf	___aodiv@quotient,c
  6427  00295C  0E00               	movlw	0
  6428  00295E  2214               	addwfc	___aodiv@quotient+1,f,c
  6429  002960  2215               	addwfc	___aodiv@quotient+2,f,c
  6430  002962  2216               	addwfc	___aodiv@quotient+3,f,c
  6431  002964  2217               	addwfc	___aodiv@quotient+4,f,c
  6432  002966  2218               	addwfc	___aodiv@quotient+5,f,c
  6433  002968  2219               	addwfc	___aodiv@quotient+6,f,c
  6434  00296A  221A               	addwfc	___aodiv@quotient+7,f,c
  6435  00296C                     l3278:
  6436  00296C  FFFF               	dw	65535	; assembler added errata NOP
  6437  00296E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6438  002972  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6439  002976  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6440  00297A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6441  00297E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6442  002982  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6443  002986  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6444  00298A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6445  00298E  0012               	return		;funcret
  6446  002990  FFFF               	dw	65535	; errata NOP
  6447  002992                     __end_of___aodiv:
  6448                           	opt callstack 0
  6449                           
  6450 ;; *************** function _ctoa *****************
  6451 ;; Defined at:
  6452 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6455 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6456 ;;  c               1   29[COMRAM] unsigned char 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  w               2   30[COMRAM] int 
  6459 ;;  l               2    0        int 
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  2   27[COMRAM] int 
  6462 ;; Registers used:
  6463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6469 ;;      Params:         3       0       0       0       0       0       0
  6470 ;;      Locals:         2       0       0       0       0       0       0
  6471 ;;      Temps:          0       0       0       0       0       0       0
  6472 ;;      Totals:         5       0       0       0       0       0       0
  6473 ;;Total ram usage:        5 bytes
  6474 ;; Hardware stack levels used:    1
  6475 ;; Hardware stack levels required when called:    6
  6476 ;; This function calls:
  6477 ;;		_pad
  6478 ;; This function is called by:
  6479 ;;		_vfpfcnvrt
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	text21
  6484  0034E8                     __ptext21:
  6485                           	opt callstack 0
  6486  0034E8                     _ctoa:
  6487                           	opt callstack 0
  6488  0034E8  FFFF               	dw	65535	; assembler added errata NOP
  6489                           
  6490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  6491                           
  6492                           ;incstack = 0
  6493  0034EA  0100               	movlb	0	; () banked
  6494  0034EC  518D               	movf	_width& (0+255),w,b
  6495  0034EE  118E               	iorwf	(_width+1)& (0+255),w,b
  6496  0034F0  A4D8               	btfss	status,2,c
  6497  0034F2  D005               	goto	l3372
  6498                           
  6499                           ; BSR set to: 0
  6500  0034F4  C08D  F01F         	movff	_width,ctoa@w
  6501  0034F8  C08E  F020         	movff	_width+1,ctoa@w+1
  6502  0034FC  D007               	goto	l3374
  6503  0034FE                     l3372:
  6504  0034FE  FFFF               	dw	65535	; assembler added errata NOP
  6505                           
  6506                           ; BSR set to: 0
  6507  003500  0EFF               	movlw	255
  6508  003502  258D               	addwf	_width& (0+255),w,b
  6509  003504  6E1F               	movwf	ctoa@w,c
  6510  003506  0EFF               	movlw	255
  6511  003508  218E               	addwfc	(_width+1)& (0+255),w,b
  6512  00350A  6E20               	movwf	ctoa@w+1,c
  6513  00350C                     l3374:
  6514  00350C  FFFF               	dw	65535	; assembler added errata NOP
  6515                           
  6516                           ; BSR set to: 0
  6517                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  6518  00350E  C01E  F097         	movff	ctoa@c,_dbuf
  6519                           
  6520                           ; BSR set to: 0
  6521                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  6522  003512  0E00               	movlw	0
  6523  003514  6F98               	movwf	(_dbuf+1)& (0+255),b
  6524                           
  6525                           ; BSR set to: 0
  6526                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  6527  003516  C01C  F011         	movff	ctoa@fp,pad@fp
  6528  00351A  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  6529  00351E  0E97               	movlw	low _dbuf
  6530  003520  6E13               	movwf	pad@buf,c
  6531  003522  0E00               	movlw	high _dbuf
  6532  003524  6E14               	movwf	pad@buf+1,c
  6533  003526  C01F  F015         	movff	ctoa@w,pad@p
  6534  00352A  C020  F016         	movff	ctoa@w+1,pad@p+1
  6535  00352E  EC07  F019         	call	_pad	;wreg free
  6536  003532  C011  F01C         	movff	?_pad,?_ctoa
  6537  003536  C012  F01D         	movff	?_pad+1,?_ctoa+1
  6538  00353A  0012               	return		;funcret
  6539  00353C  FFFF               	dw	65535	; errata NOP
  6540  00353E                     __end_of_ctoa:
  6541                           	opt callstack 0
  6542                           
  6543 ;; *************** function _pad *****************
  6544 ;; Defined at:
  6545 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6548 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6549 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6550 ;;		 -> dbuf(32), 
  6551 ;;  p               2   20[COMRAM] int 
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;  w               2   25[COMRAM] int 
  6554 ;;  i               2   23[COMRAM] int 
  6555 ;; Return value:  Size  Location     Type
  6556 ;;                  2   16[COMRAM] int 
  6557 ;; Registers used:
  6558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6559 ;; Tracked objects:
  6560 ;;		On entry : 0/0
  6561 ;;		On exit  : 0/0
  6562 ;;		Unchanged: 0/0
  6563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6564 ;;      Params:         6       0       0       0       0       0       0
  6565 ;;      Locals:         4       0       0       0       0       0       0
  6566 ;;      Temps:          1       0       0       0       0       0       0
  6567 ;;      Totals:        11       0       0       0       0       0       0
  6568 ;;Total ram usage:       11 bytes
  6569 ;; Hardware stack levels used:    1
  6570 ;; Hardware stack levels required when called:    5
  6571 ;; This function calls:
  6572 ;;		_fputc
  6573 ;;		_fputs
  6574 ;;		_strlen
  6575 ;; This function is called by:
  6576 ;;		_ctoa
  6577 ;;		_dtoa
  6578 ;;		_otoa
  6579 ;;		_utoa
  6580 ;;		_xtoa
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583                           
  6584                           	psect	text22
  6585  00320E                     __ptext22:
  6586                           	opt callstack 0
  6587  00320E                     _pad:
  6588                           	opt callstack 0
  6589  00320E  FFFF               	dw	65535	; assembler added errata NOP
  6590                           
  6591                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  6592                           
  6593                           ;incstack = 0
  6594  003210  0100               	movlb	0	; () banked
  6595  003212  A191               	btfss	_flags& (0+255),0,b
  6596  003214  D00A               	goto	l3188
  6597                           
  6598                           ; BSR set to: 0
  6599                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  6600  003216  C013  F00A         	movff	pad@buf,fputs@s
  6601  00321A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6602  00321E  C011  F00C         	movff	pad@fp,fputs@fp
  6603  003222  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6604  003226  EC7D  F01B         	call	_fputs	;wreg free
  6605  00322A                     l3188:
  6606  00322A  FFFF               	dw	65535	; assembler added errata NOP
  6607                           
  6608                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  6609  00322C  BE16               	btfsc	pad@p+1,7,c
  6610  00322E  D005               	goto	l3192
  6611  003230  C015  F01A         	movff	pad@p,pad@w
  6612  003234  C016  F01B         	movff	pad@p+1,pad@w+1
  6613  003238  D005               	goto	l320
  6614  00323A                     l3192:
  6615  00323A  FFFF               	dw	65535	; assembler added errata NOP
  6616  00323C  0E00               	movlw	0
  6617  00323E  6E1B               	movwf	pad@w+1,c
  6618  003240  0E00               	movlw	0
  6619  003242  6E1A               	movwf	pad@w,c
  6620  003244                     l320:
  6621  003244  FFFF               	dw	65535	; assembler added errata NOP
  6622                           
  6623                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  6624  003246  0E00               	movlw	0
  6625  003248  6E19               	movwf	pad@i+1,c
  6626  00324A  0E00               	movlw	0
  6627  00324C  6E18               	movwf	pad@i,c
  6628                           
  6629                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6630  00324E  D00D               	goto	l3198
  6631  003250                     l3194:
  6632  003250  FFFF               	dw	65535	; assembler added errata NOP
  6633                           
  6634                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  6635  003252  0E00               	movlw	0
  6636  003254  6E02               	movwf	fputc@c+1,c
  6637  003256  0E20               	movlw	32
  6638  003258  6E01               	movwf	fputc@c,c
  6639  00325A  C011  F003         	movff	pad@fp,fputc@fp
  6640  00325E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6641  003262  ECB1  F018         	call	_fputc	;wreg free
  6642                           
  6643                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  6644  003266  4A18               	infsnz	pad@i,f,c
  6645  003268  2A19               	incf	pad@i+1,f,c
  6646  00326A                     l3198:
  6647  00326A  FFFF               	dw	65535	; assembler added errata NOP
  6648                           
  6649                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6650  00326C  501A               	movf	pad@w,w,c
  6651  00326E  5C18               	subwf	pad@i,w,c
  6652  003270  5019               	movf	pad@i+1,w,c
  6653  003272  0A80               	xorlw	128
  6654  003274  6E17               	movwf	??_pad& (0+255),c
  6655  003276  501B               	movf	pad@w+1,w,c
  6656  003278  0A80               	xorlw	128
  6657  00327A  5817               	subwfb	??_pad& (0+255),w,c
  6658  00327C  A0D8               	btfss	status,0,c
  6659  00327E  D7E8               	goto	l3194
  6660                           
  6661                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  6662  003280  0100               	movlb	0	; () banked
  6663  003282  B191               	btfsc	_flags& (0+255),0,b
  6664  003284  D00A               	goto	l3202
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  6668  003286  C013  F00A         	movff	pad@buf,fputs@s
  6669  00328A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6670  00328E  C011  F00C         	movff	pad@fp,fputs@fp
  6671  003292  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6672  003296  EC7D  F01B         	call	_fputs	;wreg free
  6673  00329A                     l3202:
  6674  00329A  FFFF               	dw	65535	; assembler added errata NOP
  6675                           
  6676                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  6677  00329C  C013  F001         	movff	pad@buf,strlen@s
  6678  0032A0  C014  F002         	movff	pad@buf+1,strlen@s+1
  6679  0032A4  EC4C  F01C         	call	_strlen	;wreg free
  6680  0032A8  501A               	movf	pad@w,w,c
  6681  0032AA  2401               	addwf	?_strlen,w,c
  6682  0032AC  6E11               	movwf	?_pad,c
  6683  0032AE  501B               	movf	pad@w+1,w,c
  6684  0032B0  2002               	addwfc	?_strlen+1,w,c
  6685  0032B2  6E12               	movwf	?_pad+1,c
  6686  0032B4  0012               	return		;funcret
  6687  0032B6  FFFF               	dw	65535	; errata NOP
  6688  0032B8                     __end_of_pad:
  6689                           	opt callstack 0
  6690                           
  6691 ;; *************** function _strlen *****************
  6692 ;; Defined at:
  6693 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6696 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6699 ;;		 -> ?_snprintf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  2    0[COMRAM] unsigned int 
  6702 ;; Registers used:
  6703 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6709 ;;      Params:         2       0       0       0       0       0       0
  6710 ;;      Locals:         2       0       0       0       0       0       0
  6711 ;;      Temps:          0       0       0       0       0       0       0
  6712 ;;      Totals:         4       0       0       0       0       0       0
  6713 ;;Total ram usage:        4 bytes
  6714 ;; Hardware stack levels used:    1
  6715 ;; Hardware stack levels required when called:    2
  6716 ;; This function calls:
  6717 ;;		Nothing
  6718 ;; This function is called by:
  6719 ;;		_pad
  6720 ;;		_stoa
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text23
  6725  003898                     __ptext23:
  6726                           	opt callstack 0
  6727  003898                     _strlen:
  6728                           	opt callstack 0
  6729  003898  FFFF               	dw	65535	; assembler added errata NOP
  6730                           
  6731                           ;incstack = 0
  6732  00389A  C001  F003         	movff	strlen@s,strlen@a
  6733  00389E  C002  F004         	movff	strlen@s+1,strlen@a+1
  6734  0038A2  D003               	goto	l3174
  6735  0038A4                     l3172:
  6736  0038A4  FFFF               	dw	65535	; assembler added errata NOP
  6737  0038A6  4A01               	infsnz	strlen@s,f,c
  6738  0038A8  2A02               	incf	strlen@s+1,f,c
  6739  0038AA                     l3174:
  6740  0038AA  FFFF               	dw	65535	; assembler added errata NOP
  6741  0038AC  C001  FFD9         	movff	strlen@s,fsr2l
  6742  0038B0  C002  FFDA         	movff	strlen@s+1,fsr2h
  6743  0038B4  50DF               	movf	indf2,w,c
  6744  0038B6  A4D8               	btfss	status,2,c
  6745  0038B8  D7F5               	goto	l3172
  6746  0038BA  5003               	movf	strlen@a,w,c
  6747  0038BC  5C01               	subwf	strlen@s,w,c
  6748  0038BE  6E01               	movwf	?_strlen,c
  6749  0038C0  5004               	movf	strlen@a+1,w,c
  6750  0038C2  5802               	subwfb	strlen@s+1,w,c
  6751  0038C4  6E02               	movwf	?_strlen+1,c
  6752  0038C6  0012               	return		;funcret
  6753  0038C8  FFFF               	dw	65535	; errata NOP
  6754  0038CA                     __end_of_strlen:
  6755                           	opt callstack 0
  6756                           
  6757 ;; *************** function _fputs *****************
  6758 ;; Defined at:
  6759 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6762 ;;		 -> dbuf(32), 
  6763 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6764 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;  i               2   14[COMRAM] int 
  6767 ;;  c               1   13[COMRAM] unsigned char 
  6768 ;; Return value:  Size  Location     Type
  6769 ;;                  2    9[COMRAM] int 
  6770 ;; Registers used:
  6771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6772 ;; Tracked objects:
  6773 ;;		On entry : 0/0
  6774 ;;		On exit  : 0/0
  6775 ;;		Unchanged: 0/0
  6776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6777 ;;      Params:         4       0       0       0       0       0       0
  6778 ;;      Locals:         3       0       0       0       0       0       0
  6779 ;;      Temps:          0       0       0       0       0       0       0
  6780 ;;      Totals:         7       0       0       0       0       0       0
  6781 ;;Total ram usage:        7 bytes
  6782 ;; Hardware stack levels used:    1
  6783 ;; Hardware stack levels required when called:    4
  6784 ;; This function calls:
  6785 ;;		_fputc
  6786 ;; This function is called by:
  6787 ;;		_pad
  6788 ;; This function uses a non-reentrant model
  6789 ;;
  6790                           
  6791                           	psect	text24
  6792  0036FA                     __ptext24:
  6793                           	opt callstack 0
  6794  0036FA                     _fputs:
  6795                           	opt callstack 0
  6796  0036FA  FFFF               	dw	65535	; assembler added errata NOP
  6797                           
  6798                           ;incstack = 0
  6799  0036FC  0E00               	movlw	0
  6800  0036FE  6E10               	movwf	fputs@i+1,c
  6801  003700  0E00               	movlw	0
  6802  003702  6E0F               	movwf	fputs@i,c
  6803  003704  D00C               	goto	l3168
  6804  003706                     l3164:
  6805  003706  FFFF               	dw	65535	; assembler added errata NOP
  6806  003708  C00E  F001         	movff	fputs@c,fputc@c
  6807  00370C  6A02               	clrf	fputc@c+1,c
  6808  00370E  C00C  F003         	movff	fputs@fp,fputc@fp
  6809  003712  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6810  003716  ECB1  F018         	call	_fputc	;wreg free
  6811  00371A  4A0F               	infsnz	fputs@i,f,c
  6812  00371C  2A10               	incf	fputs@i+1,f,c
  6813  00371E                     l3168:
  6814  00371E  FFFF               	dw	65535	; assembler added errata NOP
  6815  003720  500F               	movf	fputs@i,w,c
  6816  003722  240A               	addwf	fputs@s,w,c
  6817  003724  6ED9               	movwf	fsr2l,c
  6818  003726  5010               	movf	fputs@i+1,w,c
  6819  003728  200B               	addwfc	fputs@s+1,w,c
  6820  00372A  6EDA               	movwf	fsr2h,c
  6821  00372C  50DF               	movf	indf2,w,c
  6822  00372E  6E0E               	movwf	fputs@c,c
  6823  003730  500E               	movf	fputs@c,w,c
  6824  003732  B4D8               	btfsc	status,2,c
  6825  003734  0012               	return		;funcret
  6826  003736  FFFF               	dw	65535	; assembler added errata NOP
  6827  003738  D7E6               	goto	l3164
  6828  00373A  FFFF               	dw	65535	; errata NOP
  6829  00373C                     __end_of_fputs:
  6830                           	opt callstack 0
  6831                           
  6832 ;; *************** function _fputc *****************
  6833 ;; Defined at:
  6834 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;  c               2    0[COMRAM] int 
  6837 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6838 ;;		 -> vsnprintf@f(6), sprintf@f(6), 
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;		None
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  2    0[COMRAM] int 
  6843 ;; Registers used:
  6844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6850 ;;      Params:         4       0       0       0       0       0       0
  6851 ;;      Locals:         0       0       0       0       0       0       0
  6852 ;;      Temps:          5       0       0       0       0       0       0
  6853 ;;      Totals:         9       0       0       0       0       0       0
  6854 ;;Total ram usage:        9 bytes
  6855 ;; Hardware stack levels used:    1
  6856 ;; Hardware stack levels required when called:    3
  6857 ;; This function calls:
  6858 ;;		_putch
  6859 ;; This function is called by:
  6860 ;;		_pad
  6861 ;;		_stoa
  6862 ;;		_vfpfcnvrt
  6863 ;;		_fputs
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           	psect	text25
  6868  003162                     __ptext25:
  6869                           	opt callstack 0
  6870  003162                     _fputc:
  6871                           	opt callstack 0
  6872  003162  FFFF               	dw	65535	; assembler added errata NOP
  6873                           
  6874                           ;incstack = 0
  6875  003164  5003               	movf	fputc@fp,w,c
  6876  003166  1004               	iorwf	fputc@fp+1,w,c
  6877  003168  B4D8               	btfsc	status,2,c
  6878  00316A  D004               	goto	u2660
  6879  00316C  5003               	movf	fputc@fp,w,c
  6880  00316E  1004               	iorwf	fputc@fp+1,w,c
  6881  003170  A4D8               	btfss	status,2,c
  6882  003172  D005               	goto	l3154
  6883  003174                     u2660:
  6884  003174  FFFF               	dw	65535	; assembler added errata NOP
  6885  003176  5001               	movf	fputc@c,w,c
  6886  003178  ECD6  F01C         	call	_putch
  6887  00317C  D045               	goto	l1288
  6888  00317E                     l3154:
  6889  00317E  FFFF               	dw	65535	; assembler added errata NOP
  6890  003180  EE20 F004          	lfsr	2,4
  6891  003184  5003               	movf	fputc@fp,w,c
  6892  003186  26D9               	addwf	fsr2l,f,c
  6893  003188  5004               	movf	fputc@fp+1,w,c
  6894  00318A  22DA               	addwfc	fsr2h,f,c
  6895  00318C  50DE               	movf	postinc2,w,c
  6896  00318E  10DE               	iorwf	postinc2,w,c
  6897  003190  B4D8               	btfsc	status,2,c
  6898  003192  D016               	goto	u2680
  6899  003194  EE20 F004          	lfsr	2,4
  6900  003198  5003               	movf	fputc@fp,w,c
  6901  00319A  26D9               	addwf	fsr2l,f,c
  6902  00319C  5004               	movf	fputc@fp+1,w,c
  6903  00319E  22DA               	addwfc	fsr2h,f,c
  6904  0031A0  EE10 F002          	lfsr	1,2
  6905  0031A4  5003               	movf	fputc@fp,w,c
  6906  0031A6  26E1               	addwf	fsr1l,f,c
  6907  0031A8  5004               	movf	fputc@fp+1,w,c
  6908  0031AA  22E2               	addwfc	fsr1h,f,c
  6909  0031AC  50DE               	movf	postinc2,w,c
  6910  0031AE  5CE6               	subwf	postinc1,w,c
  6911  0031B0  50E6               	movf	postinc1,w,c
  6912  0031B2  0A80               	xorlw	128
  6913  0031B4  6E09               	movwf	(??_fputc+4)& (0+255),c
  6914  0031B6  50DE               	movf	postinc2,w,c
  6915  0031B8  0A80               	xorlw	128
  6916  0031BA  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  6917  0031BC  B0D8               	btfsc	status,0,c
  6918  0031BE  D024               	goto	l1288
  6919  0031C0                     u2680:
  6920  0031C0  FFFF               	dw	65535	; assembler added errata NOP
  6921  0031C2  EE20 F002          	lfsr	2,2
  6922  0031C6  5003               	movf	fputc@fp,w,c
  6923  0031C8  26D9               	addwf	fsr2l,f,c
  6924  0031CA  5004               	movf	fputc@fp+1,w,c
  6925  0031CC  22DA               	addwfc	fsr2h,f,c
  6926  0031CE  CFDE F005          	movff	postinc2,??_fputc
  6927  0031D2  CFDD F006          	movff	postdec2,??_fputc+1
  6928  0031D6  C003  FFD9         	movff	fputc@fp,fsr2l
  6929  0031DA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6930  0031DE  CFDE F007          	movff	postinc2,??_fputc+2
  6931  0031E2  CFDD F008          	movff	postdec2,??_fputc+3
  6932  0031E6  5005               	movf	??_fputc,w,c
  6933  0031E8  2407               	addwf	??_fputc+2,w,c
  6934  0031EA  6ED9               	movwf	fsr2l,c
  6935  0031EC  5006               	movf	??_fputc+1,w,c
  6936  0031EE  2008               	addwfc	??_fputc+3,w,c
  6937  0031F0  6EDA               	movwf	fsr2h,c
  6938  0031F2  C001  FFDF         	movff	fputc@c,indf2
  6939  0031F6  EE20 F002          	lfsr	2,2
  6940  0031FA  5003               	movf	fputc@fp,w,c
  6941  0031FC  26D9               	addwf	fsr2l,f,c
  6942  0031FE  5004               	movf	fputc@fp+1,w,c
  6943  003200  22DA               	addwfc	fsr2h,f,c
  6944  003202  2ADE               	incf	postinc2,f,c
  6945  003204  0E00               	movlw	0
  6946  003206  22DD               	addwfc	postdec2,f,c
  6947  003208                     l1288:
  6948  003208  FFFF               	dw	65535	; assembler added errata NOP
  6949  00320A  0012               	return		;funcret
  6950  00320C  FFFF               	dw	65535	; errata NOP
  6951  00320E                     __end_of_fputc:
  6952                           	opt callstack 0
  6953                           
  6954 ;; *************** function _putch *****************
  6955 ;; Defined at:
  6956 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;  c               1    wreg     unsigned char 
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;  c               1    0[COMRAM] unsigned char 
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  1    wreg      void 
  6963 ;; Registers used:
  6964 ;;		wreg
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6970 ;;      Params:         0       0       0       0       0       0       0
  6971 ;;      Locals:         0       0       0       0       0       0       0
  6972 ;;      Temps:          0       0       0       0       0       0       0
  6973 ;;      Totals:         0       0       0       0       0       0       0
  6974 ;;Total ram usage:        0 bytes
  6975 ;; Hardware stack levels used:    1
  6976 ;; Hardware stack levels required when called:    2
  6977 ;; This function calls:
  6978 ;;		Nothing
  6979 ;; This function is called by:
  6980 ;;		_fputc
  6981 ;; This function uses a non-reentrant model
  6982 ;;
  6983                           
  6984                           	psect	text26
  6985  0039AC                     __ptext26:
  6986                           	opt callstack 0
  6987  0039AC                     _putch:
  6988                           	opt callstack 0
  6989  0039AC  FFFF               	dw	65535	; assembler added errata NOP
  6990                           
  6991                           ;incstack = 0
  6992  0039AE  0012               	return		;funcret
  6993  0039B0  FFFF               	dw	65535	; errata NOP
  6994  0039B2                     __end_of_putch:
  6995                           	opt callstack 0
  6996                           
  6997 ;; *************** function _atoi *****************
  6998 ;; Defined at:
  6999 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7002 ;;		 -> STR_2(3), STR_1(4), 
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;  n               2   20[COMRAM] int 
  7005 ;;  neg             2   13[COMRAM] int 
  7006 ;; Return value:  Size  Location     Type
  7007 ;;                  2    7[COMRAM] int 
  7008 ;; Registers used:
  7009 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7015 ;;      Params:         2       0       0       0       0       0       0
  7016 ;;      Locals:         9       0       0       0       0       0       0
  7017 ;;      Temps:          4       0       0       0       0       0       0
  7018 ;;      Totals:        15       0       0       0       0       0       0
  7019 ;;Total ram usage:       15 bytes
  7020 ;; Hardware stack levels used:    1
  7021 ;; Hardware stack levels required when called:    3
  7022 ;; This function calls:
  7023 ;;		___wmul
  7024 ;;		_isdigit
  7025 ;;		_isspace
  7026 ;; This function is called by:
  7027 ;;		_vfpfcnvrt
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           
  7031                           	psect	text27
  7032  0026D0                     __ptext27:
  7033                           	opt callstack 0
  7034  0026D0                     _atoi:
  7035                           	opt callstack 0
  7036  0026D0  FFFF               	dw	65535	; assembler added errata NOP
  7037                           
  7038                           ;incstack = 0
  7039  0026D2  0E00               	movlw	0
  7040  0026D4  6E16               	movwf	atoi@n+1,c
  7041  0026D6  0E00               	movlw	0
  7042  0026D8  6E15               	movwf	atoi@n,c
  7043  0026DA  0E00               	movlw	0
  7044  0026DC  6E0F               	movwf	atoi@neg+1,c
  7045  0026DE  0E00               	movlw	0
  7046  0026E0  6E0E               	movwf	atoi@neg,c
  7047  0026E2  D003               	goto	l3640
  7048  0026E4                     l3638:
  7049  0026E4  FFFF               	dw	65535	; assembler added errata NOP
  7050  0026E6  4A08               	infsnz	atoi@s,f,c
  7051  0026E8  2A09               	incf	atoi@s+1,f,c
  7052  0026EA                     l3640:
  7053  0026EA  FFFF               	dw	65535	; assembler added errata NOP
  7054  0026EC  0E01               	movlw	1
  7055  0026EE  6E14               	movwf	_atoi$1746,c
  7056  0026F0  C008  FFF6         	movff	atoi@s,tblptrl
  7057  0026F4  C009  FFF7         	movff	atoi@s+1,tblptrh
  7058  0026F8                     	if	0	;tblptru may be non-zero
  7059  0026F8                     	endif
  7060  0026F8                     	if	0	;tblptru may be non-zero
  7061  0026F8                     	endif
  7062  0026F8  0008               	tblrd		*
  7063  0026FA  FFFF               	dw	65535	; errata NOP
  7064  0026FC  50F5               	movf	tablat,w,c
  7065  0026FE  0A20               	xorlw	32
  7066  002700  B4D8               	btfsc	status,2,c
  7067  002702  D019               	goto	l3648
  7068  002704  0EF7               	movlw	247
  7069  002706  6E0A               	movwf	??_atoi& (0+255),c
  7070  002708  0EFF               	movlw	255
  7071  00270A  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7072  00270C  C008  FFF6         	movff	atoi@s,tblptrl
  7073  002710  C009  FFF7         	movff	atoi@s+1,tblptrh
  7074  002714                     	if	0	;tblptru may be non-zero
  7075  002714                     	endif
  7076  002714                     	if	0	;tblptru may be non-zero
  7077  002714                     	endif
  7078  002714  0008               	tblrd		*
  7079  002716  FFFF               	dw	65535	; errata NOP
  7080  002718  50F5               	movf	tablat,w,c
  7081  00271A  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7082  00271C  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7083  00271E  500A               	movf	??_atoi,w,c
  7084  002720  260C               	addwf	??_atoi+2,f,c
  7085  002722  500B               	movf	??_atoi+1,w,c
  7086  002724  220D               	addwfc	??_atoi+3,f,c
  7087  002726  500D               	movf	??_atoi+3,w,c
  7088  002728  E104               	bnz	u3690
  7089  00272A  0E05               	movlw	5
  7090  00272C  5C0C               	subwf	??_atoi+2,w,c
  7091  00272E  A0D8               	btfss	status,0,c
  7092  002730  D002               	goto	l3648
  7093  002732                     u3690:
  7094  002732  0E00               	movlw	0
  7095  002734  6E14               	movwf	_atoi$1746,c
  7096  002736                     l3648:
  7097  002736  FFFF               	dw	65535	; assembler added errata NOP
  7098  002738  C014  F010         	movff	_atoi$1746,_atoi$1745
  7099  00273C  6A11               	clrf	_atoi$1745+1,c
  7100  00273E  5010               	movf	_atoi$1745,w,c
  7101  002740  1011               	iorwf	_atoi$1745+1,w,c
  7102  002742  B4D8               	btfsc	status,2,c
  7103  002744  D00A               	goto	l3658
  7104  002746  D7CE               	goto	l3638
  7105  002748                     l3654:
  7106  002748  FFFF               	dw	65535	; assembler added errata NOP
  7107  00274A  0E00               	movlw	0
  7108  00274C  6E0F               	movwf	atoi@neg+1,c
  7109  00274E  0E01               	movlw	1
  7110  002750  6E0E               	movwf	atoi@neg,c
  7111  002752                     l3656:
  7112  002752  FFFF               	dw	65535	; assembler added errata NOP
  7113  002754  4A08               	infsnz	atoi@s,f,c
  7114  002756  2A09               	incf	atoi@s+1,f,c
  7115  002758  D032               	goto	l3664
  7116  00275A                     l3658:
  7117  00275A  FFFF               	dw	65535	; assembler added errata NOP
  7118  00275C  C008  FFF6         	movff	atoi@s,tblptrl
  7119  002760  C009  FFF7         	movff	atoi@s+1,tblptrh
  7120  002764                     	if	0	;tblptru may be non-zero
  7121  002764                     	endif
  7122  002764                     	if	0	;tblptru may be non-zero
  7123  002764                     	endif
  7124  002764  0008               	tblrd		*
  7125  002766  FFFF               	dw	65535	; errata NOP
  7126  002768  50F5               	movf	tablat,w,c
  7127  00276A  6E0A               	movwf	??_atoi& (0+255),c
  7128  00276C  6A0B               	clrf	(??_atoi+1)& (0+255),c
  7129                           
  7130                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7131                           ; Switch size 1, requested type "simple"
  7132                           ; Number of cases is 1, Range of values is 0 to 0
  7133                           ; switch strategies available:
  7134                           ; Name         Instructions Cycles
  7135                           ; simple_byte            4     3 (average)
  7136                           ;	Chosen strategy is simple_byte
  7137  00276E  500B               	movf	??_atoi+1,w,c
  7138  002770  0A00               	xorlw	0	; case 0
  7139  002772  A4D8               	btfss	status,2,c
  7140  002774  D024               	goto	l3664
  7141                           
  7142                           ; Switch size 1, requested type "simple"
  7143                           ; Number of cases is 2, Range of values is 43 to 45
  7144                           ; switch strategies available:
  7145                           ; Name         Instructions Cycles
  7146                           ; simple_byte            7     4 (average)
  7147                           ;	Chosen strategy is simple_byte
  7148  002776  500A               	movf	??_atoi,w,c
  7149  002778  0A2B               	xorlw	43	; case 43
  7150  00277A  B4D8               	btfsc	status,2,c
  7151  00277C  D7EA               	goto	l3656
  7152  00277E  0A06               	xorlw	6	; case 45
  7153  002780  B4D8               	btfsc	status,2,c
  7154  002782  D7E2               	goto	l3654
  7155  002784  D01C               	goto	l3664
  7156  002786                     l3660:
  7157  002786  FFFF               	dw	65535	; assembler added errata NOP
  7158  002788  C015  F001         	movff	atoi@n,___wmul@multiplier
  7159  00278C  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7160  002790  0E00               	movlw	0
  7161  002792  6E04               	movwf	___wmul@multiplicand+1,c
  7162  002794  0E0A               	movlw	10
  7163  002796  6E03               	movwf	___wmul@multiplicand,c
  7164  002798  EC65  F01C         	call	___wmul	;wreg free
  7165  00279C  C008  FFF6         	movff	atoi@s,tblptrl
  7166  0027A0  C009  FFF7         	movff	atoi@s+1,tblptrh
  7167  0027A4                     	if	0	;tblptru may be non-zero
  7168  0027A4                     	endif
  7169  0027A4                     	if	0	;tblptru may be non-zero
  7170  0027A4                     	endif
  7171  0027A4  0008               	tblrd		*
  7172  0027A6  FFFF               	dw	65535	; errata NOP
  7173  0027A8  50F5               	movf	tablat,w,c
  7174  0027AA  5E01               	subwf	?___wmul,f,c
  7175  0027AC  0E00               	movlw	0
  7176  0027AE  5A02               	subwfb	?___wmul+1,f,c
  7177  0027B0  0E30               	movlw	48
  7178  0027B2  2401               	addwf	?___wmul,w,c
  7179  0027B4  6E15               	movwf	atoi@n,c
  7180  0027B6  0E00               	movlw	0
  7181  0027B8  2002               	addwfc	?___wmul+1,w,c
  7182  0027BA  6E16               	movwf	atoi@n+1,c
  7183  0027BC  D7CA               	goto	l3656
  7184  0027BE                     l3664:
  7185  0027BE  FFFF               	dw	65535	; assembler added errata NOP
  7186  0027C0  0ED0               	movlw	208
  7187  0027C2  6E0A               	movwf	??_atoi& (0+255),c
  7188  0027C4  0EFF               	movlw	255
  7189  0027C6  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7190  0027C8  C008  FFF6         	movff	atoi@s,tblptrl
  7191  0027CC  C009  FFF7         	movff	atoi@s+1,tblptrh
  7192  0027D0                     	if	0	;tblptru may be non-zero
  7193  0027D0                     	endif
  7194  0027D0                     	if	0	;tblptru may be non-zero
  7195  0027D0                     	endif
  7196  0027D0  0008               	tblrd		*
  7197  0027D2  FFFF               	dw	65535	; errata NOP
  7198  0027D4  50F5               	movf	tablat,w,c
  7199  0027D6  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7200  0027D8  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7201  0027DA  500A               	movf	??_atoi,w,c
  7202  0027DC  260C               	addwf	??_atoi+2,f,c
  7203  0027DE  500B               	movf	??_atoi+1,w,c
  7204  0027E0  220D               	addwfc	??_atoi+3,f,c
  7205  0027E2  500D               	movf	??_atoi+3,w,c
  7206  0027E4  E106               	bnz	u3710
  7207  0027E6  0E0A               	movlw	10
  7208  0027E8  5C0C               	subwf	??_atoi+2,w,c
  7209  0027EA  B0D8               	btfsc	status,0,c
  7210  0027EC  D002               	goto	u3710
  7211  0027EE  0E01               	movlw	1
  7212  0027F0  D002               	goto	u3720
  7213  0027F2                     u3710:
  7214  0027F2  FFFF               	dw	65535	; assembler added errata NOP
  7215  0027F4  0E00               	movlw	0
  7216  0027F6                     u3720:
  7217  0027F6  FFFF               	dw	65535	; assembler added errata NOP
  7218  0027F8  6E12               	movwf	_atoi$1747,c
  7219  0027FA  6A13               	clrf	_atoi$1747+1,c
  7220  0027FC  5012               	movf	_atoi$1747,w,c
  7221  0027FE  1013               	iorwf	_atoi$1747+1,w,c
  7222  002800  A4D8               	btfss	status,2,c
  7223  002802  D7C1               	goto	l3660
  7224  002804  500E               	movf	atoi@neg,w,c
  7225  002806  100F               	iorwf	atoi@neg+1,w,c
  7226  002808  A4D8               	btfss	status,2,c
  7227  00280A  D00D               	goto	l1242
  7228  00280C  C015  F00A         	movff	atoi@n,??_atoi
  7229  002810  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7230  002814  1E0A               	comf	??_atoi,f,c
  7231  002816  1E0B               	comf	??_atoi+1,f,c
  7232  002818  4A0A               	infsnz	??_atoi,f,c
  7233  00281A  2A0B               	incf	??_atoi+1,f,c
  7234  00281C  C00A  F008         	movff	??_atoi,?_atoi
  7235  002820  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7236  002824  D005               	goto	l1245
  7237  002826                     l1242:
  7238  002826  FFFF               	dw	65535	; assembler added errata NOP
  7239  002828  C015  F008         	movff	atoi@n,?_atoi
  7240  00282C  C016  F009         	movff	atoi@n+1,?_atoi+1
  7241  002830                     l1245:
  7242  002830  FFFF               	dw	65535	; assembler added errata NOP
  7243  002832  0012               	return		;funcret
  7244  002834  FFFF               	dw	65535	; errata NOP
  7245  002836                     __end_of_atoi:
  7246                           	opt callstack 0
  7247                           
  7248 ;; *************** function _isspace *****************
  7249 ;; Defined at:
  7250 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;  c               2    0[COMRAM] int 
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;		None
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  2    0[COMRAM] int 
  7257 ;; Registers used:
  7258 ;;		wreg, status,2, status,0
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7264 ;;      Params:         2       0       0       0       0       0       0
  7265 ;;      Locals:         1       0       0       0       0       0       0
  7266 ;;      Temps:          4       0       0       0       0       0       0
  7267 ;;      Totals:         7       0       0       0       0       0       0
  7268 ;;Total ram usage:        7 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; Hardware stack levels required when called:    2
  7271 ;; This function calls:
  7272 ;;		Nothing
  7273 ;; This function is called by:
  7274 ;;		_atoi
  7275 ;; This function uses a non-reentrant model
  7276 ;;
  7277                           
  7278                           	psect	text28
  7279  003672                     __ptext28:
  7280                           	opt callstack 0
  7281  003672                     _isspace:
  7282                           	opt callstack 0
  7283  003672  FFFF               	dw	65535	; assembler added errata NOP
  7284                           
  7285                           ;incstack = 0
  7286  003674  0E01               	movlw	1
  7287  003676  6E07               	movwf	_isspace$1782,c
  7288  003678  0E20               	movlw	32
  7289  00367A  1801               	xorwf	isspace@c,w,c
  7290  00367C  1002               	iorwf	isspace@c+1,w,c
  7291  00367E  B4D8               	btfsc	status,2,c
  7292  003680  D014               	goto	l3364
  7293  003682  0EF7               	movlw	247
  7294  003684  6E03               	movwf	??_isspace& (0+255),c
  7295  003686  0EFF               	movlw	255
  7296  003688  6E04               	movwf	(??_isspace+1)& (0+255),c
  7297  00368A  C001  F005         	movff	isspace@c,??_isspace+2
  7298  00368E  C002  F006         	movff	isspace@c+1,??_isspace+3
  7299  003692  5003               	movf	??_isspace,w,c
  7300  003694  2605               	addwf	??_isspace+2,f,c
  7301  003696  5004               	movf	??_isspace+1,w,c
  7302  003698  2206               	addwfc	??_isspace+3,f,c
  7303  00369A  5006               	movf	??_isspace+3,w,c
  7304  00369C  E104               	bnz	u3080
  7305  00369E  0E05               	movlw	5
  7306  0036A0  5C05               	subwf	??_isspace+2,w,c
  7307  0036A2  A0D8               	btfss	status,0,c
  7308  0036A4  D002               	goto	l3364
  7309  0036A6                     u3080:
  7310  0036A6  0E00               	movlw	0
  7311  0036A8  6E07               	movwf	_isspace$1782,c
  7312  0036AA                     l3364:
  7313  0036AA  FFFF               	dw	65535	; assembler added errata NOP
  7314  0036AC  C007  F001         	movff	_isspace$1782,?_isspace
  7315  0036B0  6A02               	clrf	?_isspace+1,c
  7316  0036B2  0012               	return		;funcret
  7317  0036B4  FFFF               	dw	65535	; errata NOP
  7318  0036B6                     __end_of_isspace:
  7319                           	opt callstack 0
  7320                           
  7321 ;; *************** function _isdigit *****************
  7322 ;; Defined at:
  7323 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  c               2    0[COMRAM] int 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;		None
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  2    0[COMRAM] int 
  7330 ;; Registers used:
  7331 ;;		wreg, status,2, status,0
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7337 ;;      Params:         2       0       0       0       0       0       0
  7338 ;;      Locals:         0       0       0       0       0       0       0
  7339 ;;      Temps:          4       0       0       0       0       0       0
  7340 ;;      Totals:         6       0       0       0       0       0       0
  7341 ;;Total ram usage:        6 bytes
  7342 ;; Hardware stack levels used:    1
  7343 ;; Hardware stack levels required when called:    2
  7344 ;; This function calls:
  7345 ;;		Nothing
  7346 ;; This function is called by:
  7347 ;;		_vfpfcnvrt
  7348 ;;		_atoi
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           	psect	text29
  7353  003860                     __ptext29:
  7354                           	opt callstack 0
  7355  003860                     _isdigit:
  7356                           	opt callstack 0
  7357  003860  FFFF               	dw	65535	; assembler added errata NOP
  7358                           
  7359                           ;incstack = 0
  7360  003862  0ED0               	movlw	208
  7361  003864  6E03               	movwf	??_isdigit& (0+255),c
  7362  003866  0EFF               	movlw	255
  7363  003868  6E04               	movwf	(??_isdigit+1)& (0+255),c
  7364  00386A  C001  F005         	movff	isdigit@c,??_isdigit+2
  7365  00386E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7366  003872  5003               	movf	??_isdigit,w,c
  7367  003874  2605               	addwf	??_isdigit+2,f,c
  7368  003876  5004               	movf	??_isdigit+1,w,c
  7369  003878  2206               	addwfc	??_isdigit+3,f,c
  7370  00387A  5006               	movf	??_isdigit+3,w,c
  7371  00387C  E106               	bnz	u2850
  7372  00387E  0E0A               	movlw	10
  7373  003880  5C05               	subwf	??_isdigit+2,w,c
  7374  003882  B0D8               	btfsc	status,0,c
  7375  003884  D002               	goto	u2850
  7376  003886  0E01               	movlw	1
  7377  003888  D002               	goto	u2860
  7378  00388A                     u2850:
  7379  00388A  FFFF               	dw	65535	; assembler added errata NOP
  7380  00388C  0E00               	movlw	0
  7381  00388E                     u2860:
  7382  00388E  FFFF               	dw	65535	; assembler added errata NOP
  7383  003890  6E01               	movwf	?_isdigit,c
  7384  003892  6A02               	clrf	?_isdigit+1,c
  7385  003894  0012               	return		;funcret
  7386  003896  FFFF               	dw	65535	; errata NOP
  7387  003898                     __end_of_isdigit:
  7388                           	opt callstack 0
  7389                           
  7390 ;; *************** function ___wmul *****************
  7391 ;; Defined at:
  7392 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;  multiplier      2    0[COMRAM] unsigned int 
  7395 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7396 ;; Auto vars:     Size  Location     Type
  7397 ;;  product         2    4[COMRAM] unsigned int 
  7398 ;; Return value:  Size  Location     Type
  7399 ;;                  2    0[COMRAM] unsigned int 
  7400 ;; Registers used:
  7401 ;;		wreg, status,2, status,0, prodl, prodh
  7402 ;; Tracked objects:
  7403 ;;		On entry : 0/0
  7404 ;;		On exit  : 0/0
  7405 ;;		Unchanged: 0/0
  7406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7407 ;;      Params:         4       0       0       0       0       0       0
  7408 ;;      Locals:         2       0       0       0       0       0       0
  7409 ;;      Temps:          0       0       0       0       0       0       0
  7410 ;;      Totals:         6       0       0       0       0       0       0
  7411 ;;Total ram usage:        6 bytes
  7412 ;; Hardware stack levels used:    1
  7413 ;; Hardware stack levels required when called:    2
  7414 ;; This function calls:
  7415 ;;		Nothing
  7416 ;; This function is called by:
  7417 ;;		_atoi
  7418 ;; This function uses a non-reentrant model
  7419 ;;
  7420                           
  7421                           	psect	text30
  7422  0038CA                     __ptext30:
  7423                           	opt callstack 0
  7424  0038CA                     ___wmul:
  7425                           	opt callstack 0
  7426  0038CA  FFFF               	dw	65535	; assembler added errata NOP
  7427                           
  7428                           ;incstack = 0
  7429  0038CC  5001               	movf	___wmul@multiplier,w,c
  7430  0038CE  0203               	mulwf	___wmul@multiplicand,c
  7431  0038D0  CFF3 F005          	movff	prodl,___wmul@product
  7432  0038D4  CFF4 F006          	movff	prodh,___wmul@product+1
  7433  0038D8  5001               	movf	___wmul@multiplier,w,c
  7434  0038DA  0204               	mulwf	___wmul@multiplicand+1,c
  7435  0038DC  50F3               	movf	prodl,w,c
  7436  0038DE  2606               	addwf	___wmul@product+1,f,c
  7437  0038E0  5002               	movf	___wmul@multiplier+1,w,c
  7438  0038E2  0203               	mulwf	___wmul@multiplicand,c
  7439  0038E4  50F3               	movf	prodl,w,c
  7440  0038E6  2606               	addwf	___wmul@product+1,f,c
  7441  0038E8  C005  F001         	movff	___wmul@product,?___wmul
  7442  0038EC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7443  0038F0  0012               	return		;funcret
  7444  0038F2  FFFF               	dw	65535	; errata NOP
  7445  0038F4                     __end_of___wmul:
  7446                           	opt callstack 0
  7447                           
  7448 ;; *************** function _getchar *****************
  7449 ;; Defined at:
  7450 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getchar.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;		None
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;		None
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  2   32[None  ] int 
  7457 ;; Registers used:
  7458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7459 ;; Tracked objects:
  7460 ;;		On entry : 0/0
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7464 ;;      Params:         0       0       0       0       0       0       0
  7465 ;;      Locals:         0       0       0       0       0       0       0
  7466 ;;      Temps:          0       0       0       0       0       0       0
  7467 ;;      Totals:         0       0       0       0       0       0       0
  7468 ;;Total ram usage:        0 bytes
  7469 ;; Hardware stack levels used:    1
  7470 ;; Hardware stack levels required when called:    4
  7471 ;; This function calls:
  7472 ;;		_fgetc
  7473 ;; This function is called by:
  7474 ;;		_int_to_char
  7475 ;;		_float_to_char
  7476 ;; This function uses a non-reentrant model
  7477 ;;
  7478                           
  7479                           	psect	text31
  7480  00396A                     __ptext31:
  7481                           	opt callstack 0
  7482  00396A                     _getchar:
  7483                           	opt callstack 0
  7484  00396A  FFFF               	dw	65535	; assembler added errata NOP
  7485                           
  7486                           ;	Return value of _getchar is never used
  7487                           
  7488                           ;incstack = 0
  7489  00396C  0E00               	movlw	0
  7490  00396E  6E03               	movwf	fgetc@fp,c
  7491  003970  0E00               	movlw	0
  7492  003972  6E04               	movwf	fgetc@fp+1,c
  7493  003974  ECA9  F019         	call	_fgetc	;wreg free
  7494  003978  0012               	return		;funcret
  7495  00397A  FFFF               	dw	65535	; errata NOP
  7496  00397C                     __end_of_getchar:
  7497                           	opt callstack 0
  7498                           
  7499 ;; *************** function _fgetc *****************
  7500 ;; Defined at:
  7501 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_getc.c"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7504 ;;		 -> NULL(0), 
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;  c               2    9[COMRAM] int 
  7507 ;; Return value:  Size  Location     Type
  7508 ;;                  2    2[COMRAM] int 
  7509 ;; Registers used:
  7510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7516 ;;      Params:         2       0       0       0       0       0       0
  7517 ;;      Locals:         2       0       0       0       0       0       0
  7518 ;;      Temps:          5       0       0       0       0       0       0
  7519 ;;      Totals:         9       0       0       0       0       0       0
  7520 ;;Total ram usage:        9 bytes
  7521 ;; Hardware stack levels used:    1
  7522 ;; Hardware stack levels required when called:    3
  7523 ;; This function calls:
  7524 ;;		_getch
  7525 ;; This function is called by:
  7526 ;;		_getchar
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           	psect	text32
  7531  003352                     __ptext32:
  7532                           	opt callstack 0
  7533  003352                     _fgetc:
  7534                           	opt callstack 0
  7535  003352  FFFF               	dw	65535	; assembler added errata NOP
  7536                           
  7537                           ;incstack = 0
  7538  003354  5003               	movf	fgetc@fp,w,c
  7539  003356  1004               	iorwf	fgetc@fp+1,w,c
  7540  003358  A4D8               	btfss	status,2,c
  7541  00335A  D012               	goto	l4300
  7542  00335C  507E               	movf	_ungetcnt,w,c
  7543  00335E  B4D8               	btfsc	status,2,c
  7544  003360  D007               	goto	l4298
  7545  003362  0E00               	movlw	0
  7546  003364  6E0B               	movwf	fgetc@c+1,c
  7547  003366  0E00               	movlw	0
  7548  003368  6E0A               	movwf	fgetc@c,c
  7549  00336A  0E00               	movlw	0
  7550  00336C  6E7E               	movwf	_ungetcnt,c
  7551  00336E  D02F               	goto	l4302
  7552  003370                     l4298:
  7553  003370  FFFF               	dw	65535	; assembler added errata NOP
  7554  003372  ECC5  F01C         	call	_getch	;wreg free
  7555  003376  C001  F00A         	movff	?_getch,fgetc@c
  7556  00337A  C002  F00B         	movff	?_getch+1,fgetc@c+1
  7557  00337E  D027               	goto	l4302
  7558  003380                     l4300:
  7559  003380  FFFF               	dw	65535	; assembler added errata NOP
  7560  003382  EE20 F002          	lfsr	2,2
  7561  003386  5003               	movf	fgetc@fp,w,c
  7562  003388  26D9               	addwf	fsr2l,f,c
  7563  00338A  5004               	movf	fgetc@fp+1,w,c
  7564  00338C  22DA               	addwfc	fsr2h,f,c
  7565  00338E  CFDE F005          	movff	postinc2,??_fgetc
  7566  003392  CFDD F006          	movff	postdec2,??_fgetc+1
  7567  003396  C003  FFD9         	movff	fgetc@fp,fsr2l
  7568  00339A  C004  FFDA         	movff	fgetc@fp+1,fsr2h
  7569  00339E  CFDE F007          	movff	postinc2,??_fgetc+2
  7570  0033A2  CFDD F008          	movff	postdec2,??_fgetc+3
  7571  0033A6  5005               	movf	??_fgetc,w,c
  7572  0033A8  2407               	addwf	??_fgetc+2,w,c
  7573  0033AA  6ED9               	movwf	fsr2l,c
  7574  0033AC  5006               	movf	??_fgetc+1,w,c
  7575  0033AE  2008               	addwfc	??_fgetc+3,w,c
  7576  0033B0  6EDA               	movwf	fsr2h,c
  7577  0033B2  50DF               	movf	indf2,w,c
  7578  0033B4  6E09               	movwf	(??_fgetc+4)& (0+255),c
  7579  0033B6  5009               	movf	??_fgetc+4,w,c
  7580  0033B8  6E0A               	movwf	fgetc@c,c
  7581  0033BA  6A0B               	clrf	fgetc@c+1,c
  7582  0033BC  EE20 F002          	lfsr	2,2
  7583  0033C0  5003               	movf	fgetc@fp,w,c
  7584  0033C2  26D9               	addwf	fsr2l,f,c
  7585  0033C4  5004               	movf	fgetc@fp+1,w,c
  7586  0033C6  22DA               	addwfc	fsr2h,f,c
  7587  0033C8  2ADE               	incf	postinc2,f,c
  7588  0033CA  0E00               	movlw	0
  7589  0033CC  22DD               	addwfc	postdec2,f,c
  7590  0033CE                     l4302:
  7591  0033CE  FFFF               	dw	65535	; assembler added errata NOP
  7592  0033D0  C00A  F003         	movff	fgetc@c,?_fgetc
  7593  0033D4  C00B  F004         	movff	fgetc@c+1,?_fgetc+1
  7594  0033D8  0012               	return		;funcret
  7595  0033DA  FFFF               	dw	65535	; errata NOP
  7596  0033DC                     __end_of_fgetc:
  7597                           	opt callstack 0
  7598                           
  7599 ;; *************** function _getch *****************
  7600 ;; Defined at:
  7601 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/getch.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;		None
  7604 ;; Auto vars:     Size  Location     Type
  7605 ;;		None
  7606 ;; Return value:  Size  Location     Type
  7607 ;;                  2    0[COMRAM] int 
  7608 ;; Registers used:
  7609 ;;		None
  7610 ;; Tracked objects:
  7611 ;;		On entry : 0/0
  7612 ;;		On exit  : 0/0
  7613 ;;		Unchanged: 0/0
  7614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7615 ;;      Params:         2       0       0       0       0       0       0
  7616 ;;      Locals:         0       0       0       0       0       0       0
  7617 ;;      Temps:          0       0       0       0       0       0       0
  7618 ;;      Totals:         2       0       0       0       0       0       0
  7619 ;;Total ram usage:        2 bytes
  7620 ;; Hardware stack levels used:    1
  7621 ;; Hardware stack levels required when called:    2
  7622 ;; This function calls:
  7623 ;;		Nothing
  7624 ;; This function is called by:
  7625 ;;		_fgetc
  7626 ;; This function uses a non-reentrant model
  7627 ;;
  7628                           
  7629                           	psect	text33
  7630  00398A                     __ptext33:
  7631                           	opt callstack 0
  7632  00398A                     _getch:
  7633                           	opt callstack 0
  7634  00398A  FFFF               	dw	65535	; assembler added errata NOP
  7635                           
  7636                           ;incstack = 0
  7637  00398C  6801               	setf	?_getch,c
  7638  00398E  6802               	setf	?_getch+1,c
  7639  003990  0012               	return		;funcret
  7640  003992  FFFF               	dw	65535	; errata NOP
  7641  003994                     __end_of_getch:
  7642                           	opt callstack 0
  7643                           
  7644 ;; *************** function _initialize_TX *****************
  7645 ;; Defined at:
  7646 ;;		line 23 in file "serial.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;		None
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;		None
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  1    wreg      void 
  7653 ;; Registers used:
  7654 ;;		wreg, status,2
  7655 ;; Tracked objects:
  7656 ;;		On entry : 0/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7660 ;;      Params:         0       0       0       0       0       0       0
  7661 ;;      Locals:         0       0       0       0       0       0       0
  7662 ;;      Temps:          0       0       0       0       0       0       0
  7663 ;;      Totals:         0       0       0       0       0       0       0
  7664 ;;Total ram usage:        0 bytes
  7665 ;; Hardware stack levels used:    1
  7666 ;; Hardware stack levels required when called:    2
  7667 ;; This function calls:
  7668 ;;		Nothing
  7669 ;; This function is called by:
  7670 ;;		_main
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           	psect	text34
  7675  00391A                     __ptext34:
  7676                           	opt callstack 0
  7677  00391A                     _initialize_TX:
  7678                           	opt callstack 0
  7679  00391A  FFFF               	dw	65535	; assembler added errata NOP
  7680                           
  7681                           ;serial.c: 24:   TXSTAbits.TX9 = 1;
  7682                           
  7683                           ;incstack = 0
  7684  00391C  8CAC               	bsf	4012,6,c	;volatile
  7685                           
  7686                           ;serial.c: 25:   TXSTAbits.TXEN = 1;
  7687  00391E  8AAC               	bsf	4012,5,c	;volatile
  7688                           
  7689                           ;serial.c: 26:   TXSTAbits.SYNC = 0;
  7690  003920  98AC               	bcf	4012,4,c	;volatile
  7691                           
  7692                           ;serial.c: 27:   TXSTAbits.BRGH = 0;
  7693  003922  94AC               	bcf	4012,2,c	;volatile
  7694                           
  7695                           ;serial.c: 28:   TXSTAbits.TX9D = 1;
  7696  003924  80AC               	bsf	4012,0,c	;volatile
  7697                           
  7698                           ;serial.c: 29:   SPBRG = 25;
  7699  003926  0E19               	movlw	25
  7700  003928  6EAF               	movwf	4015,c	;volatile
  7701  00392A  0012               	return		;funcret
  7702  00392C  FFFF               	dw	65535	; errata NOP
  7703  00392E                     __end_of_initialize_TX:
  7704                           	opt callstack 0
  7705                           
  7706 ;; *************** function _initialize_RX *****************
  7707 ;; Defined at:
  7708 ;;		line 32 in file "serial.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;		None
  7711 ;; Auto vars:     Size  Location     Type
  7712 ;;		None
  7713 ;; Return value:  Size  Location     Type
  7714 ;;                  1    wreg      void 
  7715 ;; Registers used:
  7716 ;;		wreg, status,2
  7717 ;; Tracked objects:
  7718 ;;		On entry : 0/0
  7719 ;;		On exit  : 0/0
  7720 ;;		Unchanged: 0/0
  7721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7722 ;;      Params:         0       0       0       0       0       0       0
  7723 ;;      Locals:         0       0       0       0       0       0       0
  7724 ;;      Temps:          0       0       0       0       0       0       0
  7725 ;;      Totals:         0       0       0       0       0       0       0
  7726 ;;Total ram usage:        0 bytes
  7727 ;; Hardware stack levels used:    1
  7728 ;; Hardware stack levels required when called:    2
  7729 ;; This function calls:
  7730 ;;		Nothing
  7731 ;; This function is called by:
  7732 ;;		_main
  7733 ;; This function uses a non-reentrant model
  7734 ;;
  7735                           
  7736                           	psect	text35
  7737  00392E                     __ptext35:
  7738                           	opt callstack 0
  7739  00392E                     _initialize_RX:
  7740                           	opt callstack 0
  7741  00392E  FFFF               	dw	65535	; assembler added errata NOP
  7742                           
  7743                           ;serial.c: 33:   RCSTA = 0x00;
  7744                           
  7745                           ;incstack = 0
  7746  003930  0E00               	movlw	0
  7747  003932  6EAB               	movwf	4011,c	;volatile
  7748                           
  7749                           ;serial.c: 34:   RCSTAbits.SPEN = 1;
  7750  003934  8EAB               	bsf	4011,7,c	;volatile
  7751                           
  7752                           ;serial.c: 35:   RCSTAbits.RX9 = 1;
  7753  003936  8CAB               	bsf	4011,6,c	;volatile
  7754                           
  7755                           ;serial.c: 36:   RCSTAbits.CREN = 1;
  7756  003938  88AB               	bsf	4011,4,c	;volatile
  7757                           
  7758                           ;serial.c: 37:   RCSTAbits.ADDEN = 0;
  7759  00393A  96AB               	bcf	4011,3,c	;volatile
  7760                           
  7761                           ;serial.c: 38:   RCSTAbits.RX9D = 1;
  7762  00393C  80AB               	bsf	4011,0,c	;volatile
  7763  00393E  0012               	return		;funcret
  7764  003940  FFFF               	dw	65535	; errata NOP
  7765  003942                     __end_of_initialize_RX:
  7766                           	opt callstack 0
  7767                           
  7768 ;; *************** function _get_temp *****************
  7769 ;; Defined at:
  7770 ;;		line 10 in file "temp_adc.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;		None
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;  temp            4   55[COMRAM] float 
  7775 ;;  real_voltage    4   51[COMRAM] float 
  7776 ;;  adc_voltage     2   59[COMRAM] unsigned int 
  7777 ;; Return value:  Size  Location     Type
  7778 ;;                  4   47[COMRAM] float 
  7779 ;; Registers used:
  7780 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7781 ;; Tracked objects:
  7782 ;;		On entry : 0/0
  7783 ;;		On exit  : 0/0
  7784 ;;		Unchanged: 0/0
  7785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7786 ;;      Params:         4       0       0       0       0       0       0
  7787 ;;      Locals:        10       0       0       0       0       0       0
  7788 ;;      Temps:          0       0       0       0       0       0       0
  7789 ;;      Totals:        14       0       0       0       0       0       0
  7790 ;;Total ram usage:       14 bytes
  7791 ;; Hardware stack levels used:    1
  7792 ;; Hardware stack levels required when called:    4
  7793 ;; This function calls:
  7794 ;;		_ADC_Init
  7795 ;;		_ADC_Read
  7796 ;;		___flmul
  7797 ;;		___flsub
  7798 ;;		___xxtofl
  7799 ;; This function is called by:
  7800 ;;		_main
  7801 ;; This function uses a non-reentrant model
  7802 ;;
  7803                           
  7804                           	psect	text36
  7805  002F1A                     __ptext36:
  7806                           	opt callstack 0
  7807  002F1A                     _get_temp:
  7808                           	opt callstack 0
  7809  002F1A  FFFF               	dw	65535	; assembler added errata NOP
  7810                           
  7811                           ;temp_adc.c: 11:   ADC_Init();
  7812                           
  7813                           ;incstack = 0
  7814  002F1C  ECBE  F01C         	call	_ADC_Init	;wreg free
  7815                           
  7816                           ;temp_adc.c: 12:   ADCON1 &= ~(0x01);
  7817  002F20  90C1               	bcf	4033,0,c	;volatile
  7818                           
  7819                           ;temp_adc.c: 13:   TRISA |= 0x01;
  7820  002F22  8092               	bsf	3986,0,c	;volatile
  7821                           
  7822                           ;temp_adc.c: 14:   unsigned int adc_voltage = ADC_Read((unsigned char) 0);
  7823  002F24  0E00               	movlw	0
  7824  002F26  EC9F  F01A         	call	_ADC_Read
  7825  002F2A  C001  F03C         	movff	?_ADC_Read,get_temp@adc_voltage
  7826  002F2E  C002  F03D         	movff	?_ADC_Read+1,get_temp@adc_voltage+1
  7827                           
  7828                           ;temp_adc.c: 15:   float real_voltage = (adc_voltage * 0.0053);
  7829  002F32  C03C  F001         	movff	get_temp@adc_voltage,___xxtofl@val
  7830  002F36  C03D  F002         	movff	get_temp@adc_voltage+1,___xxtofl@val+1
  7831  002F3A  6A03               	clrf	___xxtofl@val+2,c
  7832  002F3C  6A04               	clrf	___xxtofl@val+3,c
  7833  002F3E  0E00               	movlw	0
  7834  002F40  ECC9  F014         	call	___xxtofl
  7835  002F44  C001  F00F         	movff	?___xxtofl,___flmul@b
  7836  002F48  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  7837  002F4C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  7838  002F50  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  7839  002F54  0E9F               	movlw	159
  7840  002F56  6E13               	movwf	___flmul@a,c
  7841  002F58  0EAB               	movlw	171
  7842  002F5A  6E14               	movwf	___flmul@a+1,c
  7843  002F5C  0EAD               	movlw	173
  7844  002F5E  6E15               	movwf	___flmul@a+2,c
  7845  002F60  0E3B               	movlw	59
  7846  002F62  6E16               	movwf	___flmul@a+3,c
  7847  002F64  ECF6  F00B         	call	___flmul	;wreg free
  7848  002F68  C00F  F034         	movff	?___flmul,get_temp@real_voltage
  7849  002F6C  C010  F035         	movff	?___flmul+1,get_temp@real_voltage+1
  7850  002F70  C011  F036         	movff	?___flmul+2,get_temp@real_voltage+2
  7851  002F74  C012  F037         	movff	?___flmul+3,get_temp@real_voltage+3
  7852                           
  7853                           ;temp_adc.c: 17:   float temp = 200 - 175.0 / 5.0 * real_voltage;
  7854  002F78  0E00               	movlw	0
  7855  002F7A  6E28               	movwf	___flsub@b,c
  7856  002F7C  0E00               	movlw	0
  7857  002F7E  6E29               	movwf	___flsub@b+1,c
  7858  002F80  0E48               	movlw	72
  7859  002F82  6E2A               	movwf	___flsub@b+2,c
  7860  002F84  0E43               	movlw	67
  7861  002F86  6E2B               	movwf	___flsub@b+3,c
  7862  002F88  0E00               	movlw	0
  7863  002F8A  6E13               	movwf	___flmul@a,c
  7864  002F8C  0E00               	movlw	0
  7865  002F8E  6E14               	movwf	___flmul@a+1,c
  7866  002F90  0E0C               	movlw	12
  7867  002F92  6E15               	movwf	___flmul@a+2,c
  7868  002F94  0E42               	movlw	66
  7869  002F96  6E16               	movwf	___flmul@a+3,c
  7870  002F98  C034  F00F         	movff	get_temp@real_voltage,___flmul@b
  7871  002F9C  C035  F010         	movff	get_temp@real_voltage+1,___flmul@b+1
  7872  002FA0  C036  F011         	movff	get_temp@real_voltage+2,___flmul@b+2
  7873  002FA4  C037  F012         	movff	get_temp@real_voltage+3,___flmul@b+3
  7874  002FA8  ECF6  F00B         	call	___flmul	;wreg free
  7875  002FAC  C00F  F02C         	movff	?___flmul,___flsub@a
  7876  002FB0  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  7877  002FB4  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  7878  002FB8  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  7879  002FBC  ECF0  F01A         	call	___flsub	;wreg free
  7880  002FC0  C028  F038         	movff	?___flsub,get_temp@temp
  7881  002FC4  C029  F039         	movff	?___flsub+1,get_temp@temp+1
  7882  002FC8  C02A  F03A         	movff	?___flsub+2,get_temp@temp+2
  7883  002FCC  C02B  F03B         	movff	?___flsub+3,get_temp@temp+3
  7884                           
  7885                           ;temp_adc.c: 18:   return temp;
  7886  002FD0  C038  F030         	movff	get_temp@temp,?_get_temp
  7887  002FD4  C039  F031         	movff	get_temp@temp+1,?_get_temp+1
  7888  002FD8  C03A  F032         	movff	get_temp@temp+2,?_get_temp+2
  7889  002FDC  C03B  F033         	movff	get_temp@temp+3,?_get_temp+3
  7890  002FE0  0012               	return		;funcret
  7891  002FE2  FFFF               	dw	65535	; errata NOP
  7892  002FE4                     __end_of_get_temp:
  7893                           	opt callstack 0
  7894                           
  7895 ;; *************** function ___xxtofl *****************
  7896 ;; Defined at:
  7897 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;  sign            1    wreg     unsigned char 
  7900 ;;  val             4    0[COMRAM] long 
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;  sign            1    8[COMRAM] unsigned char 
  7903 ;;  arg             4   10[COMRAM] unsigned long 
  7904 ;;  exp             1    9[COMRAM] unsigned char 
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  4    0[COMRAM] unsigned char 
  7907 ;; Registers used:
  7908 ;;		wreg, status,2, status,0
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/0
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7914 ;;      Params:         4       0       0       0       0       0       0
  7915 ;;      Locals:         6       0       0       0       0       0       0
  7916 ;;      Temps:          4       0       0       0       0       0       0
  7917 ;;      Totals:        14       0       0       0       0       0       0
  7918 ;;Total ram usage:       14 bytes
  7919 ;; Hardware stack levels used:    1
  7920 ;; Hardware stack levels required when called:    2
  7921 ;; This function calls:
  7922 ;;		Nothing
  7923 ;; This function is called by:
  7924 ;;		_get_temp
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928                           	psect	text37
  7929  002992                     __ptext37:
  7930                           	opt callstack 0
  7931  002992                     ___xxtofl:
  7932                           	opt callstack 0
  7933  002992  FFFF               	dw	65535	; assembler added errata NOP
  7934                           
  7935                           ;incstack = 0
  7936                           ;___xxtofl@sign stored from wreg
  7937  002994  6E09               	movwf	___xxtofl@sign,c
  7938  002996  5009               	movf	___xxtofl@sign,w,c
  7939  002998  A4D8               	btfss	status,2,c
  7940  00299A  AE04               	btfss	___xxtofl@val+3,7,c
  7941  00299C  D01A               	goto	l1191
  7942  00299E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7943  0029A2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7944  0029A6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7945  0029AA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7946  0029AE  1E05               	comf	??___xxtofl,f,c
  7947  0029B0  1E06               	comf	??___xxtofl+1,f,c
  7948  0029B2  1E07               	comf	??___xxtofl+2,f,c
  7949  0029B4  1E08               	comf	??___xxtofl+3,f,c
  7950  0029B6  2A05               	incf	??___xxtofl,f,c
  7951  0029B8  0E00               	movlw	0
  7952  0029BA  2206               	addwfc	??___xxtofl+1,f,c
  7953  0029BC  2207               	addwfc	??___xxtofl+2,f,c
  7954  0029BE  2208               	addwfc	??___xxtofl+3,f,c
  7955  0029C0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7956  0029C4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7957  0029C8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7958  0029CC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7959  0029D0  D009               	goto	l4510
  7960  0029D2                     l1191:
  7961  0029D2  FFFF               	dw	65535	; assembler added errata NOP
  7962  0029D4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7963  0029D8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7964  0029DC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7965  0029E0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7966  0029E4                     l4510:
  7967  0029E4  FFFF               	dw	65535	; assembler added errata NOP
  7968  0029E6  5001               	movf	___xxtofl@val,w,c
  7969  0029E8  1002               	iorwf	___xxtofl@val+1,w,c
  7970  0029EA  1003               	iorwf	___xxtofl@val+2,w,c
  7971  0029EC  1004               	iorwf	___xxtofl@val+3,w,c
  7972  0029EE  A4D8               	btfss	status,2,c
  7973  0029F0  D009               	goto	l4516
  7974  0029F2  0E00               	movlw	0
  7975  0029F4  6E01               	movwf	?___xxtofl,c
  7976  0029F6  0E00               	movlw	0
  7977  0029F8  6E02               	movwf	?___xxtofl+1,c
  7978  0029FA  0E00               	movlw	0
  7979  0029FC  6E03               	movwf	?___xxtofl+2,c
  7980  0029FE  0E00               	movlw	0
  7981  002A00  6E04               	movwf	?___xxtofl+3,c
  7982  002A02  D072               	goto	l1194
  7983  002A04                     l4516:
  7984  002A04  FFFF               	dw	65535	; assembler added errata NOP
  7985  002A06  0E96               	movlw	150
  7986  002A08  6E0A               	movwf	___xxtofl@exp,c
  7987  002A0A  D007               	goto	l4520
  7988  002A0C                     l4518:
  7989  002A0C  FFFF               	dw	65535	; assembler added errata NOP
  7990  002A0E  2A0A               	incf	___xxtofl@exp,f,c
  7991  002A10  90D8               	bcf	status,0,c
  7992  002A12  320E               	rrcf	___xxtofl@arg+3,f,c
  7993  002A14  320D               	rrcf	___xxtofl@arg+2,f,c
  7994  002A16  320C               	rrcf	___xxtofl@arg+1,f,c
  7995  002A18  320B               	rrcf	___xxtofl@arg,f,c
  7996  002A1A                     l4520:
  7997  002A1A  FFFF               	dw	65535	; assembler added errata NOP
  7998  002A1C  0E00               	movlw	0
  7999  002A1E  140B               	andwf	___xxtofl@arg,w,c
  8000  002A20  6E05               	movwf	??___xxtofl& (0+255),c
  8001  002A22  0E00               	movlw	0
  8002  002A24  140C               	andwf	___xxtofl@arg+1,w,c
  8003  002A26  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8004  002A28  0E00               	movlw	0
  8005  002A2A  140D               	andwf	___xxtofl@arg+2,w,c
  8006  002A2C  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8007  002A2E  0EFE               	movlw	254
  8008  002A30  140E               	andwf	___xxtofl@arg+3,w,c
  8009  002A32  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8010  002A34  5005               	movf	??___xxtofl,w,c
  8011  002A36  1006               	iorwf	??___xxtofl+1,w,c
  8012  002A38  1007               	iorwf	??___xxtofl+2,w,c
  8013  002A3A  1008               	iorwf	??___xxtofl+3,w,c
  8014  002A3C  B4D8               	btfsc	status,2,c
  8015  002A3E  D00E               	goto	l1198
  8016  002A40  D7E5               	goto	l4518
  8017  002A42                     l4522:
  8018  002A42  FFFF               	dw	65535	; assembler added errata NOP
  8019  002A44  2A0A               	incf	___xxtofl@exp,f,c
  8020  002A46  0E01               	movlw	1
  8021  002A48  260B               	addwf	___xxtofl@arg,f,c
  8022  002A4A  0E00               	movlw	0
  8023  002A4C  220C               	addwfc	___xxtofl@arg+1,f,c
  8024  002A4E  220D               	addwfc	___xxtofl@arg+2,f,c
  8025  002A50  220E               	addwfc	___xxtofl@arg+3,f,c
  8026  002A52  90D8               	bcf	status,0,c
  8027  002A54  320E               	rrcf	___xxtofl@arg+3,f,c
  8028  002A56  320D               	rrcf	___xxtofl@arg+2,f,c
  8029  002A58  320C               	rrcf	___xxtofl@arg+1,f,c
  8030  002A5A  320B               	rrcf	___xxtofl@arg,f,c
  8031  002A5C                     l1198:
  8032  002A5C  FFFF               	dw	65535	; assembler added errata NOP
  8033  002A5E  0E00               	movlw	0
  8034  002A60  140B               	andwf	___xxtofl@arg,w,c
  8035  002A62  6E05               	movwf	??___xxtofl& (0+255),c
  8036  002A64  0E00               	movlw	0
  8037  002A66  140C               	andwf	___xxtofl@arg+1,w,c
  8038  002A68  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8039  002A6A  0E00               	movlw	0
  8040  002A6C  140D               	andwf	___xxtofl@arg+2,w,c
  8041  002A6E  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8042  002A70  0EFF               	movlw	255
  8043  002A72  140E               	andwf	___xxtofl@arg+3,w,c
  8044  002A74  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8045  002A76  5005               	movf	??___xxtofl,w,c
  8046  002A78  1006               	iorwf	??___xxtofl+1,w,c
  8047  002A7A  1007               	iorwf	??___xxtofl+2,w,c
  8048  002A7C  1008               	iorwf	??___xxtofl+3,w,c
  8049  002A7E  B4D8               	btfsc	status,2,c
  8050  002A80  D008               	goto	l4530
  8051  002A82  D7DF               	goto	l4522
  8052  002A84                     l4528:
  8053  002A84  FFFF               	dw	65535	; assembler added errata NOP
  8054  002A86  060A               	decf	___xxtofl@exp,f,c
  8055  002A88  90D8               	bcf	status,0,c
  8056  002A8A  360B               	rlcf	___xxtofl@arg,f,c
  8057  002A8C  360C               	rlcf	___xxtofl@arg+1,f,c
  8058  002A8E  360D               	rlcf	___xxtofl@arg+2,f,c
  8059  002A90  360E               	rlcf	___xxtofl@arg+3,f,c
  8060  002A92                     l4530:
  8061  002A92  FFFF               	dw	65535	; assembler added errata NOP
  8062  002A94  BE0D               	btfsc	___xxtofl@arg+2,7,c
  8063  002A96  D003               	goto	u5060
  8064  002A98  0E02               	movlw	2
  8065  002A9A  600A               	cpfslt	___xxtofl@exp,c
  8066  002A9C  D7F3               	goto	l4528
  8067  002A9E                     u5060:
  8068  002A9E  FFFF               	dw	65535	; assembler added errata NOP
  8069  002AA0  A00A               	btfss	___xxtofl@exp,0,c
  8070  002AA2  9E0D               	bcf	___xxtofl@arg+2,7,c
  8071  002AA4  90D8               	bcf	status,0,c
  8072  002AA6  320A               	rrcf	___xxtofl@exp,f,c
  8073  002AA8  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8074  002AAC  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  8075  002AAE  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  8076  002AB0  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  8077  002AB2  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8078  002AB6  6A07               	clrf	??___xxtofl+2,c
  8079  002AB8  6A06               	clrf	??___xxtofl+1,c
  8080  002ABA  6A05               	clrf	??___xxtofl,c
  8081  002ABC  5005               	movf	??___xxtofl,w,c
  8082  002ABE  120B               	iorwf	___xxtofl@arg,f,c
  8083  002AC0  5006               	movf	??___xxtofl+1,w,c
  8084  002AC2  120C               	iorwf	___xxtofl@arg+1,f,c
  8085  002AC4  5007               	movf	??___xxtofl+2,w,c
  8086  002AC6  120D               	iorwf	___xxtofl@arg+2,f,c
  8087  002AC8  5008               	movf	??___xxtofl+3,w,c
  8088  002ACA  120E               	iorwf	___xxtofl@arg+3,f,c
  8089  002ACC  5009               	movf	___xxtofl@sign,w,c
  8090  002ACE  A4D8               	btfss	status,2,c
  8091  002AD0  AE04               	btfss	___xxtofl@val+3,7,c
  8092  002AD2  D001               	goto	l4546
  8093  002AD4  8E0E               	bsf	___xxtofl@arg+3,7,c
  8094  002AD6                     l4546:
  8095  002AD6  FFFF               	dw	65535	; assembler added errata NOP
  8096  002AD8  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8097  002ADC  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8098  002AE0  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8099  002AE4  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8100  002AE8                     l1194:
  8101  002AE8  FFFF               	dw	65535	; assembler added errata NOP
  8102  002AEA  0012               	return		;funcret
  8103  002AEC  FFFF               	dw	65535	; errata NOP
  8104  002AEE                     __end_of___xxtofl:
  8105                           	opt callstack 0
  8106                           
  8107 ;; *************** function ___flsub *****************
  8108 ;; Defined at:
  8109 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;  b               4   39[COMRAM] unsigned char 
  8112 ;;  a               4   43[COMRAM] unsigned char 
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;		None
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  4   39[COMRAM] unsigned char 
  8117 ;; Registers used:
  8118 ;;		wreg, status,2, status,0, cstack
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8124 ;;      Params:         8       0       0       0       0       0       0
  8125 ;;      Locals:         0       0       0       0       0       0       0
  8126 ;;      Temps:          0       0       0       0       0       0       0
  8127 ;;      Totals:         8       0       0       0       0       0       0
  8128 ;;Total ram usage:        8 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:    3
  8131 ;; This function calls:
  8132 ;;		___fladd
  8133 ;; This function is called by:
  8134 ;;		_get_temp
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           	psect	text38
  8139  0035E0                     __ptext38:
  8140                           	opt callstack 0
  8141  0035E0                     ___flsub:
  8142                           	opt callstack 0
  8143  0035E0  FFFF               	dw	65535	; assembler added errata NOP
  8144                           
  8145                           ;incstack = 0
  8146  0035E2  0E00               	movlw	0
  8147  0035E4  1A2C               	xorwf	___flsub@a,f,c
  8148  0035E6  0E00               	movlw	0
  8149  0035E8  1A2D               	xorwf	___flsub@a+1,f,c
  8150  0035EA  0E00               	movlw	0
  8151  0035EC  1A2E               	xorwf	___flsub@a+2,f,c
  8152  0035EE  0E80               	movlw	128
  8153  0035F0  1A2F               	xorwf	___flsub@a+3,f,c
  8154  0035F2  C028  F001         	movff	___flsub@b,___fladd@b
  8155  0035F6  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  8156  0035FA  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  8157  0035FE  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  8158  003602  C02C  F005         	movff	___flsub@a,___fladd@a
  8159  003606  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  8160  00360A  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  8161  00360E  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  8162  003612  ECB7  F00D         	call	___fladd	;wreg free
  8163  003616  C001  F028         	movff	?___fladd,?___flsub
  8164  00361A  C002  F029         	movff	?___fladd+1,?___flsub+1
  8165  00361E  C003  F02A         	movff	?___fladd+2,?___flsub+2
  8166  003622  C004  F02B         	movff	?___fladd+3,?___flsub+3
  8167  003626  0012               	return		;funcret
  8168  003628  FFFF               	dw	65535	; errata NOP
  8169  00362A                     __end_of___flsub:
  8170                           	opt callstack 0
  8171                           
  8172 ;; *************** function ___fladd *****************
  8173 ;; Defined at:
  8174 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;  b               4    0[COMRAM] unsigned char 
  8177 ;;  a               4    4[COMRAM] unsigned char 
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;  grs             1   15[COMRAM] unsigned char 
  8180 ;;  bexp            1   14[COMRAM] unsigned char 
  8181 ;;  aexp            1   13[COMRAM] unsigned char 
  8182 ;;  signs           1   12[COMRAM] unsigned char 
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  4    0[COMRAM] unsigned char 
  8185 ;; Registers used:
  8186 ;;		wreg, status,2, status,0
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8192 ;;      Params:         8       0       0       0       0       0       0
  8193 ;;      Locals:         4       0       0       0       0       0       0
  8194 ;;      Temps:          4       0       0       0       0       0       0
  8195 ;;      Totals:        16       0       0       0       0       0       0
  8196 ;;Total ram usage:       16 bytes
  8197 ;; Hardware stack levels used:    1
  8198 ;; Hardware stack levels required when called:    2
  8199 ;; This function calls:
  8200 ;;		Nothing
  8201 ;; This function is called by:
  8202 ;;		___flsub
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           	psect	text39
  8207  001B6E                     __ptext39:
  8208                           	opt callstack 0
  8209  001B6E                     ___fladd:
  8210                           	opt callstack 0
  8211  001B6E  FFFF               	dw	65535	; assembler added errata NOP
  8212                           
  8213                           ;incstack = 0
  8214  001B70  5004               	movf	___fladd@b+3,w,c
  8215  001B72  0B80               	andlw	128
  8216  001B74  6E0D               	movwf	___fladd@signs,c
  8217  001B76  5004               	movf	___fladd@b+3,w,c
  8218  001B78  2404               	addwf	___fladd@b+3,w,c
  8219  001B7A  6E0F               	movwf	___fladd@bexp,c
  8220  001B7C  BE03               	btfsc	___fladd@b+2,7,c
  8221  001B7E  800F               	bsf	___fladd@bexp,0,c
  8222  001B80  500F               	movf	___fladd@bexp,w,c
  8223  001B82  B4D8               	btfsc	status,2,c
  8224  001B84  D00E               	goto	l4106
  8225  001B86  280F               	incf	___fladd@bexp,w,c
  8226  001B88  A4D8               	btfss	status,2,c
  8227  001B8A  D008               	goto	l4102
  8228  001B8C  0E00               	movlw	0
  8229  001B8E  6E01               	movwf	___fladd@b,c
  8230  001B90  0E00               	movlw	0
  8231  001B92  6E02               	movwf	___fladd@b+1,c
  8232  001B94  0E00               	movlw	0
  8233  001B96  6E03               	movwf	___fladd@b+2,c
  8234  001B98  0E00               	movlw	0
  8235  001B9A  6E04               	movwf	___fladd@b+3,c
  8236  001B9C                     l4102:
  8237  001B9C  FFFF               	dw	65535	; assembler added errata NOP
  8238  001B9E  8E03               	bsf	___fladd@b+2,7,c
  8239  001BA0  D007               	goto	L21
  8240  001BA2                     l4106:
  8241  001BA2  FFFF               	dw	65535	; assembler added errata NOP
  8242  001BA4  0E00               	movlw	0
  8243  001BA6  6E01               	movwf	___fladd@b,c
  8244  001BA8  0E00               	movlw	0
  8245  001BAA  6E02               	movwf	___fladd@b+1,c
  8246  001BAC  0E00               	movlw	0
  8247  001BAE  6E03               	movwf	___fladd@b+2,c
  8248  001BB0                     L21:
  8249  001BB0  FFFF               	dw	65535	; assembler added errata NOP
  8250  001BB2  0E00               	movlw	0
  8251  001BB4  6E04               	movwf	___fladd@b+3,c
  8252  001BB6  5008               	movf	___fladd@a+3,w,c
  8253  001BB8  0B80               	andlw	128
  8254  001BBA  6E0E               	movwf	___fladd@aexp,c
  8255  001BBC  500D               	movf	___fladd@signs,w,c
  8256  001BBE  180E               	xorwf	___fladd@aexp,w,c
  8257  001BC0  A4D8               	btfss	status,2,c
  8258  001BC2  8C0D               	bsf	___fladd@signs,6,c
  8259  001BC4  5008               	movf	___fladd@a+3,w,c
  8260  001BC6  2408               	addwf	___fladd@a+3,w,c
  8261  001BC8  6E0E               	movwf	___fladd@aexp,c
  8262  001BCA  BE07               	btfsc	___fladd@a+2,7,c
  8263  001BCC  800E               	bsf	___fladd@aexp,0,c
  8264  001BCE  500E               	movf	___fladd@aexp,w,c
  8265  001BD0  B4D8               	btfsc	status,2,c
  8266  001BD2  D00E               	goto	l4130
  8267  001BD4  280E               	incf	___fladd@aexp,w,c
  8268  001BD6  A4D8               	btfss	status,2,c
  8269  001BD8  D008               	goto	l4126
  8270  001BDA  0E00               	movlw	0
  8271  001BDC  6E05               	movwf	___fladd@a,c
  8272  001BDE  0E00               	movlw	0
  8273  001BE0  6E06               	movwf	___fladd@a+1,c
  8274  001BE2  0E00               	movlw	0
  8275  001BE4  6E07               	movwf	___fladd@a+2,c
  8276  001BE6  0E00               	movlw	0
  8277  001BE8  6E08               	movwf	___fladd@a+3,c
  8278  001BEA                     l4126:
  8279  001BEA  FFFF               	dw	65535	; assembler added errata NOP
  8280  001BEC  8E07               	bsf	___fladd@a+2,7,c
  8281  001BEE  D007               	goto	L22
  8282  001BF0                     l4130:
  8283  001BF0  FFFF               	dw	65535	; assembler added errata NOP
  8284  001BF2  0E00               	movlw	0
  8285  001BF4  6E05               	movwf	___fladd@a,c
  8286  001BF6  0E00               	movlw	0
  8287  001BF8  6E06               	movwf	___fladd@a+1,c
  8288  001BFA  0E00               	movlw	0
  8289  001BFC  6E07               	movwf	___fladd@a+2,c
  8290  001BFE                     L22:
  8291  001BFE  FFFF               	dw	65535	; assembler added errata NOP
  8292  001C00  0E00               	movlw	0
  8293  001C02  6E08               	movwf	___fladd@a+3,c
  8294  001C04  500F               	movf	___fladd@bexp,w,c
  8295  001C06  5C0E               	subwf	___fladd@aexp,w,c
  8296  001C08  B0D8               	btfsc	status,0,c
  8297  001C0A  D023               	goto	l4168
  8298  001C0C  AC0D               	btfss	___fladd@signs,6,c
  8299  001C0E  D002               	goto	l4138
  8300  001C10  0E80               	movlw	128
  8301  001C12  1A0D               	xorwf	___fladd@signs,f,c
  8302  001C14                     l4138:
  8303  001C14  FFFF               	dw	65535	; assembler added errata NOP
  8304  001C16  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  8305  001C1A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8306  001C1E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  8307  001C22  C001  F010         	movff	___fladd@b,___fladd@grs
  8308  001C26  C005  F001         	movff	___fladd@a,___fladd@b
  8309  001C2A  C010  F005         	movff	___fladd@grs,___fladd@a
  8310  001C2E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  8311  001C32  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  8312  001C36  C010  F006         	movff	___fladd@grs,___fladd@a+1
  8313  001C3A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  8314  001C3E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  8315  001C42  C010  F007         	movff	___fladd@grs,___fladd@a+2
  8316  001C46  C004  F010         	movff	___fladd@b+3,___fladd@grs
  8317  001C4A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  8318  001C4E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  8319  001C52                     l4168:
  8320  001C52  FFFF               	dw	65535	; assembler added errata NOP
  8321  001C54  0E00               	movlw	0
  8322  001C56  6E10               	movwf	___fladd@grs,c
  8323  001C58  500F               	movf	___fladd@bexp,w,c
  8324  001C5A  C00E  F009         	movff	___fladd@aexp,??___fladd
  8325  001C5E  6A0A               	clrf	(??___fladd+1)& (0+255),c
  8326  001C60  5E09               	subwf	??___fladd,f,c
  8327  001C62  0E00               	movlw	0
  8328  001C64  5A0A               	subwfb	??___fladd+1,f,c
  8329  001C66  BE0A               	btfsc	??___fladd+1,7,c
  8330  001C68  D031               	goto	l1065
  8331  001C6A  500A               	movf	??___fladd+1,w,c
  8332  001C6C  E104               	bnz	u4420
  8333  001C6E  0E1A               	movlw	26
  8334  001C70  5C09               	subwf	??___fladd,w,c
  8335  001C72  A0D8               	btfss	status,0,c
  8336  001C74  D02B               	goto	l1065
  8337  001C76                     u4420:
  8338  001C76  5001               	movf	___fladd@b,w,c
  8339  001C78  1002               	iorwf	___fladd@b+1,w,c
  8340  001C7A  1003               	iorwf	___fladd@b+2,w,c
  8341  001C7C  1004               	iorwf	___fladd@b+3,w,c
  8342  001C7E  B4D8               	btfsc	status,2,c
  8343  001C80  D002               	goto	u4430
  8344  001C82  0E01               	movlw	1
  8345  001C84  D002               	goto	u4440
  8346  001C86                     u4430:
  8347  001C86  FFFF               	dw	65535	; assembler added errata NOP
  8348  001C88  0E00               	movlw	0
  8349  001C8A                     u4440:
  8350  001C8A  FFFF               	dw	65535	; assembler added errata NOP
  8351  001C8C  6E10               	movwf	___fladd@grs,c
  8352  001C8E  0E00               	movlw	0
  8353  001C90  6E01               	movwf	___fladd@b,c
  8354  001C92  0E00               	movlw	0
  8355  001C94  6E02               	movwf	___fladd@b+1,c
  8356  001C96  0E00               	movlw	0
  8357  001C98  6E03               	movwf	___fladd@b+2,c
  8358  001C9A  0E00               	movlw	0
  8359  001C9C  6E04               	movwf	___fladd@b+3,c
  8360  001C9E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8361  001CA2  D019               	goto	u4470
  8362  001CA4                     l1066:
  8363  001CA4  FFFF               	dw	65535	; assembler added errata NOP
  8364  001CA6  A010               	btfss	___fladd@grs,0,c
  8365  001CA8  D005               	goto	l4180
  8366  001CAA  90D8               	bcf	status,0,c
  8367  001CAC  3010               	rrcf	___fladd@grs,w,c
  8368  001CAE  0901               	iorlw	1
  8369  001CB0  6E10               	movwf	___fladd@grs,c
  8370  001CB2  D003               	goto	l4182
  8371  001CB4                     l4180:
  8372  001CB4  FFFF               	dw	65535	; assembler added errata NOP
  8373  001CB6  90D8               	bcf	status,0,c
  8374  001CB8  3210               	rrcf	___fladd@grs,f,c
  8375  001CBA                     l4182:
  8376  001CBA  FFFF               	dw	65535	; assembler added errata NOP
  8377  001CBC  B001               	btfsc	___fladd@b,0,c
  8378  001CBE  8E10               	bsf	___fladd@grs,7,c
  8379  001CC0  3404               	rlcf	___fladd@b+3,w,c
  8380  001CC2  3204               	rrcf	___fladd@b+3,f,c
  8381  001CC4  3203               	rrcf	___fladd@b+2,f,c
  8382  001CC6  3202               	rrcf	___fladd@b+1,f,c
  8383  001CC8  3201               	rrcf	___fladd@b,f,c
  8384  001CCA  2A0F               	incf	___fladd@bexp,f,c
  8385  001CCC                     l1065:
  8386  001CCC  FFFF               	dw	65535	; assembler added errata NOP
  8387  001CCE  500E               	movf	___fladd@aexp,w,c
  8388  001CD0  5C0F               	subwf	___fladd@bexp,w,c
  8389  001CD2  A0D8               	btfss	status,0,c
  8390  001CD4  D7E7               	goto	l1066
  8391  001CD6                     u4470:
  8392  001CD6  FFFF               	dw	65535	; assembler added errata NOP
  8393  001CD8  BC0D               	btfsc	___fladd@signs,6,c
  8394  001CDA  D021               	goto	l4214
  8395  001CDC  500F               	movf	___fladd@bexp,w,c
  8396  001CDE  B4D8               	btfsc	status,2,c
  8397  001CE0  D065               	goto	u4560
  8398  001CE2  5005               	movf	___fladd@a,w,c
  8399  001CE4  2601               	addwf	___fladd@b,f,c
  8400  001CE6  5006               	movf	___fladd@a+1,w,c
  8401  001CE8  2202               	addwfc	___fladd@b+1,f,c
  8402  001CEA  5007               	movf	___fladd@a+2,w,c
  8403  001CEC  2203               	addwfc	___fladd@b+2,f,c
  8404  001CEE  5008               	movf	___fladd@a+3,w,c
  8405  001CF0  2204               	addwfc	___fladd@b+3,f,c
  8406  001CF2  A004               	btfss	___fladd@b+3,0,c
  8407  001CF4  D07B               	goto	u4600
  8408  001CF6  A010               	btfss	___fladd@grs,0,c
  8409  001CF8  D005               	goto	l4204
  8410  001CFA  90D8               	bcf	status,0,c
  8411  001CFC  3010               	rrcf	___fladd@grs,w,c
  8412  001CFE  0901               	iorlw	1
  8413  001D00  6E10               	movwf	___fladd@grs,c
  8414  001D02  D003               	goto	l4206
  8415  001D04                     l4204:
  8416  001D04  FFFF               	dw	65535	; assembler added errata NOP
  8417  001D06  90D8               	bcf	status,0,c
  8418  001D08  3210               	rrcf	___fladd@grs,f,c
  8419  001D0A                     l4206:
  8420  001D0A  FFFF               	dw	65535	; assembler added errata NOP
  8421  001D0C  B001               	btfsc	___fladd@b,0,c
  8422  001D0E  8E10               	bsf	___fladd@grs,7,c
  8423  001D10  3404               	rlcf	___fladd@b+3,w,c
  8424  001D12  3204               	rrcf	___fladd@b+3,f,c
  8425  001D14  3203               	rrcf	___fladd@b+2,f,c
  8426  001D16  3202               	rrcf	___fladd@b+1,f,c
  8427  001D18  3201               	rrcf	___fladd@b,f,c
  8428  001D1A  2A0F               	incf	___fladd@bexp,f,c
  8429  001D1C  D067               	goto	u4600
  8430  001D1E                     l4214:
  8431  001D1E  FFFF               	dw	65535	; assembler added errata NOP
  8432  001D20  5005               	movf	___fladd@a,w,c
  8433  001D22  5C01               	subwf	___fladd@b,w,c
  8434  001D24  5006               	movf	___fladd@a+1,w,c
  8435  001D26  5802               	subwfb	___fladd@b+1,w,c
  8436  001D28  5007               	movf	___fladd@a+2,w,c
  8437  001D2A  5803               	subwfb	___fladd@b+2,w,c
  8438  001D2C  5004               	movf	___fladd@b+3,w,c
  8439  001D2E  0A80               	xorlw	128
  8440  001D30  6E09               	movwf	??___fladd& (0+255),c
  8441  001D32  5008               	movf	___fladd@a+3,w,c
  8442  001D34  0A80               	xorlw	128
  8443  001D36  5809               	subwfb	??___fladd& (0+255),w,c
  8444  001D38  B0D8               	btfsc	status,0,c
  8445  001D3A  D025               	goto	l4224
  8446  001D3C  5001               	movf	___fladd@b,w,c
  8447  001D3E  5C05               	subwf	___fladd@a,w,c
  8448  001D40  6E09               	movwf	??___fladd& (0+255),c
  8449  001D42  5002               	movf	___fladd@b+1,w,c
  8450  001D44  5806               	subwfb	___fladd@a+1,w,c
  8451  001D46  6E0A               	movwf	(??___fladd+1)& (0+255),c
  8452  001D48  5003               	movf	___fladd@b+2,w,c
  8453  001D4A  5807               	subwfb	___fladd@a+2,w,c
  8454  001D4C  6E0B               	movwf	(??___fladd+2)& (0+255),c
  8455  001D4E  5004               	movf	___fladd@b+3,w,c
  8456  001D50  5808               	subwfb	___fladd@a+3,w,c
  8457  001D52  6E0C               	movwf	(??___fladd+3)& (0+255),c
  8458  001D54  0EFF               	movlw	255
  8459  001D56  2409               	addwf	??___fladd,w,c
  8460  001D58  6E01               	movwf	___fladd@b,c
  8461  001D5A  0EFF               	movlw	255
  8462  001D5C  200A               	addwfc	??___fladd+1,w,c
  8463  001D5E  6E02               	movwf	___fladd@b+1,c
  8464  001D60  0EFF               	movlw	255
  8465  001D62  200B               	addwfc	??___fladd+2,w,c
  8466  001D64  6E03               	movwf	___fladd@b+2,c
  8467  001D66  0EFF               	movlw	255
  8468  001D68  200C               	addwfc	??___fladd+3,w,c
  8469  001D6A  6E04               	movwf	___fladd@b+3,c
  8470  001D6C  0E80               	movlw	128
  8471  001D6E  1A0D               	xorwf	___fladd@signs,f,c
  8472  001D70  6C10               	negf	___fladd@grs,c
  8473  001D72  5010               	movf	___fladd@grs,w,c
  8474  001D74  A4D8               	btfss	status,2,c
  8475  001D76  D010               	goto	l1081
  8476  001D78  0E01               	movlw	1
  8477  001D7A  2601               	addwf	___fladd@b,f,c
  8478  001D7C  0E00               	movlw	0
  8479  001D7E  2202               	addwfc	___fladd@b+1,f,c
  8480  001D80  2203               	addwfc	___fladd@b+2,f,c
  8481  001D82  2204               	addwfc	___fladd@b+3,f,c
  8482  001D84  D009               	goto	l1081
  8483  001D86                     l4224:
  8484  001D86  FFFF               	dw	65535	; assembler added errata NOP
  8485  001D88  5005               	movf	___fladd@a,w,c
  8486  001D8A  5E01               	subwf	___fladd@b,f,c
  8487  001D8C  5006               	movf	___fladd@a+1,w,c
  8488  001D8E  5A02               	subwfb	___fladd@b+1,f,c
  8489  001D90  5007               	movf	___fladd@a+2,w,c
  8490  001D92  5A03               	subwfb	___fladd@b+2,f,c
  8491  001D94  5008               	movf	___fladd@a+3,w,c
  8492  001D96  5A04               	subwfb	___fladd@b+3,f,c
  8493  001D98                     l1081:
  8494  001D98  FFFF               	dw	65535	; assembler added errata NOP
  8495  001D9A  5001               	movf	___fladd@b,w,c
  8496  001D9C  1002               	iorwf	___fladd@b+1,w,c
  8497  001D9E  1003               	iorwf	___fladd@b+2,w,c
  8498  001DA0  1004               	iorwf	___fladd@b+3,w,c
  8499  001DA2  A4D8               	btfss	status,2,c
  8500  001DA4  D020               	goto	l4248
  8501  001DA6  5010               	movf	___fladd@grs,w,c
  8502  001DA8  A4D8               	btfss	status,2,c
  8503  001DAA  D01D               	goto	l4248
  8504  001DAC                     u4560:
  8505  001DAC  FFFF               	dw	65535	; assembler added errata NOP
  8506  001DAE  0E00               	movlw	0
  8507  001DB0  6E01               	movwf	?___fladd,c
  8508  001DB2  0E00               	movlw	0
  8509  001DB4  6E02               	movwf	?___fladd+1,c
  8510  001DB6  0E00               	movlw	0
  8511  001DB8  6E03               	movwf	?___fladd+2,c
  8512  001DBA  0E00               	movlw	0
  8513  001DBC  6E04               	movwf	?___fladd+3,c
  8514  001DBE  D076               	goto	l1073
  8515  001DC0                     l4232:
  8516  001DC0  FFFF               	dw	65535	; assembler added errata NOP
  8517  001DC2  90D8               	bcf	status,0,c
  8518  001DC4  3601               	rlcf	___fladd@b,f,c
  8519  001DC6  3602               	rlcf	___fladd@b+1,f,c
  8520  001DC8  3603               	rlcf	___fladd@b+2,f,c
  8521  001DCA  3604               	rlcf	___fladd@b+3,f,c
  8522  001DCC  BE10               	btfsc	___fladd@grs,7,c
  8523  001DCE  8001               	bsf	___fladd@b,0,c
  8524  001DD0  A010               	btfss	___fladd@grs,0,c
  8525  001DD2  D002               	goto	l4242
  8526  001DD4  80D8               	bsf	status,0,c
  8527  001DD6  D002               	goto	L23
  8528  001DD8                     l4242:
  8529  001DD8  FFFF               	dw	65535	; assembler added errata NOP
  8530  001DDA  90D8               	bcf	status,0,c
  8531  001DDC                     L23:
  8532  001DDC  FFFF               	dw	65535	; assembler added errata NOP
  8533  001DDE  3610               	rlcf	___fladd@grs,f,c
  8534  001DE0  500F               	movf	___fladd@bexp,w,c
  8535  001DE2  A4D8               	btfss	status,2,c
  8536  001DE4  060F               	decf	___fladd@bexp,f,c
  8537  001DE6                     l4248:
  8538  001DE6  FFFF               	dw	65535	; assembler added errata NOP
  8539  001DE8  AE03               	btfss	___fladd@b+2,7,c
  8540  001DEA  D7EA               	goto	l4232
  8541  001DEC                     u4600:
  8542  001DEC  FFFF               	dw	65535	; assembler added errata NOP
  8543  001DEE  0E00               	movlw	0
  8544  001DF0  6E0E               	movwf	___fladd@aexp,c
  8545  001DF2  AE10               	btfss	___fladd@grs,7,c
  8546  001DF4  D00D               	goto	l1090
  8547  001DF6  C010  F009         	movff	___fladd@grs,??___fladd
  8548  001DFA  0E7F               	movlw	127
  8549  001DFC  1609               	andwf	??___fladd,f,c
  8550  001DFE  B4D8               	btfsc	status,2,c
  8551  001E00  D004               	goto	l1091
  8552  001E02                     u4620:
  8553  001E02  FFFF               	dw	65535	; assembler added errata NOP
  8554  001E04  0E01               	movlw	1
  8555  001E06  6E0E               	movwf	___fladd@aexp,c
  8556  001E08  D003               	goto	l1090
  8557  001E0A                     l1091:
  8558  001E0A  FFFF               	dw	65535	; assembler added errata NOP
  8559  001E0C  B001               	btfsc	___fladd@b,0,c
  8560  001E0E  D7F9               	goto	u4620
  8561  001E10                     l1090:
  8562  001E10  FFFF               	dw	65535	; assembler added errata NOP
  8563  001E12  500E               	movf	___fladd@aexp,w,c
  8564  001E14  B4D8               	btfsc	status,2,c
  8565  001E16  D020               	goto	l4268
  8566  001E18  0E01               	movlw	1
  8567  001E1A  2601               	addwf	___fladd@b,f,c
  8568  001E1C  0E00               	movlw	0
  8569  001E1E  2202               	addwfc	___fladd@b+1,f,c
  8570  001E20  2203               	addwfc	___fladd@b+2,f,c
  8571  001E22  2204               	addwfc	___fladd@b+3,f,c
  8572  001E24  A004               	btfss	___fladd@b+3,0,c
  8573  001E26  D018               	goto	l4268
  8574  001E28  C001  F009         	movff	___fladd@b,??___fladd
  8575  001E2C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  8576  001E30  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  8577  001E34  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  8578  001E38  340C               	rlcf	??___fladd+3,w,c
  8579  001E3A  320C               	rrcf	??___fladd+3,f,c
  8580  001E3C  320B               	rrcf	??___fladd+2,f,c
  8581  001E3E  320A               	rrcf	??___fladd+1,f,c
  8582  001E40  3209               	rrcf	??___fladd,f,c
  8583  001E42  C009  F001         	movff	??___fladd,___fladd@b
  8584  001E46  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  8585  001E4A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  8586  001E4E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  8587  001E52  280F               	incf	___fladd@bexp,w,c
  8588  001E54  A4D8               	btfss	status,2,c
  8589  001E56  2A0F               	incf	___fladd@bexp,f,c
  8590  001E58                     l4268:
  8591  001E58  FFFF               	dw	65535	; assembler added errata NOP
  8592  001E5A  280F               	incf	___fladd@bexp,w,c
  8593  001E5C  B4D8               	btfsc	status,2,c
  8594  001E5E  D003               	goto	u4680
  8595  001E60  500F               	movf	___fladd@bexp,w,c
  8596  001E62  A4D8               	btfss	status,2,c
  8597  001E64  D00E               	goto	l4276
  8598  001E66                     u4680:
  8599  001E66  FFFF               	dw	65535	; assembler added errata NOP
  8600  001E68  0E00               	movlw	0
  8601  001E6A  6E01               	movwf	___fladd@b,c
  8602  001E6C  0E00               	movlw	0
  8603  001E6E  6E02               	movwf	___fladd@b+1,c
  8604  001E70  0E00               	movlw	0
  8605  001E72  6E03               	movwf	___fladd@b+2,c
  8606  001E74  0E00               	movlw	0
  8607  001E76  6E04               	movwf	___fladd@b+3,c
  8608  001E78  500F               	movf	___fladd@bexp,w,c
  8609  001E7A  A4D8               	btfss	status,2,c
  8610  001E7C  D002               	goto	l4276
  8611  001E7E  0E00               	movlw	0
  8612  001E80  6E0D               	movwf	___fladd@signs,c
  8613  001E82                     l4276:
  8614  001E82  FFFF               	dw	65535	; assembler added errata NOP
  8615  001E84  A00F               	btfss	___fladd@bexp,0,c
  8616  001E86  D002               	goto	l4280
  8617  001E88  8E03               	bsf	___fladd@b+2,7,c
  8618  001E8A  D002               	goto	l4282
  8619  001E8C                     l4280:
  8620  001E8C  FFFF               	dw	65535	; assembler added errata NOP
  8621  001E8E  9E03               	bcf	___fladd@b+2,7,c
  8622  001E90                     l4282:
  8623  001E90  FFFF               	dw	65535	; assembler added errata NOP
  8624  001E92  90D8               	bcf	status,0,c
  8625  001E94  300F               	rrcf	___fladd@bexp,w,c
  8626  001E96  6E04               	movwf	___fladd@b+3,c
  8627  001E98  BE0D               	btfsc	___fladd@signs,7,c
  8628  001E9A  8E04               	bsf	___fladd@b+3,7,c
  8629  001E9C  C001  F001         	movff	___fladd@b,?___fladd
  8630  001EA0  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8631  001EA4  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8632  001EA8  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8633  001EAC                     l1073:
  8634  001EAC  FFFF               	dw	65535	; assembler added errata NOP
  8635  001EAE  0012               	return		;funcret
  8636  001EB0  FFFF               	dw	65535	; errata NOP
  8637  001EB2                     __end_of___fladd:
  8638                           	opt callstack 0
  8639                           
  8640 ;; *************** function ___flmul *****************
  8641 ;; Defined at:
  8642 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  8643 ;; Parameters:    Size  Location     Type
  8644 ;;  b               4   14[COMRAM] unsigned char 
  8645 ;;  a               4   18[COMRAM] unsigned char 
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;  prod            4   33[COMRAM] struct .
  8648 ;;  grs             4   27[COMRAM] unsigned long 
  8649 ;;  temp            2   37[COMRAM] struct .
  8650 ;;  bexp            1   32[COMRAM] unsigned char 
  8651 ;;  aexp            1   31[COMRAM] unsigned char 
  8652 ;;  sign            1   26[COMRAM] unsigned char 
  8653 ;; Return value:  Size  Location     Type
  8654 ;;                  4   14[COMRAM] unsigned char 
  8655 ;; Registers used:
  8656 ;;		wreg, status,2, status,0, prodl, prodh
  8657 ;; Tracked objects:
  8658 ;;		On entry : 0/0
  8659 ;;		On exit  : 0/0
  8660 ;;		Unchanged: 0/0
  8661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8662 ;;      Params:         8       0       0       0       0       0       0
  8663 ;;      Locals:        13       0       0       0       0       0       0
  8664 ;;      Temps:          4       0       0       0       0       0       0
  8665 ;;      Totals:        25       0       0       0       0       0       0
  8666 ;;Total ram usage:       25 bytes
  8667 ;; Hardware stack levels used:    1
  8668 ;; Hardware stack levels required when called:    2
  8669 ;; This function calls:
  8670 ;;		Nothing
  8671 ;; This function is called by:
  8672 ;;		_get_temp
  8673 ;; This function uses a non-reentrant model
  8674 ;;
  8675                           
  8676                           	psect	text40
  8677  0017EC                     __ptext40:
  8678                           	opt callstack 0
  8679  0017EC                     ___flmul:
  8680                           	opt callstack 0
  8681  0017EC  FFFF               	dw	65535	; assembler added errata NOP
  8682                           
  8683                           ;incstack = 0
  8684  0017EE  5012               	movf	___flmul@b+3,w,c
  8685  0017F0  0B80               	andlw	128
  8686  0017F2  6E1B               	movwf	___flmul@sign,c
  8687  0017F4  5012               	movf	___flmul@b+3,w,c
  8688  0017F6  2412               	addwf	___flmul@b+3,w,c
  8689  0017F8  6E21               	movwf	___flmul@bexp,c
  8690  0017FA  BE11               	btfsc	___flmul@b+2,7,c
  8691  0017FC  8021               	bsf	___flmul@bexp,0,c
  8692  0017FE  5021               	movf	___flmul@bexp,w,c
  8693  001800  B4D8               	btfsc	status,2,c
  8694  001802  D00E               	goto	l4382
  8695  001804  2821               	incf	___flmul@bexp,w,c
  8696  001806  A4D8               	btfss	status,2,c
  8697  001808  D008               	goto	l4380
  8698  00180A  0E00               	movlw	0
  8699  00180C  6E0F               	movwf	___flmul@b,c
  8700  00180E  0E00               	movlw	0
  8701  001810  6E10               	movwf	___flmul@b+1,c
  8702  001812  0E00               	movlw	0
  8703  001814  6E11               	movwf	___flmul@b+2,c
  8704  001816  0E00               	movlw	0
  8705  001818  6E12               	movwf	___flmul@b+3,c
  8706  00181A                     l4380:
  8707  00181A  FFFF               	dw	65535	; assembler added errata NOP
  8708  00181C  8E11               	bsf	___flmul@b+2,7,c
  8709  00181E  D009               	goto	l4384
  8710  001820                     l4382:
  8711  001820  FFFF               	dw	65535	; assembler added errata NOP
  8712  001822  0E00               	movlw	0
  8713  001824  6E0F               	movwf	___flmul@b,c
  8714  001826  0E00               	movlw	0
  8715  001828  6E10               	movwf	___flmul@b+1,c
  8716  00182A  0E00               	movlw	0
  8717  00182C  6E11               	movwf	___flmul@b+2,c
  8718  00182E  0E00               	movlw	0
  8719  001830  6E12               	movwf	___flmul@b+3,c
  8720  001832                     l4384:
  8721  001832  FFFF               	dw	65535	; assembler added errata NOP
  8722  001834  5016               	movf	___flmul@a+3,w,c
  8723  001836  0B80               	andlw	128
  8724  001838  1A1B               	xorwf	___flmul@sign,f,c
  8725  00183A  5016               	movf	___flmul@a+3,w,c
  8726  00183C  2416               	addwf	___flmul@a+3,w,c
  8727  00183E  6E20               	movwf	___flmul@aexp,c
  8728  001840  BE15               	btfsc	___flmul@a+2,7,c
  8729  001842  8020               	bsf	___flmul@aexp,0,c
  8730  001844  5020               	movf	___flmul@aexp,w,c
  8731  001846  B4D8               	btfsc	status,2,c
  8732  001848  D00E               	goto	l4400
  8733  00184A  2820               	incf	___flmul@aexp,w,c
  8734  00184C  A4D8               	btfss	status,2,c
  8735  00184E  D008               	goto	l4398
  8736  001850  0E00               	movlw	0
  8737  001852  6E13               	movwf	___flmul@a,c
  8738  001854  0E00               	movlw	0
  8739  001856  6E14               	movwf	___flmul@a+1,c
  8740  001858  0E00               	movlw	0
  8741  00185A  6E15               	movwf	___flmul@a+2,c
  8742  00185C  0E00               	movlw	0
  8743  00185E  6E16               	movwf	___flmul@a+3,c
  8744  001860                     l4398:
  8745  001860  FFFF               	dw	65535	; assembler added errata NOP
  8746  001862  8E15               	bsf	___flmul@a+2,7,c
  8747  001864  D009               	goto	l1150
  8748  001866                     l4400:
  8749  001866  FFFF               	dw	65535	; assembler added errata NOP
  8750  001868  0E00               	movlw	0
  8751  00186A  6E13               	movwf	___flmul@a,c
  8752  00186C  0E00               	movlw	0
  8753  00186E  6E14               	movwf	___flmul@a+1,c
  8754  001870  0E00               	movlw	0
  8755  001872  6E15               	movwf	___flmul@a+2,c
  8756  001874  0E00               	movlw	0
  8757  001876  6E16               	movwf	___flmul@a+3,c
  8758  001878                     l1150:
  8759  001878  FFFF               	dw	65535	; assembler added errata NOP
  8760  00187A  5020               	movf	___flmul@aexp,w,c
  8761  00187C  B4D8               	btfsc	status,2,c
  8762  00187E  D003               	goto	u4880
  8763  001880  5021               	movf	___flmul@bexp,w,c
  8764  001882  A4D8               	btfss	status,2,c
  8765  001884  D00A               	goto	l4408
  8766  001886                     u4880:
  8767  001886  FFFF               	dw	65535	; assembler added errata NOP
  8768  001888  0E00               	movlw	0
  8769  00188A  6E0F               	movwf	?___flmul,c
  8770  00188C  0E00               	movlw	0
  8771  00188E  6E10               	movwf	?___flmul+1,c
  8772  001890  0E00               	movlw	0
  8773  001892  6E11               	movwf	?___flmul+2,c
  8774  001894  0E00               	movlw	0
  8775  001896  6E12               	movwf	?___flmul+3,c
  8776  001898  D167               	goto	l1154
  8777  00189A                     l4408:
  8778  00189A  FFFF               	dw	65535	; assembler added errata NOP
  8779  00189C  5015               	movf	___flmul@a+2,w,c
  8780  00189E  020F               	mulwf	___flmul@b,c
  8781  0018A0  CFF3 F026          	movff	prodl,___flmul@temp
  8782  0018A4  CFF4 F027          	movff	prodh,___flmul@temp+1
  8783  0018A8  5026               	movf	___flmul@temp,w,c
  8784  0018AA  6E1C               	movwf	___flmul@grs,c
  8785  0018AC  6A1D               	clrf	___flmul@grs+1,c
  8786  0018AE  6A1E               	clrf	___flmul@grs+2,c
  8787  0018B0  6A1F               	clrf	___flmul@grs+3,c
  8788  0018B2  5027               	movf	___flmul@temp+1,w,c
  8789  0018B4  6E22               	movwf	___flmul@prod,c
  8790  0018B6  6A23               	clrf	___flmul@prod+1,c
  8791  0018B8  6A24               	clrf	___flmul@prod+2,c
  8792  0018BA  6A25               	clrf	___flmul@prod+3,c
  8793  0018BC  5014               	movf	___flmul@a+1,w,c
  8794  0018BE  0210               	mulwf	___flmul@b+1,c
  8795  0018C0  CFF3 F026          	movff	prodl,___flmul@temp
  8796  0018C4  CFF4 F027          	movff	prodh,___flmul@temp+1
  8797  0018C8  5026               	movf	___flmul@temp,w,c
  8798  0018CA  261C               	addwf	___flmul@grs,f,c
  8799  0018CC  0E00               	movlw	0
  8800  0018CE  221D               	addwfc	___flmul@grs+1,f,c
  8801  0018D0  221E               	addwfc	___flmul@grs+2,f,c
  8802  0018D2  221F               	addwfc	___flmul@grs+3,f,c
  8803  0018D4  5027               	movf	___flmul@temp+1,w,c
  8804  0018D6  2622               	addwf	___flmul@prod,f,c
  8805  0018D8  0E00               	movlw	0
  8806  0018DA  2223               	addwfc	___flmul@prod+1,f,c
  8807  0018DC  2224               	addwfc	___flmul@prod+2,f,c
  8808  0018DE  2225               	addwfc	___flmul@prod+3,f,c
  8809  0018E0  5013               	movf	___flmul@a,w,c
  8810  0018E2  0211               	mulwf	___flmul@b+2,c
  8811  0018E4  CFF3 F026          	movff	prodl,___flmul@temp
  8812  0018E8  CFF4 F027          	movff	prodh,___flmul@temp+1
  8813  0018EC  5026               	movf	___flmul@temp,w,c
  8814  0018EE  261C               	addwf	___flmul@grs,f,c
  8815  0018F0  0E00               	movlw	0
  8816  0018F2  221D               	addwfc	___flmul@grs+1,f,c
  8817  0018F4  221E               	addwfc	___flmul@grs+2,f,c
  8818  0018F6  221F               	addwfc	___flmul@grs+3,f,c
  8819  0018F8  5027               	movf	___flmul@temp+1,w,c
  8820  0018FA  2622               	addwf	___flmul@prod,f,c
  8821  0018FC  0E00               	movlw	0
  8822  0018FE  2223               	addwfc	___flmul@prod+1,f,c
  8823  001900  2224               	addwfc	___flmul@prod+2,f,c
  8824  001902  2225               	addwfc	___flmul@prod+3,f,c
  8825  001904  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8826  001908  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8827  00190C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8828  001910  6A1C               	clrf	___flmul@grs,c
  8829  001912  5013               	movf	___flmul@a,w,c
  8830  001914  0210               	mulwf	___flmul@b+1,c
  8831  001916  CFF3 F026          	movff	prodl,___flmul@temp
  8832  00191A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8833  00191E  5026               	movf	___flmul@temp,w,c
  8834  001920  261C               	addwf	___flmul@grs,f,c
  8835  001922  5027               	movf	___flmul@temp+1,w,c
  8836  001924  221D               	addwfc	___flmul@grs+1,f,c
  8837  001926  0E00               	movlw	0
  8838  001928  221E               	addwfc	___flmul@grs+2,f,c
  8839  00192A  0E00               	movlw	0
  8840  00192C  221F               	addwfc	___flmul@grs+3,f,c
  8841  00192E  5014               	movf	___flmul@a+1,w,c
  8842  001930  020F               	mulwf	___flmul@b,c
  8843  001932  CFF3 F026          	movff	prodl,___flmul@temp
  8844  001936  CFF4 F027          	movff	prodh,___flmul@temp+1
  8845  00193A  5026               	movf	___flmul@temp,w,c
  8846  00193C  261C               	addwf	___flmul@grs,f,c
  8847  00193E  5027               	movf	___flmul@temp+1,w,c
  8848  001940  221D               	addwfc	___flmul@grs+1,f,c
  8849  001942  0E00               	movlw	0
  8850  001944  221E               	addwfc	___flmul@grs+2,f,c
  8851  001946  0E00               	movlw	0
  8852  001948  221F               	addwfc	___flmul@grs+3,f,c
  8853  00194A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8854  00194E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8855  001952  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8856  001956  6A1C               	clrf	___flmul@grs,c
  8857  001958  5013               	movf	___flmul@a,w,c
  8858  00195A  020F               	mulwf	___flmul@b,c
  8859  00195C  CFF3 F026          	movff	prodl,___flmul@temp
  8860  001960  CFF4 F027          	movff	prodh,___flmul@temp+1
  8861  001964  5026               	movf	___flmul@temp,w,c
  8862  001966  261C               	addwf	___flmul@grs,f,c
  8863  001968  5027               	movf	___flmul@temp+1,w,c
  8864  00196A  221D               	addwfc	___flmul@grs+1,f,c
  8865  00196C  0E00               	movlw	0
  8866  00196E  221E               	addwfc	___flmul@grs+2,f,c
  8867  001970  0E00               	movlw	0
  8868  001972  221F               	addwfc	___flmul@grs+3,f,c
  8869  001974  5015               	movf	___flmul@a+2,w,c
  8870  001976  0210               	mulwf	___flmul@b+1,c
  8871  001978  CFF3 F026          	movff	prodl,___flmul@temp
  8872  00197C  CFF4 F027          	movff	prodh,___flmul@temp+1
  8873  001980  5026               	movf	___flmul@temp,w,c
  8874  001982  2622               	addwf	___flmul@prod,f,c
  8875  001984  5027               	movf	___flmul@temp+1,w,c
  8876  001986  2223               	addwfc	___flmul@prod+1,f,c
  8877  001988  0E00               	movlw	0
  8878  00198A  2224               	addwfc	___flmul@prod+2,f,c
  8879  00198C  0E00               	movlw	0
  8880  00198E  2225               	addwfc	___flmul@prod+3,f,c
  8881  001990  5014               	movf	___flmul@a+1,w,c
  8882  001992  0211               	mulwf	___flmul@b+2,c
  8883  001994  CFF3 F026          	movff	prodl,___flmul@temp
  8884  001998  CFF4 F027          	movff	prodh,___flmul@temp+1
  8885  00199C  5026               	movf	___flmul@temp,w,c
  8886  00199E  2622               	addwf	___flmul@prod,f,c
  8887  0019A0  5027               	movf	___flmul@temp+1,w,c
  8888  0019A2  2223               	addwfc	___flmul@prod+1,f,c
  8889  0019A4  0E00               	movlw	0
  8890  0019A6  2224               	addwfc	___flmul@prod+2,f,c
  8891  0019A8  0E00               	movlw	0
  8892  0019AA  2225               	addwfc	___flmul@prod+3,f,c
  8893  0019AC  5015               	movf	___flmul@a+2,w,c
  8894  0019AE  0211               	mulwf	___flmul@b+2,c
  8895  0019B0  CFF3 F026          	movff	prodl,___flmul@temp
  8896  0019B4  CFF4 F027          	movff	prodh,___flmul@temp+1
  8897  0019B8  5026               	movf	___flmul@temp,w,c
  8898  0019BA  6E17               	movwf	??___flmul& (0+255),c
  8899  0019BC  5027               	movf	___flmul@temp+1,w,c
  8900  0019BE  6E18               	movwf	(??___flmul+1)& (0+255),c
  8901  0019C0  6A19               	clrf	(??___flmul+2)& (0+255),c
  8902  0019C2  6A1A               	clrf	(??___flmul+3)& (0+255),c
  8903  0019C4  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8904  0019C8  C018  F019         	movff	??___flmul+1,??___flmul+2
  8905  0019CC  C017  F018         	movff	??___flmul,??___flmul+1
  8906  0019D0  6A17               	clrf	??___flmul,c
  8907  0019D2  5017               	movf	??___flmul,w,c
  8908  0019D4  2622               	addwf	___flmul@prod,f,c
  8909  0019D6  5018               	movf	??___flmul+1,w,c
  8910  0019D8  2223               	addwfc	___flmul@prod+1,f,c
  8911  0019DA  5019               	movf	??___flmul+2,w,c
  8912  0019DC  2224               	addwfc	___flmul@prod+2,f,c
  8913  0019DE  501A               	movf	??___flmul+3,w,c
  8914  0019E0  2225               	addwfc	___flmul@prod+3,f,c
  8915  0019E2  C01C  F017         	movff	___flmul@grs,??___flmul
  8916  0019E6  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  8917  0019EA  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  8918  0019EE  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  8919  0019F2  0E19               	movlw	25
  8920  0019F4  D006               	goto	u4890
  8921  0019F6                     u4895:
  8922  0019F6  FFFF               	dw	65535	; assembler added errata NOP
  8923  0019F8  90D8               	bcf	status,0,c
  8924  0019FA  321A               	rrcf	??___flmul+3,f,c
  8925  0019FC  3219               	rrcf	??___flmul+2,f,c
  8926  0019FE  3218               	rrcf	??___flmul+1,f,c
  8927  001A00  3217               	rrcf	??___flmul,f,c
  8928  001A02                     u4890:
  8929  001A02  FFFF               	dw	65535	; assembler added errata NOP
  8930  001A04  2EE8               	decfsz	wreg,f,c
  8931  001A06  D7F7               	goto	u4895
  8932  001A08  5017               	movf	??___flmul,w,c
  8933  001A0A  2622               	addwf	___flmul@prod,f,c
  8934  001A0C  5018               	movf	??___flmul+1,w,c
  8935  001A0E  2223               	addwfc	___flmul@prod+1,f,c
  8936  001A10  5019               	movf	??___flmul+2,w,c
  8937  001A12  2224               	addwfc	___flmul@prod+2,f,c
  8938  001A14  501A               	movf	??___flmul+3,w,c
  8939  001A16  2225               	addwfc	___flmul@prod+3,f,c
  8940  001A18  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8941  001A1C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8942  001A20  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8943  001A24  6A1C               	clrf	___flmul@grs,c
  8944  001A26  5020               	movf	___flmul@aexp,w,c
  8945  001A28  C021  F017         	movff	___flmul@bexp,??___flmul
  8946  001A2C  6A18               	clrf	(??___flmul+1)& (0+255),c
  8947  001A2E  2617               	addwf	??___flmul,f,c
  8948  001A30  0E00               	movlw	0
  8949  001A32  2218               	addwfc	??___flmul+1,f,c
  8950  001A34  0E82               	movlw	130
  8951  001A36  2417               	addwf	??___flmul,w,c
  8952  001A38  6E26               	movwf	___flmul@temp,c
  8953  001A3A  0EFF               	movlw	255
  8954  001A3C  2018               	addwfc	??___flmul+1,w,c
  8955  001A3E  6E27               	movwf	___flmul@temp+1,c
  8956  001A40  D010               	goto	l4456
  8957  001A42                     l4450:
  8958  001A42  FFFF               	dw	65535	; assembler added errata NOP
  8959  001A44  90D8               	bcf	status,0,c
  8960  001A46  3622               	rlcf	___flmul@prod,f,c
  8961  001A48  3623               	rlcf	___flmul@prod+1,f,c
  8962  001A4A  3624               	rlcf	___flmul@prod+2,f,c
  8963  001A4C  3625               	rlcf	___flmul@prod+3,f,c
  8964  001A4E  BE1F               	btfsc	___flmul@grs+3,7,c
  8965  001A50  8022               	bsf	___flmul@prod,0,c
  8966  001A52  90D8               	bcf	status,0,c
  8967  001A54  361C               	rlcf	___flmul@grs,f,c
  8968  001A56  361D               	rlcf	___flmul@grs+1,f,c
  8969  001A58  361E               	rlcf	___flmul@grs+2,f,c
  8970  001A5A  361F               	rlcf	___flmul@grs+3,f,c
  8971  001A5C  0626               	decf	___flmul@temp,f,c
  8972  001A5E  A0D8               	btfss	status,0,c
  8973  001A60  0627               	decf	___flmul@temp+1,f,c
  8974  001A62                     l4456:
  8975  001A62  FFFF               	dw	65535	; assembler added errata NOP
  8976  001A64  AE24               	btfss	___flmul@prod+2,7,c
  8977  001A66  D7ED               	goto	l4450
  8978  001A68  0E00               	movlw	0
  8979  001A6A  6E20               	movwf	___flmul@aexp,c
  8980  001A6C  AE1F               	btfss	___flmul@grs+3,7,c
  8981  001A6E  D019               	goto	l1159
  8982  001A70  0EFF               	movlw	255
  8983  001A72  141C               	andwf	___flmul@grs,w,c
  8984  001A74  6E17               	movwf	??___flmul& (0+255),c
  8985  001A76  0EFF               	movlw	255
  8986  001A78  141D               	andwf	___flmul@grs+1,w,c
  8987  001A7A  6E18               	movwf	(??___flmul+1)& (0+255),c
  8988  001A7C  0EFF               	movlw	255
  8989  001A7E  141E               	andwf	___flmul@grs+2,w,c
  8990  001A80  6E19               	movwf	(??___flmul+2)& (0+255),c
  8991  001A82  0E7F               	movlw	127
  8992  001A84  141F               	andwf	___flmul@grs+3,w,c
  8993  001A86  6E1A               	movwf	(??___flmul+3)& (0+255),c
  8994  001A88  5017               	movf	??___flmul,w,c
  8995  001A8A  1018               	iorwf	??___flmul+1,w,c
  8996  001A8C  1019               	iorwf	??___flmul+2,w,c
  8997  001A8E  101A               	iorwf	??___flmul+3,w,c
  8998  001A90  B4D8               	btfsc	status,2,c
  8999  001A92  D004               	goto	l1160
  9000  001A94                     u4930:
  9001  001A94  FFFF               	dw	65535	; assembler added errata NOP
  9002  001A96  0E01               	movlw	1
  9003  001A98  6E20               	movwf	___flmul@aexp,c
  9004  001A9A  D003               	goto	l1159
  9005  001A9C                     l1160:
  9006  001A9C  FFFF               	dw	65535	; assembler added errata NOP
  9007  001A9E  B022               	btfsc	___flmul@prod,0,c
  9008  001AA0  D7F9               	goto	u4930
  9009  001AA2                     l1159:
  9010  001AA2  FFFF               	dw	65535	; assembler added errata NOP
  9011  001AA4  5020               	movf	___flmul@aexp,w,c
  9012  001AA6  B4D8               	btfsc	status,2,c
  9013  001AA8  D01F               	goto	l4476
  9014  001AAA  0E01               	movlw	1
  9015  001AAC  2622               	addwf	___flmul@prod,f,c
  9016  001AAE  0E00               	movlw	0
  9017  001AB0  2223               	addwfc	___flmul@prod+1,f,c
  9018  001AB2  2224               	addwfc	___flmul@prod+2,f,c
  9019  001AB4  2225               	addwfc	___flmul@prod+3,f,c
  9020  001AB6  A025               	btfss	___flmul@prod+3,0,c
  9021  001AB8  D017               	goto	l4476
  9022  001ABA  C022  F017         	movff	___flmul@prod,??___flmul
  9023  001ABE  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  9024  001AC2  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  9025  001AC6  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  9026  001ACA  341A               	rlcf	??___flmul+3,w,c
  9027  001ACC  321A               	rrcf	??___flmul+3,f,c
  9028  001ACE  3219               	rrcf	??___flmul+2,f,c
  9029  001AD0  3218               	rrcf	??___flmul+1,f,c
  9030  001AD2  3217               	rrcf	??___flmul,f,c
  9031  001AD4  C017  F022         	movff	??___flmul,___flmul@prod
  9032  001AD8  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  9033  001ADC  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  9034  001AE0  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  9035  001AE4  4A26               	infsnz	___flmul@temp,f,c
  9036  001AE6  2A27               	incf	___flmul@temp+1,f,c
  9037  001AE8                     l4476:
  9038  001AE8  FFFF               	dw	65535	; assembler added errata NOP
  9039  001AEA  BE27               	btfsc	___flmul@temp+1,7,c
  9040  001AEC  D00D               	goto	l4480
  9041  001AEE  5027               	movf	___flmul@temp+1,w,c
  9042  001AF0  E103               	bnz	u4970
  9043  001AF2  2826               	incf	___flmul@temp,w,c
  9044  001AF4  A0D8               	btfss	status,0,c
  9045  001AF6  D008               	goto	l4480
  9046  001AF8                     u4970:
  9047  001AF8  0E00               	movlw	0
  9048  001AFA  6E22               	movwf	___flmul@prod,c
  9049  001AFC  0E00               	movlw	0
  9050  001AFE  6E23               	movwf	___flmul@prod+1,c
  9051  001B00  0E80               	movlw	128
  9052  001B02  6E24               	movwf	___flmul@prod+2,c
  9053  001B04  0E7F               	movlw	127
  9054  001B06  D023               	goto	L24
  9055  001B08                     l4480:
  9056  001B08  FFFF               	dw	65535	; assembler added errata NOP
  9057  001B0A  BE27               	btfsc	___flmul@temp+1,7,c
  9058  001B0C  D005               	goto	u4980
  9059  001B0E  5027               	movf	___flmul@temp+1,w,c
  9060  001B10  E10F               	bnz	l1167
  9061  001B12  0426               	decf	___flmul@temp,w,c
  9062  001B14  B0D8               	btfsc	status,0,c
  9063  001B16  D00C               	goto	l1167
  9064  001B18                     u4980:
  9065  001B18  FFFF               	dw	65535	; assembler added errata NOP
  9066  001B1A  0E00               	movlw	0
  9067  001B1C  6E22               	movwf	___flmul@prod,c
  9068  001B1E  0E00               	movlw	0
  9069  001B20  6E23               	movwf	___flmul@prod+1,c
  9070  001B22  0E00               	movlw	0
  9071  001B24  6E24               	movwf	___flmul@prod+2,c
  9072  001B26  0E00               	movlw	0
  9073  001B28  6E25               	movwf	___flmul@prod+3,c
  9074  001B2A  0E00               	movlw	0
  9075  001B2C  6E1B               	movwf	___flmul@sign,c
  9076  001B2E  D011               	goto	l4492
  9077  001B30                     l1167:
  9078  001B30  FFFF               	dw	65535	; assembler added errata NOP
  9079  001B32  C026  F021         	movff	___flmul@temp,___flmul@bexp
  9080  001B36  0EFF               	movlw	255
  9081  001B38  1622               	andwf	___flmul@prod,f,c
  9082  001B3A  0EFF               	movlw	255
  9083  001B3C  1623               	andwf	___flmul@prod+1,f,c
  9084  001B3E  0E7F               	movlw	127
  9085  001B40  1624               	andwf	___flmul@prod+2,f,c
  9086  001B42  0E00               	movlw	0
  9087  001B44  1625               	andwf	___flmul@prod+3,f,c
  9088  001B46  B021               	btfsc	___flmul@bexp,0,c
  9089  001B48  8E24               	bsf	___flmul@prod+2,7,c
  9090  001B4A  90D8               	bcf	status,0,c
  9091  001B4C  3021               	rrcf	___flmul@bexp,w,c
  9092  001B4E                     L24:
  9093  001B4E  FFFF               	dw	65535	; assembler added errata NOP
  9094  001B50  6E25               	movwf	___flmul@prod+3,c
  9095  001B52                     l4492:
  9096  001B52  FFFF               	dw	65535	; assembler added errata NOP
  9097  001B54  501B               	movf	___flmul@sign,w,c
  9098  001B56  1225               	iorwf	___flmul@prod+3,f,c
  9099  001B58  C022  F00F         	movff	___flmul@prod,?___flmul
  9100  001B5C  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  9101  001B60  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  9102  001B64  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  9103  001B68                     l1154:
  9104  001B68  FFFF               	dw	65535	; assembler added errata NOP
  9105  001B6A  0012               	return		;funcret
  9106  001B6C  FFFF               	dw	65535	; errata NOP
  9107  001B6E                     __end_of___flmul:
  9108                           	opt callstack 0
  9109                           
  9110 ;; *************** function _ADC_Read *****************
  9111 ;; Defined at:
  9112 ;;		line 28 in file "adc.c"
  9113 ;; Parameters:    Size  Location     Type
  9114 ;;  channel         1    wreg     unsigned char 
  9115 ;; Auto vars:     Size  Location     Type
  9116 ;;  channel         1    4[COMRAM] unsigned char 
  9117 ;; Return value:  Size  Location     Type
  9118 ;;                  2    0[COMRAM] unsigned int 
  9119 ;; Registers used:
  9120 ;;		wreg, status,2, status,0
  9121 ;; Tracked objects:
  9122 ;;		On entry : 0/0
  9123 ;;		On exit  : 0/0
  9124 ;;		Unchanged: 0/0
  9125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9126 ;;      Params:         2       0       0       0       0       0       0
  9127 ;;      Locals:         1       0       0       0       0       0       0
  9128 ;;      Temps:          2       0       0       0       0       0       0
  9129 ;;      Totals:         5       0       0       0       0       0       0
  9130 ;;Total ram usage:        5 bytes
  9131 ;; Hardware stack levels used:    1
  9132 ;; Hardware stack levels required when called:    2
  9133 ;; This function calls:
  9134 ;;		Nothing
  9135 ;; This function is called by:
  9136 ;;		_get_temp
  9137 ;; This function uses a non-reentrant model
  9138 ;;
  9139                           
  9140                           	psect	text41
  9141  00353E                     __ptext41:
  9142                           	opt callstack 0
  9143  00353E                     _ADC_Read:
  9144                           	opt callstack 0
  9145  00353E  FFFF               	dw	65535	; assembler added errata NOP
  9146                           
  9147                           ;incstack = 0
  9148                           ;ADC_Read@channel stored from wreg
  9149  003540  6E05               	movwf	ADC_Read@channel,c
  9150                           
  9151                           ;adc.c: 29:  if(channel > 7)
  9152  003542  0E07               	movlw	7
  9153  003544  6405               	cpfsgt	ADC_Read@channel,c
  9154  003546  D005               	goto	l4358
  9155                           
  9156                           ;adc.c: 30:  return 0;
  9157  003548  0E00               	movlw	0
  9158  00354A  6E02               	movwf	?_ADC_Read+1,c
  9159  00354C  0E00               	movlw	0
  9160  00354E  6E01               	movwf	?_ADC_Read,c
  9161  003550  D01D               	goto	l278
  9162  003552                     l4358:
  9163  003552  FFFF               	dw	65535	; assembler added errata NOP
  9164                           
  9165                           ;adc.c: 31:  ADCON0 &= 0xC5;
  9166  003554  0EC5               	movlw	197
  9167  003556  16C2               	andwf	4034,f,c	;volatile
  9168                           
  9169                           ;adc.c: 32:  ADCON0 |= channel<<3;
  9170  003558  3805               	swapf	ADC_Read@channel,w,c	;volatile
  9171  00355A  42E8               	rrncf	wreg,f,c
  9172  00355C  0BF8               	andlw	248
  9173  00355E  12C2               	iorwf	4034,f,c	;volatile
  9174                           
  9175                           ;adc.c: 33:  _delay((unsigned long)((2)*(16000000/4000.0)));
  9176  003560  0E08               	movlw	8
  9177  003562  6E03               	movwf	??_ADC_Read& (0+255),c
  9178  003564  0ECB               	movlw	203
  9179  003566                     u5317:
  9180  003566  FFFF               	dw	65535	; errata NOP
  9181  003568  2EE8               	decfsz	wreg,f,c
  9182  00356A  D7FD               	bra	u5317
  9183  00356C  2E03               	decfsz	??_ADC_Read& (0+255),f,c
  9184  00356E  D7FB               	bra	u5317
  9185  003570  D000               	nop2	
  9186                           
  9187                           ;adc.c: 34:  GO_nDONE = 1;
  9188  003572  84C2               	bsf	4034,2,c	;volatile
  9189  003574                     l279:
  9190  003574  FFFF               	dw	65535	; assembler added errata NOP
  9191  003576  B4C2               	btfsc	4034,2,c	;volatile
  9192  003578  D7FD               	goto	l279
  9193                           
  9194                           ;adc.c: 36:  return ((ADRESH<<8)+ADRESL);
  9195  00357A  50C4               	movf	4036,w,c	;volatile
  9196  00357C  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  9197  00357E  6A03               	clrf	??_ADC_Read& (0+255),c
  9198  003580  50C3               	movf	4035,w,c	;volatile
  9199  003582  2403               	addwf	??_ADC_Read,w,c
  9200  003584  6E01               	movwf	?_ADC_Read,c
  9201  003586  0E00               	movlw	0
  9202  003588  2004               	addwfc	??_ADC_Read+1,w,c
  9203  00358A  6E02               	movwf	?_ADC_Read+1,c
  9204  00358C                     l278:
  9205  00358C  FFFF               	dw	65535	; assembler added errata NOP
  9206  00358E  0012               	return		;funcret
  9207  003590  FFFF               	dw	65535	; errata NOP
  9208  003592                     __end_of_ADC_Read:
  9209                           	opt callstack 0
  9210                           
  9211 ;; *************** function _ADC_Init *****************
  9212 ;; Defined at:
  9213 ;;		line 23 in file "adc.c"
  9214 ;; Parameters:    Size  Location     Type
  9215 ;;		None
  9216 ;; Auto vars:     Size  Location     Type
  9217 ;;		None
  9218 ;; Return value:  Size  Location     Type
  9219 ;;                  1    wreg      void 
  9220 ;; Registers used:
  9221 ;;		wreg, status,2
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9227 ;;      Params:         0       0       0       0       0       0       0
  9228 ;;      Locals:         0       0       0       0       0       0       0
  9229 ;;      Temps:          0       0       0       0       0       0       0
  9230 ;;      Totals:         0       0       0       0       0       0       0
  9231 ;;Total ram usage:        0 bytes
  9232 ;; Hardware stack levels used:    1
  9233 ;; Hardware stack levels required when called:    2
  9234 ;; This function calls:
  9235 ;;		Nothing
  9236 ;; This function is called by:
  9237 ;;		_get_temp
  9238 ;; This function uses a non-reentrant model
  9239 ;;
  9240                           
  9241                           	psect	text42
  9242  00397C                     __ptext42:
  9243                           	opt callstack 0
  9244  00397C                     _ADC_Init:
  9245                           	opt callstack 0
  9246  00397C  FFFF               	dw	65535	; assembler added errata NOP
  9247                           
  9248                           ;adc.c: 24:  ADCON0 = 0x81;
  9249                           
  9250                           ;incstack = 0
  9251  00397E  0E81               	movlw	129
  9252  003980  6EC2               	movwf	4034,c	;volatile
  9253                           
  9254                           ;adc.c: 25:  ADCON1 = 0x80;
  9255  003982  0E80               	movlw	128
  9256  003984  6EC1               	movwf	4033,c	;volatile
  9257  003986  0012               	return		;funcret
  9258  003988  FFFF               	dw	65535	; errata NOP
  9259  00398A                     __end_of_ADC_Init:
  9260                           	opt callstack 0
  9261                           
  9262 ;; *************** function ___fltol *****************
  9263 ;; Defined at:
  9264 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;  f1              4   61[COMRAM] void 
  9267 ;; Auto vars:     Size  Location     Type
  9268 ;;  exp1            1   70[COMRAM] unsigned char 
  9269 ;;  sign1           1   69[COMRAM] unsigned char 
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  4   61[COMRAM] long 
  9272 ;; Registers used:
  9273 ;;		wreg, status,2, status,0
  9274 ;; Tracked objects:
  9275 ;;		On entry : 0/0
  9276 ;;		On exit  : 0/0
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9279 ;;      Params:         4       0       0       0       0       0       0
  9280 ;;      Locals:         2       0       0       0       0       0       0
  9281 ;;      Temps:          4       0       0       0       0       0       0
  9282 ;;      Totals:        10       0       0       0       0       0       0
  9283 ;;Total ram usage:       10 bytes
  9284 ;; Hardware stack levels used:    1
  9285 ;; Hardware stack levels required when called:    2
  9286 ;; This function calls:
  9287 ;;		Nothing
  9288 ;; This function is called by:
  9289 ;;		_main
  9290 ;; This function uses a non-reentrant model
  9291 ;;
  9292                           
  9293                           	psect	text43
  9294  002E46                     __ptext43:
  9295                           	opt callstack 0
  9296  002E46                     ___fltol:
  9297                           	opt callstack 0
  9298  002E46  FFFF               	dw	65535	; assembler added errata NOP
  9299                           
  9300                           ;incstack = 0
  9301  002E48  3440               	rlcf	___fltol@f1+2,w,c
  9302  002E4A  3441               	rlcf	___fltol@f1+3,w,c
  9303  002E4C  6E47               	movwf	___fltol@exp1,c
  9304  002E4E  5047               	movf	___fltol@exp1,w,c
  9305  002E50  A4D8               	btfss	status,2,c
  9306  002E52  D00A               	goto	l4672
  9307  002E54                     u5110:
  9308  002E54  FFFF               	dw	65535	; assembler added errata NOP
  9309  002E56  0E00               	movlw	0
  9310  002E58  6E3E               	movwf	?___fltol,c
  9311  002E5A  0E00               	movlw	0
  9312  002E5C  6E3F               	movwf	?___fltol+1,c
  9313  002E5E  0E00               	movlw	0
  9314  002E60  6E40               	movwf	?___fltol+2,c
  9315  002E62  0E00               	movlw	0
  9316  002E64  6E41               	movwf	?___fltol+3,c
  9317  002E66  D056               	goto	l833
  9318  002E68                     l4672:
  9319  002E68  FFFF               	dw	65535	; assembler added errata NOP
  9320  002E6A  C03E  F042         	movff	___fltol@f1,??___fltol
  9321  002E6E  C03F  F043         	movff	___fltol@f1+1,??___fltol+1
  9322  002E72  C040  F044         	movff	___fltol@f1+2,??___fltol+2
  9323  002E76  C041  F045         	movff	___fltol@f1+3,??___fltol+3
  9324  002E7A  0E20               	movlw	32
  9325  002E7C  D006               	goto	u5120
  9326  002E7E                     u5125:
  9327  002E7E  FFFF               	dw	65535	; assembler added errata NOP
  9328  002E80  90D8               	bcf	status,0,c
  9329  002E82  3245               	rrcf	??___fltol+3,f,c
  9330  002E84  3244               	rrcf	??___fltol+2,f,c
  9331  002E86  3243               	rrcf	??___fltol+1,f,c
  9332  002E88  3242               	rrcf	??___fltol,f,c
  9333  002E8A                     u5120:
  9334  002E8A  FFFF               	dw	65535	; assembler added errata NOP
  9335  002E8C  2EE8               	decfsz	wreg,f,c
  9336  002E8E  D7F7               	goto	u5125
  9337  002E90  5042               	movf	??___fltol,w,c
  9338  002E92  6E46               	movwf	___fltol@sign1,c
  9339  002E94  8E40               	bsf	___fltol@f1+2,7,c
  9340  002E96  0EFF               	movlw	255
  9341  002E98  163E               	andwf	___fltol@f1,f,c
  9342  002E9A  0EFF               	movlw	255
  9343  002E9C  163F               	andwf	___fltol@f1+1,f,c
  9344  002E9E  0EFF               	movlw	255
  9345  002EA0  1640               	andwf	___fltol@f1+2,f,c
  9346  002EA2  0E00               	movlw	0
  9347  002EA4  1641               	andwf	___fltol@f1+3,f,c
  9348  002EA6  0E96               	movlw	150
  9349  002EA8  5E47               	subwf	___fltol@exp1,f,c
  9350  002EAA  AE47               	btfss	___fltol@exp1,7,c
  9351  002EAC  D00E               	goto	l4692
  9352  002EAE  5047               	movf	___fltol@exp1,w,c
  9353  002EB0  0A80               	xorlw	128
  9354  002EB2  0F97               	addlw	151
  9355  002EB4  A0D8               	btfss	status,0,c
  9356  002EB6  D7CE               	goto	u5110
  9357  002EB8                     l4688:
  9358  002EB8  FFFF               	dw	65535	; assembler added errata NOP
  9359  002EBA  90D8               	bcf	status,0,c
  9360  002EBC  3241               	rrcf	___fltol@f1+3,f,c
  9361  002EBE  3240               	rrcf	___fltol@f1+2,f,c
  9362  002EC0  323F               	rrcf	___fltol@f1+1,f,c
  9363  002EC2  323E               	rrcf	___fltol@f1,f,c
  9364  002EC4  3E47               	incfsz	___fltol@exp1,f,c
  9365  002EC6  D7F8               	goto	l4688
  9366  002EC8  D010               	goto	u5160
  9367  002ECA                     l4692:
  9368  002ECA  FFFF               	dw	65535	; assembler added errata NOP
  9369  002ECC  0E1F               	movlw	31
  9370  002ECE  6447               	cpfsgt	___fltol@exp1,c
  9371  002ED0  D008               	goto	l4700
  9372  002ED2  D7C0               	goto	u5110
  9373  002ED4                     l4698:
  9374  002ED4  FFFF               	dw	65535	; assembler added errata NOP
  9375  002ED6  90D8               	bcf	status,0,c
  9376  002ED8  363E               	rlcf	___fltol@f1,f,c
  9377  002EDA  363F               	rlcf	___fltol@f1+1,f,c
  9378  002EDC  3640               	rlcf	___fltol@f1+2,f,c
  9379  002EDE  3641               	rlcf	___fltol@f1+3,f,c
  9380  002EE0  0647               	decf	___fltol@exp1,f,c
  9381  002EE2                     l4700:
  9382  002EE2  FFFF               	dw	65535	; assembler added errata NOP
  9383  002EE4  5047               	movf	___fltol@exp1,w,c
  9384  002EE6  A4D8               	btfss	status,2,c
  9385  002EE8  D7F5               	goto	l4698
  9386  002EEA                     u5160:
  9387  002EEA  FFFF               	dw	65535	; assembler added errata NOP
  9388  002EEC  5046               	movf	___fltol@sign1,w,c
  9389  002EEE  B4D8               	btfsc	status,2,c
  9390  002EF0  D008               	goto	l4706
  9391  002EF2  1E41               	comf	___fltol@f1+3,f,c
  9392  002EF4  1E40               	comf	___fltol@f1+2,f,c
  9393  002EF6  1E3F               	comf	___fltol@f1+1,f,c
  9394  002EF8  6C3E               	negf	___fltol@f1,c
  9395  002EFA  0E00               	movlw	0
  9396  002EFC  223F               	addwfc	___fltol@f1+1,f,c
  9397  002EFE  2240               	addwfc	___fltol@f1+2,f,c
  9398  002F00  2241               	addwfc	___fltol@f1+3,f,c
  9399  002F02                     l4706:
  9400  002F02  FFFF               	dw	65535	; assembler added errata NOP
  9401  002F04  C03E  F03E         	movff	___fltol@f1,?___fltol
  9402  002F08  C03F  F03F         	movff	___fltol@f1+1,?___fltol+1
  9403  002F0C  C040  F040         	movff	___fltol@f1+2,?___fltol+2
  9404  002F10  C041  F041         	movff	___fltol@f1+3,?___fltol+3
  9405  002F14                     l833:
  9406  002F14  FFFF               	dw	65535	; assembler added errata NOP
  9407  002F16  0012               	return		;funcret
  9408  002F18  FFFF               	dw	65535	; errata NOP
  9409  002F1A                     __end_of___fltol:
  9410                           	opt callstack 0
  9411                           
  9412 ;; *************** function _UARTSendString *****************
  9413 ;; Defined at:
  9414 ;;		line 65 in file "serial.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  c               2   32[BANK0 ] PTR unsigned char 
  9417 ;;		 -> int_to_char@result(10), 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;  i               2   34[BANK0 ] int 
  9420 ;; Return value:  Size  Location     Type
  9421 ;;                  1    wreg      void 
  9422 ;; Registers used:
  9423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9424 ;; Tracked objects:
  9425 ;;		On entry : 0/0
  9426 ;;		On exit  : 0/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9429 ;;      Params:         0       2       0       0       0       0       0
  9430 ;;      Locals:         0       2       0       0       0       0       0
  9431 ;;      Temps:          0       0       0       0       0       0       0
  9432 ;;      Totals:         0       4       0       0       0       0       0
  9433 ;;Total ram usage:        4 bytes
  9434 ;; Hardware stack levels used:    1
  9435 ;; Hardware stack levels required when called:    3
  9436 ;; This function calls:
  9437 ;;		_UARTSendChar
  9438 ;; This function is called by:
  9439 ;;		_main
  9440 ;;		_read_op
  9441 ;; This function uses a non-reentrant model
  9442 ;;
  9443                           
  9444                           	psect	text44
  9445  0036B6                     __ptext44:
  9446                           	opt callstack 0
  9447  0036B6                     _UARTSendString:
  9448                           	opt callstack 0
  9449  0036B6  FFFF               	dw	65535	; assembler added errata NOP
  9450                           
  9451                           ;serial.c: 66:   TRISCbits.TRISC7 = 0;
  9452                           
  9453                           ;incstack = 0
  9454  0036B8  9E94               	bcf	3988,7,c	;volatile
  9455                           
  9456                           ;serial.c: 67:   int i = 0;
  9457  0036BA  0E00               	movlw	0
  9458  0036BC  0100               	movlb	0	; () banked
  9459  0036BE  6FDA               	movwf	(UARTSendString@i+1)& (0+255),b
  9460  0036C0  0E00               	movlw	0
  9461  0036C2  6FD9               	movwf	UARTSendString@i& (0+255),b
  9462                           
  9463                           ;serial.c: 68:   while (c[i] != '\0') {
  9464  0036C4  D00D               	goto	l4588
  9465  0036C6                     l4584:
  9466  0036C6  FFFF               	dw	65535	; assembler added errata NOP
  9467                           
  9468                           ; BSR set to: 0
  9469                           ;serial.c: 69:     UARTSendChar(c[i]);
  9470  0036C8  51D9               	movf	UARTSendString@i& (0+255),w,b
  9471  0036CA  25D7               	addwf	UARTSendString@c& (0+255),w,b
  9472  0036CC  6ED9               	movwf	fsr2l,c
  9473  0036CE  51DA               	movf	(UARTSendString@i+1)& (0+255),w,b
  9474  0036D0  21D8               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  9475  0036D2  6EDA               	movwf	fsr2h,c
  9476  0036D4  50DF               	movf	indf2,w,c
  9477  0036D6  ECAB  F01C         	call	_UARTSendChar
  9478                           
  9479                           ;serial.c: 70:     i++;
  9480  0036DA  0100               	movlb	0	; () banked
  9481  0036DC  4BD9               	infsnz	UARTSendString@i& (0+255),f,b
  9482  0036DE  2BDA               	incf	(UARTSendString@i+1)& (0+255),f,b
  9483  0036E0                     l4588:
  9484  0036E0  FFFF               	dw	65535	; assembler added errata NOP
  9485                           
  9486                           ; BSR set to: 0
  9487                           ;serial.c: 68:   while (c[i] != '\0') {
  9488  0036E2  51D9               	movf	UARTSendString@i& (0+255),w,b
  9489  0036E4  25D7               	addwf	UARTSendString@c& (0+255),w,b
  9490  0036E6  6ED9               	movwf	fsr2l,c
  9491  0036E8  51DA               	movf	(UARTSendString@i+1)& (0+255),w,b
  9492  0036EA  21D8               	addwfc	(UARTSendString@c+1)& (0+255),w,b
  9493  0036EC  6EDA               	movwf	fsr2h,c
  9494  0036EE  50DF               	movf	indf2,w,c
  9495  0036F0  B4D8               	btfsc	status,2,c
  9496                           
  9497                           ; BSR set to: 0
  9498  0036F2  0012               	return		;funcret
  9499  0036F4  FFFF               	dw	65535	; assembler added errata NOP
  9500  0036F6  D7E7               	goto	l4584
  9501  0036F8  FFFF               	dw	65535	; errata NOP
  9502  0036FA                     __end_of_UARTSendString:
  9503                           	opt callstack 0
  9504                           
  9505 ;; *************** function _UARTNewLine *****************
  9506 ;; Defined at:
  9507 ;;		line 41 in file "serial.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;		None
  9510 ;; Auto vars:     Size  Location     Type
  9511 ;;		None
  9512 ;; Return value:  Size  Location     Type
  9513 ;;                  1    wreg      void 
  9514 ;; Registers used:
  9515 ;;		wreg, cstack
  9516 ;; Tracked objects:
  9517 ;;		On entry : 0/0
  9518 ;;		On exit  : 0/0
  9519 ;;		Unchanged: 0/0
  9520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9521 ;;      Params:         0       0       0       0       0       0       0
  9522 ;;      Locals:         0       0       0       0       0       0       0
  9523 ;;      Temps:          0       0       0       0       0       0       0
  9524 ;;      Totals:         0       0       0       0       0       0       0
  9525 ;;Total ram usage:        0 bytes
  9526 ;; Hardware stack levels used:    1
  9527 ;; Hardware stack levels required when called:    3
  9528 ;; This function calls:
  9529 ;;		_UARTSendChar
  9530 ;; This function is called by:
  9531 ;;		_main
  9532 ;;		_read_op
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           	psect	text45
  9537  003942                     __ptext45:
  9538                           	opt callstack 0
  9539  003942                     _UARTNewLine:
  9540                           	opt callstack 0
  9541  003942  FFFF               	dw	65535	; assembler added errata NOP
  9542                           
  9543                           ;serial.c: 42:   TRISCbits.TRISC7 = 0;
  9544                           
  9545                           ; BSR set to: 0
  9546                           ;incstack = 0
  9547  003944  9E94               	bcf	3988,7,c	;volatile
  9548                           
  9549                           ;serial.c: 43:   UARTSendChar(0x0a);
  9550  003946  0E0A               	movlw	10
  9551  003948  ECAB  F01C         	call	_UARTSendChar
  9552                           
  9553                           ;serial.c: 44:   UARTSendChar(0x0d);
  9554  00394C  0E0D               	movlw	13
  9555  00394E  ECAB  F01C         	call	_UARTSendChar
  9556  003952  0012               	return		;funcret
  9557  003954  FFFF               	dw	65535	; errata NOP
  9558  003956                     __end_of_UARTNewLine:
  9559                           	opt callstack 0
  9560                           
  9561 ;; *************** function _UARTSendChar *****************
  9562 ;; Defined at:
  9563 ;;		line 47 in file "serial.c"
  9564 ;; Parameters:    Size  Location     Type
  9565 ;;  c               1    wreg     unsigned char 
  9566 ;; Auto vars:     Size  Location     Type
  9567 ;;  c               1    0[COMRAM] unsigned char 
  9568 ;; Return value:  Size  Location     Type
  9569 ;;                  1    wreg      void 
  9570 ;; Registers used:
  9571 ;;		wreg
  9572 ;; Tracked objects:
  9573 ;;		On entry : 0/0
  9574 ;;		On exit  : 0/0
  9575 ;;		Unchanged: 0/0
  9576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9577 ;;      Params:         0       0       0       0       0       0       0
  9578 ;;      Locals:         1       0       0       0       0       0       0
  9579 ;;      Temps:          0       0       0       0       0       0       0
  9580 ;;      Totals:         1       0       0       0       0       0       0
  9581 ;;Total ram usage:        1 bytes
  9582 ;; Hardware stack levels used:    1
  9583 ;; Hardware stack levels required when called:    2
  9584 ;; This function calls:
  9585 ;;		Nothing
  9586 ;; This function is called by:
  9587 ;;		_UARTNewLine
  9588 ;;		_UARTSendString
  9589 ;; This function uses a non-reentrant model
  9590 ;;
  9591                           
  9592                           	psect	text46
  9593  003956                     __ptext46:
  9594                           	opt callstack 0
  9595  003956                     _UARTSendChar:
  9596                           	opt callstack 0
  9597  003956  FFFF               	dw	65535	; assembler added errata NOP
  9598                           
  9599                           ;incstack = 0
  9600                           ;UARTSendChar@c stored from wreg
  9601  003958  6E01               	movwf	UARTSendChar@c,c
  9602                           
  9603                           ;serial.c: 48:   TRISCbits.TRISC7 = 0;
  9604  00395A  9E94               	bcf	3988,7,c	;volatile
  9605  00395C                     l175:
  9606  00395C  FFFF               	dw	65535	; assembler added errata NOP
  9607  00395E  A2AC               	btfss	4012,1,c	;volatile
  9608  003960  D7FD               	goto	l175
  9609                           
  9610                           ;serial.c: 50:   TXREG = c;
  9611  003962  C001  FFAD         	movff	UARTSendChar@c,4013	;volatile
  9612  003966  0012               	return		;funcret
  9613  003968  FFFF               	dw	65535	; errata NOP
  9614  00396A                     __end_of_UARTSendChar:
  9615                           	opt callstack 0
  9616                           
  9617 ;; *************** function _Timer0_StartTimer *****************
  9618 ;; Defined at:
  9619 ;;		line 21 in file "timer.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;		None
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;		None
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  2  107[None  ] int 
  9626 ;; Registers used:
  9627 ;;		None
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9633 ;;      Params:         0       0       0       0       0       0       0
  9634 ;;      Locals:         0       0       0       0       0       0       0
  9635 ;;      Temps:          0       0       0       0       0       0       0
  9636 ;;      Totals:         0       0       0       0       0       0       0
  9637 ;;Total ram usage:        0 bytes
  9638 ;; Hardware stack levels used:    1
  9639 ;; Hardware stack levels required when called:    2
  9640 ;; This function calls:
  9641 ;;		Nothing
  9642 ;; This function is called by:
  9643 ;;		_main
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           	psect	text47
  9648  003994                     __ptext47:
  9649                           	opt callstack 0
  9650  003994                     _Timer0_StartTimer:
  9651                           	opt callstack 0
  9652  003994  FFFF               	dw	65535	; assembler added errata NOP
  9653                           
  9654                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  9655                           
  9656                           ;incstack = 0
  9657  003996  8ED5               	bsf	4053,7,c	;volatile
  9658                           
  9659                           ;timer.c: 23:  return 0;;	Return value of _Timer0_StartTimer is never used
  9660  003998  0012               	return		;funcret
  9661  00399A  FFFF               	dw	65535	; errata NOP
  9662  00399C                     __end_of_Timer0_StartTimer:
  9663                           	opt callstack 0
  9664                           
  9665 ;; *************** function _Timer0_Init *****************
  9666 ;; Defined at:
  9667 ;;		line 8 in file "timer.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;		None
  9670 ;; Auto vars:     Size  Location     Type
  9671 ;;		None
  9672 ;; Return value:  Size  Location     Type
  9673 ;;                  1    wreg      void 
  9674 ;; Registers used:
  9675 ;;		wreg, status,2
  9676 ;; Tracked objects:
  9677 ;;		On entry : 0/0
  9678 ;;		On exit  : 0/0
  9679 ;;		Unchanged: 0/0
  9680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9681 ;;      Params:         0       0       0       0       0       0       0
  9682 ;;      Locals:         0       0       0       0       0       0       0
  9683 ;;      Temps:          0       0       0       0       0       0       0
  9684 ;;      Totals:         0       0       0       0       0       0       0
  9685 ;;Total ram usage:        0 bytes
  9686 ;; Hardware stack levels used:    1
  9687 ;; Hardware stack levels required when called:    2
  9688 ;; This function calls:
  9689 ;;		Nothing
  9690 ;; This function is called by:
  9691 ;;		_main
  9692 ;; This function uses a non-reentrant model
  9693 ;;
  9694                           
  9695                           	psect	text48
  9696  0038F4                     __ptext48:
  9697                           	opt callstack 0
  9698  0038F4                     _Timer0_Init:
  9699                           	opt callstack 0
  9700  0038F4  FFFF               	dw	65535	; assembler added errata NOP
  9701                           
  9702                           ;timer.c: 9:  time_ms = 0;
  9703                           
  9704                           ;incstack = 0
  9705  0038F6  0E00               	movlw	0
  9706  0038F8  0100               	movlb	0	; () banked
  9707  0038FA  6F85               	movwf	_time_ms& (0+255),b	;volatile
  9708  0038FC  0E00               	movlw	0
  9709  0038FE  6F86               	movwf	(_time_ms+1)& (0+255),b	;volatile
  9710  003900  0E00               	movlw	0
  9711  003902  6F87               	movwf	(_time_ms+2)& (0+255),b	;volatile
  9712  003904  0E00               	movlw	0
  9713  003906  6F88               	movwf	(_time_ms+3)& (0+255),b	;volatile
  9714                           
  9715                           ; BSR set to: 0
  9716                           ;timer.c: 10:  T0CONbits.T08BIT = 0;
  9717  003908  9CD5               	bcf	4053,6,c	;volatile
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;timer.c: 11:  TMR0H = 0xFF;
  9721  00390A  68D7               	setf	4055,c	;volatile
  9722                           
  9723                           ;timer.c: 12:  TMR0L = 0x34;
  9724  00390C  0E34               	movlw	52
  9725  00390E  6ED6               	movwf	4054,c	;volatile
  9726                           
  9727                           ; BSR set to: 0
  9728                           ;timer.c: 13:  INTCONbits.TMR0IF = 0;
  9729  003910  94F2               	bcf	4082,2,c	;volatile
  9730                           
  9731                           ;timer.c: 14:  T0CON = 0x00;
  9732  003912  0E00               	movlw	0
  9733  003914  6ED5               	movwf	4053,c	;volatile
  9734                           
  9735                           ; BSR set to: 0
  9736  003916  0012               	return		;funcret
  9737  003918  FFFF               	dw	65535	; errata NOP
  9738  00391A                     __end_of_Timer0_Init:
  9739                           	opt callstack 0
  9740                           
  9741 ;; *************** function _timingISR *****************
  9742 ;; Defined at:
  9743 ;;		line 31 in file "timer.c"
  9744 ;; Parameters:    Size  Location     Type
  9745 ;;		None
  9746 ;; Auto vars:     Size  Location     Type
  9747 ;;		None
  9748 ;; Return value:  Size  Location     Type
  9749 ;;                  1    wreg      void 
  9750 ;; Registers used:
  9751 ;;		wreg, status,2, status,0, cstack
  9752 ;; Tracked objects:
  9753 ;;		On entry : 0/0
  9754 ;;		On exit  : 0/0
  9755 ;;		Unchanged: 0/0
  9756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9757 ;;      Params:         0       0       0       0       0       0       0
  9758 ;;      Locals:         0       0       0       0       0       0       0
  9759 ;;      Temps:          0       0       0       0       0       0       0
  9760 ;;      Totals:         0       0       0       0       0       0       0
  9761 ;;Total ram usage:        0 bytes
  9762 ;; Hardware stack levels used:    1
  9763 ;; Hardware stack levels required when called:    1
  9764 ;; This function calls:
  9765 ;;		i2_Timer0_StartTimer
  9766 ;; This function is called by:
  9767 ;;		Interrupt level 2
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           	psect	intcode
  9772  000008                     __pintcode:
  9773                           	opt callstack 0
  9774  000008                     _timingISR:
  9775                           	opt callstack 0
  9776  000008  FFFF               	dw	65535	; assembler added errata NOP
  9777                           
  9778                           ; BSR set to: 0
  9779                           ;incstack = 0
  9780  00000A  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9781                           
  9782                           ;timer.c: 32:  if (TMR0IF && TMR0IE) {
  9783  00000C  B4F2               	btfsc	4082,2,c	;volatile
  9784  00000E  AAF2               	btfss	4082,5,c	;volatile
  9785  000010  D00D               	goto	i2l240
  9786                           
  9787                           ;timer.c: 33:   TMR0IF = 0;
  9788  000012  94F2               	bcf	4082,2,c	;volatile
  9789                           
  9790                           ;timer.c: 34:   time_ms++;
  9791  000014  0E01               	movlw	1
  9792  000016  0100               	movlb	0	; () banked
  9793  000018  2785               	addwf	_time_ms& (0+255),f,b	;volatile
  9794  00001A  0E00               	movlw	0
  9795  00001C  2386               	addwfc	(_time_ms+1)& (0+255),f,b	;volatile
  9796  00001E  2387               	addwfc	(_time_ms+2)& (0+255),f,b	;volatile
  9797  000020  2388               	addwfc	(_time_ms+3)& (0+255),f,b	;volatile
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;timer.c: 35:   TMR0H = 0xFF;
  9801  000022  68D7               	setf	4055,c	;volatile
  9802                           
  9803                           ; BSR set to: 0
  9804                           ;timer.c: 36:   TMR0L = 0x34;
  9805  000024  0E34               	movlw	52
  9806  000026  6ED6               	movwf	4054,c	;volatile
  9807                           
  9808                           ; BSR set to: 0
  9809                           ;timer.c: 37:   Timer0_StartTimer();
  9810  000028  ECCE  F01C         	call	i2_Timer0_StartTimer	;wreg free
  9811  00002C                     i2l240:
  9812  00002C  FFFF               	dw	65535	; assembler added errata NOP
  9813  00002E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9814  000030  0011               	retfie		f
  9815  000032  FFFF               	dw	65535	; errata NOP
  9816  000034                     __end_of_timingISR:
  9817                           	opt callstack 0
  9818                           
  9819 ;; *************** function i2_Timer0_StartTimer *****************
  9820 ;; Defined at:
  9821 ;;		line 21 in file "timer.c"
  9822 ;; Parameters:    Size  Location     Type
  9823 ;;		None
  9824 ;; Auto vars:     Size  Location     Type
  9825 ;;		None
  9826 ;; Return value:  Size  Location     Type
  9827 ;;                  2    0[None  ] int 
  9828 ;; Registers used:
  9829 ;;		None
  9830 ;; Tracked objects:
  9831 ;;		On entry : 0/0
  9832 ;;		On exit  : 0/0
  9833 ;;		Unchanged: 0/0
  9834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9835 ;;      Params:         0       0       0       0       0       0       0
  9836 ;;      Locals:         0       0       0       0       0       0       0
  9837 ;;      Temps:          0       0       0       0       0       0       0
  9838 ;;      Totals:         0       0       0       0       0       0       0
  9839 ;;Total ram usage:        0 bytes
  9840 ;; Hardware stack levels used:    1
  9841 ;; This function calls:
  9842 ;;		Nothing
  9843 ;; This function is called by:
  9844 ;;		_timingISR
  9845 ;; This function uses a non-reentrant model
  9846 ;;
  9847                           
  9848                           	psect	text50
  9849  00399C                     __ptext50:
  9850                           	opt callstack 0
  9851  00399C                     i2_Timer0_StartTimer:
  9852                           	opt callstack 0
  9853  00399C  FFFF               	dw	65535	; assembler added errata NOP
  9854                           
  9855                           ;timer.c: 22:  T0CONbits.TMR0ON = 1;
  9856                           
  9857                           ;incstack = 0
  9858  00399E  8ED5               	bsf	4053,7,c	;volatile
  9859                           
  9860                           ;timer.c: 23:  return 0;;	Return value of i2_Timer0_StartTimer is never used
  9861  0039A0  0012               	return		;funcret
  9862  0039A2  FFFF               	dw	65535	; errata NOP
  9863  0039A4                     __end_ofi2_Timer0_StartTimer:
  9864                           	opt callstack 0
  9865                           
  9866                           	psect	rparam
  9867  0000                     
  9868                           	psect	temp
  9869  00007F                     btemp:
  9870                           	opt callstack 0
  9871  00007F                     	ds	1
  9872  0000                     int$flags	set	btemp
  9873  0000                     wtemp8	set	btemp+1
  9874  0000                     ttemp5	set	btemp+1
  9875  0000                     ttemp6	set	btemp+4
  9876  0000                     ttemp7	set	btemp+8
  9877                           tosu	equ	0xFFF
  9878                           tosh	equ	0xFFE
  9879                           tosl	equ	0xFFD
  9880                           stkptr	equ	0xFFC
  9881                           pclatu	equ	0xFFB
  9882                           pclath	equ	0xFFA
  9883                           pcl	equ	0xFF9
  9884                           tblptru	equ	0xFF8
  9885                           tblptrh	equ	0xFF7
  9886                           tblptrl	equ	0xFF6
  9887                           tablat	equ	0xFF5
  9888                           prodh	equ	0xFF4
  9889                           prodl	equ	0xFF3
  9890                           indf0	equ	0xFEF
  9891                           postinc0	equ	0xFEE
  9892                           postdec0	equ	0xFED
  9893                           preinc0	equ	0xFEC
  9894                           plusw0	equ	0xFEB
  9895                           fsr0h	equ	0xFEA
  9896                           fsr0l	equ	0xFE9
  9897                           wreg	equ	0xFE8
  9898                           indf1	equ	0xFE7
  9899                           postinc1	equ	0xFE6
  9900                           postdec1	equ	0xFE5
  9901                           preinc1	equ	0xFE4
  9902                           plusw1	equ	0xFE3
  9903                           fsr1h	equ	0xFE2
  9904                           fsr1l	equ	0xFE1
  9905                           bsr	equ	0xFE0
  9906                           indf2	equ	0xFDF
  9907                           postinc2	equ	0xFDE
  9908                           postdec2	equ	0xFDD
  9909                           preinc2	equ	0xFDC
  9910                           plusw2	equ	0xFDB
  9911                           fsr2h	equ	0xFDA
  9912                           fsr2l	equ	0xFD9
  9913                           status	equ	0xFD8


Data Sizes:
    Strings     74
    Constant    0
    Data        7
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     126
    BANK0           128     42     104
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_132(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_119(CODE[3]), 
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[4]), STR_101(CODE[4]), 
		 -> STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[3]), STR_81(CODE[4]), 
		 -> STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_36(CODE[3]), STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), 
		 -> STR_18(CODE[3]), STR_14(CODE[3]), STR_9(CODE[4]), STR_5(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_132(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_119(CODE[3]), 
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[4]), STR_101(CODE[4]), 
		 -> STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[3]), STR_81(CODE[4]), 
		 -> STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_36(CODE[3]), STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), 
		 -> STR_18(CODE[3]), STR_14(CODE[3]), STR_9(CODE[4]), STR_5(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    ungetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fgetc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    S1748_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), int_to_char@result(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(COMRAM[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(COMRAM[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(COMRAM[6]), sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UARTSendString@c	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__float_to_char	PTR unsigned char  size(2) Largest target is 17
		 -> float_to_char@result(COMRAM[17]), 

    S187$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    sp__int_to_char	PTR unsigned char  size(2) Largest target is 10
		 -> int_to_char@result(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_int_to_char
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _getchar->_fgetc
    _fgetc->_getch
    _get_temp->___flsub
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___fltol->_get_temp
    _UARTSendString->_int_to_char
    _UARTNewLine->_UARTSendChar

Critical Paths under _timingISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_UARTSendString
    _int_to_char->_sprintf
    _UARTSendString->_int_to_char

Critical Paths under _timingISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timingISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timingISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timingISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timingISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timingISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   54802
                                             36 BANK0      6     6      0
                        _Timer0_Init
                  _Timer0_StartTimer
                        _UARTNewLine
                     _UARTSendString
                            ___fltol
                           _get_temp
                      _initialize_RX
                      _initialize_TX
                        _int_to_char
                           _write_op
 ---------------------------------------------------------------------------------
 (1) _write_op                                             3     2      1     120
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _int_to_char                                         18    14      4   49030
                                            121 COMRAM     4     0      4
                                             18 BANK0     14    14      0
                            _getchar
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   48594
                                              0 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   48185
                                            113 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           56    50      6   47517
                                             66 COMRAM    47    41      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7303
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6267
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    6609
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5712
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6866
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _getchar                                              0     0      0     189
                              _fgetc
 ---------------------------------------------------------------------------------
 (3) _fgetc                                                9     7      2     189
                                              2 COMRAM     9     7      2
                              _getch
 ---------------------------------------------------------------------------------
 (4) _getch                                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initialize_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_RX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            14    10      4    4992
                                             47 COMRAM    14    10      4
                           _ADC_Init
                           _ADC_Read
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2585
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      44
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             61 COMRAM    10     6      4
                           _get_temp (ARG)
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       4     2      2     264
                                             32 BANK0      4     2      2
                       _UARTSendChar
                        _int_to_char (ARG)
 ---------------------------------------------------------------------------------
 (1) _UARTNewLine                                          0     0      0      22
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _timingISR                                           0     0      0       0
                i2_Timer0_StartTimer
 ---------------------------------------------------------------------------------
 (11) i2_Timer0_StartTimer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_Init
   _Timer0_StartTimer
   _UARTNewLine
     _UARTSendChar
   _UARTSendString
     _UARTSendChar
     _int_to_char (ARG)
       _getchar
         _fgetc
           _getch
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   ___fltol
     _get_temp (ARG)
       _ADC_Init
       _ADC_Read
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
   _get_temp
     _ADC_Init
     _ADC_Read
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___xxtofl
   _initialize_RX
   _initialize_TX
   _int_to_char
     _getchar
       _fgetc
         _getch
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _write_op

 _timingISR (ROOT)
   i2_Timer0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2A      68       5       81.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E6      15        0.0%
DATA                 0      0      E6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 20 21:55:11 2019

                                                        _SSPSTATbits 000FC7  
                                                ___wmul@multiplicand 0003  
                                                                l320 3244  
                                                                l402 2396  
                                                                l340 1F3A  
                                                                l404 23A0  
                                                                l175 395C  
                                                                l417 213E  
                                                                l338 1F30  
                                                                l363 2558  
                                                                l419 2148  
                                                                l365 2562  
                                                                l278 358C  
                                                                l279 3574  
                                                                l383 2B58  
                                                                l479 17E6  
                                                                l833 2F14  
                                                                l974 2E20  
                                                                l984 313C  
                                                                _abs 37B4  
                                                                _lcd 0080  
                                                                _pad 320E  
                                                                wreg 000FE8  
                                                       ___flmul@aexp 0020  
                                                       ___flmul@bexp 0021  
                                                        main@address 00DD  
                                                       ___flmul@sign 001B  
                                                       ___flmul@temp 0026  
                                                       ___flmul@prod 0022  
                                                       ___fltol@exp1 0047  
                                                       __CFG_WDT$OFF 000000  
                                                               l1211 37E0  
                                                               ?_abs 0013  
                                                               l1150 1878  
                                                               l1214 37EA  
                                                               l1160 1A9C  
                                                               l1081 1D98  
                                                               l1073 1EAC  
                                                               l1065 1CCC  
                                                               l1154 1B68  
                                                               l1090 1E10  
                                                               l1066 1CA4  
                                                               l1242 2826  
                                                               l1091 1E0A  
                                                               l1245 2830  
                                                               l1342 30A0  
                                                               l1167 1B30  
                                                               l1159 1AA2  
                                                               l1191 29D2  
                                                               l1352 34D8  
                                                               l1194 2AE8  
                                                               l3202 329A  
                                                               l3300 2CB8  
                                                               l1357 34E2  
                                                               l4102 1B9C  
                                                               l1198 2A5C  
                                                               l3310 2D1C  
                                                               l4022 15AC  
                                                               l1288 3208  
                                                               l4008 154C  
                                                               l4130 1BF0  
                                                               l4106 1BA2  
                                                               l3154 317E  
                                                               l3314 2D44  
                                                               l3306 2D04  
                                                               l3402 1F58  
                                                               l4050 174C  
                                                               l4204 1D04  
                                                               l4300 3380  
                                                               l3164 3706  
                                                               l3172 38A4  
                                                               l3260 28CC  
                                                               l3252 288E  
                                                               l3500 2B1A  
                                                               l3324 2D92  
                                                               l4060 179A  
                                                               l4036 1682  
                                                               l4206 1D0A  
                                                               l4214 1D1E  
                                                               l4126 1BEA  
                                                               l4302 33CE  
                                                               l3174 38AA  
                                                               l3270 292C  
                                                               l3246 2864  
                                                               l3406 1F68  
                                                               l3510 2B72  
                                                               l3326 2DA8  
                                                               l4400 1866  
                                                               l4232 1DC0  
                                                               l4224 1D86  
                                                               l3168 371E  
                                                               l3192 323A  
                                                               l3440 20EE  
                                                               l3416 2062  
                                                               l3336 2E08  
                                                               l3352 3124  
                                                               l3344 30C2  
                                                               l4056 178C  
                                                               l4242 1DD8  
                                                               l4138 1C14  
                                                               l3194 3250  
                                                               l3258 28B6  
                                                               l3274 2944  
                                                               l3290 2C60  
                                                               l3514 2B8C  
                                                               l3346 30D8  
                                                               l4066 17AE  
                                                               l4180 1CB4  
                                                               l3364 36AA  
                                                               l3188 322A  
                                                               l3372 34FE  
                                                               l3436 20D2  
                                                               l3532 2C0E  
                                                               l3524 2BD6  
                                                               l4182 1CBA  
                                                               l4510 29E4  
                                                               l3198 326A  
                                                               l3374 350C  
                                                               l3278 296C  
                                                               l3294 2C86  
                                                               l3470 262E  
                                                               l3518 2BAE  
                                                               l3710 069E  
                                                               l4086 33F2  
                                                               l4408 189A  
                                                               l4280 1E8C  
                                                               l4248 1DE6  
                                                               l4168 1C52  
                                                               l4520 2A1A  
                                                               l3640 26EA  
                                                               l3528 2BF4  
                                                               l3632 2346  
                                                               l3608 224C  
                                                               l3616 22C8  
                                                               l3720 06C0  
                                                               l3712 06B0  
                                                               l4088 341A  
                                                               l4450 1A42  
                                                               l4282 1E90  
                                                               l4530 2A92  
                                                               l4522 2A42  
                                                               l3298 2CA2  
                                                               l3458 25A2  
                                                               l3546 23D8  
                                                               l4700 2EE2  
                                                               l4380 181A  
                                                               l4276 1E82  
                                                               l4268 1E58  
                                                               l4516 2A04  
                                                               l3660 2786  
                                                               l3388 1F0E  
                                                               l3556 24C6  
                                                               l3580 215E  
                                                               l3804 0AD2  
                                                               l3732 06DE  
                                                               l3724 06C8  
                                                               l3716 06B8  
                                                               l3708 0698  
                                                               l4358 3552  
                                                               l4382 1820  
                                                               l4518 2A0C  
                                                               l3654 2748  
                                                               l3638 26E4  
                                                               l3814 0B4E  
                                                               l3750 07C6  
                                                               l3734 0724  
                                                               ?_pad 0011  
                                                               l4480 1B08  
                                                               l4456 1A62  
                                                               l4384 1832  
                                                               l4528 2A84  
                                                               l3664 27BE  
                                                               l3656 2752  
                                                               l3648 2736  
                                                               l3488 26A2  
                                                               l3904 0FBE  
                                                               l3824 0C2E  
                                                               l3728 06D0  
                                                               l4706 2F02  
                                                               l4546 2AD6  
                                                               l4298 3370  
                                                               l3658 275A  
                                                               l3594 21B2  
                                                               l3586 218E  
                                                               l3914 1050  
                                                               l3842 0D88  
                                                               l3834 0CD8  
                                                               l3770 08CE  
                                                               l3746 0796  
                                                               l4492 1B52  
                                                               l4476 1AE8  
                                                               l3684 3010  
                                                               l3940 11C8  
                                                               l3932 1156  
                                                               l3924 10BC  
                                                               l3748 07B6  
                                                               l4398 1860  
                                                               l3686 3020  
                                                               l3790 0A2E  
                                                               l3766 089E  
                                                               l4584 36C6  
                                                               l4672 2E68  
                                                               l3880 0F44  
                                                               l3784 0988  
                                                               l3768 08BE  
                                                               l3874 0ED2  
                                                               l3866 0E5E  
                                                               l3858 0DDE  
                                                               l3794 0A68  
                                                               l4588 36E0  
                                                               l4692 2ECA  
                                                               l3980 13C0  
                                                               l3972 134C  
                                                               l3964 12CC  
                                                               l3948 1276  
                                                               l3884 0F50  
                                                               l3894 0F94  
                                                               l4688 2EB8  
                                                               l3888 0F80  
                                                               l4698 2ED4  
                                                               l3994 14CA  
                                                               STR_1 061D  
                                                               STR_2 0648  
                                                               STR_3 0605  
                                                               STR_5 0605  
                                                               STR_7 0609  
                                                               STR_9 0609  
                                                               u3001 2D72  
                                                               u3100 1EDC  
                                                               u3020 2DAE  
                                                               u3110 1EE0  
                                                               u3200 20A4  
                                                               u3210 20AA  
                                                               u3050 30DE  
                                                               u4010 0BA8  
                                                               u3140 1F24  
                                                               u3300 2660  
                                                               u3230 20BA  
                                                               u3310 2670  
                                                               u4030 0C88  
                                                               u3080 36A6  
                                                               u3160 1F50  
                                                               u3320 2676  
                                                               u3400 2BA2  
                                                               u4200 137A  
                                                               u3170 2072  
                                                               u4130 107E  
                                                               u3260 254C  
                                                               u3500 2508  
                                                               u4300 16DC  
                                                               u4220 141A  
                                                               u5110 2E54  
                                                               u3190 2094  
                                                               u3270 2608  
                                                               u3430 2C24  
                                                               u2710 381A  
                                                               u3191 2092  
                                                               u3351 2AFA  
                                                               u5120 2E8A  
                                                               u3280 263E  
                                                               u2800 37A6  
                                                               u2720 381E  
                                                               u3520 2132  
                                                               u4240 1524  
                                                               u4080 0E8C  
                                                               u3450 238A  
                                                               u2810 37AA  
                                                               u3610 22A2  
                                                               u3275 25F4  
                                                               u4420 1C76  
                                                               u5060 2A9E  
                                                               u2660 3174  
                                                               u2820 34BC  
                                                               u3620 22DA  
                                                               u3540 21AE  
                                                               u4260 1586  
                                                               u5125 2E7E  
                                                               u4430 1C86  
                                                               u3710 27F2  
                                                               u2910 28D2  
                                                               u2830 34C0  
                                                               u3550 21E8  
                                                               u3615 228E  
                                                               u5160 2EEA  
                                                               u4600 1DEC  
                                                               u4440 1C8A  
                                                               u3720 27F6  
                                                               u2680 31C0  
                                                               u3480 24F2  
                                                               u3640 22FC  
                                                               u3560 21EC  
                                                               u4280 1606  
                                                               u3481 24F0  
                                                               u3641 22FA  
                                                               u2850 388A  
                                                               u2770 37C4  
                                                               u3490 2502  
                                                               u3650 230C  
                                                               u5307 35D2  
                                                               u4620 1E02  
                                                               u2860 388E  
                                                               u2780 3852  
                                                               u3660 2312  
                                                               u3580 2226  
                                                               u3900 090A  
                                                               u5317 3566  
                                                               u4470 1CD6  
                                                               u2790 3856  
                                                               u3590 222A  
                                                               u3910 090E  
                                                               u4560 1DAC  
                                                               u3920 091C  
                                                               u3690 2732  
                                                               u2970 2CBE  
                                                               u3850 0802  
                                                               u2891 2896  
                                                               u3860 0806  
                                                               _RCIF 007CF5  
                                                               u5277 333C  
                                                               u3790 3076  
                                                               u3950 09E2  
                                                               u3870 0814  
                                                               u5287 359C  
                                                               u4680 1E66  
                                                               u5297 35C2  
                                                               u4930 1A94  
                                                               u3970 0AC2  
                                                               u3990 0B0C  
                                                               u4880 1886  
                                                               u4970 1AF8  
                                                               u4890 1A02  
                                                               u4980 1B18  
                                                               u4895 19F6  
                                                               abs@a 0013  
                                                               _dbuf 0097  
                                                               _flag 0096  
                                                               _atoi 26D0  
                                                               _ctoa 34E8  
                                                               _main 32B8  
                                                               _dtoa 1EB2  
                                                               _prec 008F  
                                                               _otoa 2536  
                                                               _nout 008B  
                                                               pad@i 0018  
                                                               pad@p 0015  
                                                               fsr1h 000FE2  
                                                               fsr2h 000FDA  
                                                               indf2 000FDF  
                                                               fsr1l 000FE1  
                                                               pad@w 001A  
                                                               fsr2l 000FD9  
                                                               _stoa 2AEE  
                                                               btemp 007F  
                                                               _utoa 2374  
                                                               _xtoa 211C  
                                                   __end_of_ADC_Init 398A  
                                                   __end_of_ADC_Read 3592  
                                                               prodh 000FF4  
                                                               prodl 000FF3  
                                                               start 0034  
                                                       ___param_bank 000000  
                                                  int_to_char@result 00C9  
                                                              ??_abs 0015  
                                                              ??_pad 0017  
                                                      ___fltol@sign1 0046  
                                                    __end_of___aodiv 2992  
                                                              ?_atoi 0008  
                                                              ?_ctoa 001C  
                                                    __end_of___fladd 1EB2  
                                                              ?_main 0001  
                                                              ?_dtoa 001C  
                                                       get_temp@temp 0038  
                                                    __end_of___aomod 2D6A  
                                                              STR_21 0627  
                                                              STR_14 0606  
                                                              STR_30 062A  
                                                              STR_23 0627  
                                                              STR_32 062A  
                                                              STR_41 0611  
                                                              STR_25 062D  
                                                              STR_18 060A  
                                                              STR_34 0630  
                                                              STR_27 062D  
                                                              STR_51 0639  
                                                              STR_36 0630  
                                                              STR_61 060D  
                                                              STR_46 0612  
                                                              STR_54 063C  
                                                              STR_71 0633  
                                                              STR_39 0611  
                                                              STR_56 063C  
                                                              STR_81 0615  
                                                              STR_49 0639  
                                                              STR_66 060E  
                                                              STR_74 0636  
                                                              STR_91 061E  
                                                              STR_59 060D  
                                                              STR_76 0636  
                                                              STR_69 0633  
                                                              STR_86 0616  
                                                              STR_94 063F  
                                                              STR_79 0615  
                                                              STR_96 063F  
                                                    __end_of___flmul 1B6E  
                                                              ?_otoa 001C  
                                                              STR_99 0619  
                                                    __end_of___flsub 362A  
                                                    __end_of___fltol 2F1A  
                                                              ?_stoa 000A  
                                                              ?_utoa 001C  
                                                              _T0CON 000FD5  
                                                    __end_of___lodiv 2E46  
                                                              ?_xtoa 001C  
                                                    __end_of___lomod 3162  
                                                              i2l240 002C  
                                                              _RCSTA 000FAB  
                                                       vfpfcnvrt@fmt 0045  
                                                              _TMR0H 000FD7  
                                                       vfpfcnvrt@llu 006A  
                                                              _TMR0L 000FD6  
                                                              _SPBRG 000FAF  
                                                              _PORTA 000F80  
                                                              _PORTB 000F81  
                                                              _PORTD 000F83  
                                                              _TRISA 000F92  
                                                              _TRISB 000F93  
                                                              _TRISC 000F94  
                                                              _TRISD 000F95  
                                                              _TXREG 000FAD  
                                                    __end_of_getchar 397C  
                                                              _fgetc 3352  
                                                              _flags 0091  
                                                              _getch 398A  
                                                              _errno 0089  
                                                              _fputc 3162  
                                                    __end_of_isalpha 37B4  
                                                              _fputs 36FA  
                                                    __end_of_isdigit 3898  
                                                              atoi@n 0015  
                                                              pad@fp 0011  
                                                              atoi@s 0008  
                                                              _width 008D  
                                                              ctoa@c 001E  
                                                              _putch 39AC  
                                                              ctoa@w 001F  
                                                              dtoa@d 001E  
                                                              dtoa@i 003E  
                                                              dtoa@n 0036  
                                                              dtoa@p 0030  
                                                              dtoa@s 0034  
                                                              dtoa@w 0032  
                                                    __end_of_islower 3828  
                                                    __end_of_isspace 36B6  
                                                    __end_of_isupper 3860  
                                                              tablat 000FF5  
                                                       ?_int_to_char 007A  
                                                              otoa@d 001E  
                                                              otoa@i 003C  
                                                              otoa@n 0034  
                                                              otoa@p 002E  
                                                              otoa@t 0030  
                                                              otoa@w 0032  
                                                              plusw1 000FE3  
                                                              plusw2 000FDB  
                                                              stoa@i 0016  
                                                              stoa@l 001E  
                                                              stoa@p 001C  
                                                              stoa@s 000C  
                                                              stoa@w 0018  
                                                              ttemp5 0080  
                                                              ttemp6 0083  
                                                              ttemp7 0087  
                                                              utoa@d 001E  
                                                              utoa@i 003A  
                                                              utoa@n 0032  
                                                              utoa@p 002E  
                                                              utoa@w 0030  
                                                              status 000FD8  
                                                              wtemp8 0080  
                                                    __end_of_sprintf 3492  
                                                              xtoa@c 0041  
                                                              xtoa@d 001E  
                                                              xtoa@i 003F  
                                                              xtoa@n 0037  
                                                              xtoa@p 0033  
                                                              xtoa@w 0035  
                                                              xtoa@x 0026  
                                                    __end_of_strncmp 30A6  
                                                    __end_of_toupper 34E8  
                                                   ___lodiv@dividend 0001  
                                                       _toupper$1902 000D  
                                                    __initialization 373C  
                                                     int_to_char@num 007A  
                                                       __end_of_atoi 2836  
                                                       __end_of_ctoa 353E  
                                                       __end_of_main 3352  
                                                       __end_of_dtoa 211C  
                                                       __end_of_otoa 26D0  
                                                       __end_of_stoa 2C32  
                                                       __end_of_utoa 2536  
                                                       __end_of_xtoa 2374  
                                                 int_to_char@the_num 00D3  
                                                             ??_atoi 000A  
                                                             ??_ctoa 001F  
                                                             ??_main 00DB  
                                                             ??_dtoa 0026  
                                                             ??_otoa 0026  
                                                             ??_stoa 000E  
                                                             ??_utoa 0026  
                                                             ??_xtoa 0027  
                                                      __activetblptr 000002  
                                                   ___lodiv@quotient 0011  
                                                             ?_fgetc 0003  
                                                             ?_getch 0001  
                                                             _ADCON0 000FC2  
                                                             _ADCON1 000FC1  
                                                             ?_fputc 0001  
                                                             STR_101 0619  
                                                             STR_110 061A  
                                                             ?_fputs 000A  
                                                             STR_103 0601  
                                                             STR_105 0601  
                                                             STR_121 0621  
                                                             STR_114 0602  
                                                             STR_130 0624  
                                                             _ADRESH 000FC4  
                                                             STR_123 0621  
                                                             STR_132 0624  
                                                             STR_117 0642  
                                                             STR_126 0645  
                                                             _ADRESL 000FC3  
                                                             STR_119 0642  
                                                             STR_128 0645  
                                                             ?_putch 0001  
                                                             _RCREG1 000FAE  
                                                      vfpfcnvrt@done 0059  
                                                             _TMR0IE 007F95  
                                                             _TMR0IF 007F92  
                                                             _SSPBUF 000FC9  
                                                       ?_UARTNewLine 0001  
                                                   __end_of___xxtofl 2AEE  
                                                      ??_Timer0_Init 0001  
                                                    write_op@address 0003  
                                                i2_Timer0_StartTimer 399C  
                                                       vfprintf@cfmt 0078  
                                                   __end_of_get_temp 2FE4  
                                                          ??___aodiv 0011  
                                                          ??___fladd 0009  
                                                          ??___aomod 0011  
                                                             ___wmul 38CA  
                                                          ??___flmul 0017  
                                                          ??___flsub 0030  
                                                          ??___fltol 0042  
                                                          ??___lodiv 0011  
                                                          ??___lomod 0011  
                                                    ADC_Read@channel 0005  
                                                             clear_0 3762  
                                            __size_of_UARTSendString 0044  
                                                             fgetc@c 000A  
                                                             pad@buf 0013  
                                                             ctoa@fp 001C  
                                                             dtoa@fp 001C  
                                                          ??_getchar 000C  
                                                             _strlen 3898  
                                                             fputc@c 0001  
                                                             fputs@c 000E  
                                                             fputs@i 000F  
                                                             fputs@s 000A  
                                                          ??_isalpha 0003  
                                                          ??_isdigit 0003  
                                                          ?_ADC_Init 0001  
                                                          ?_ADC_Read 0001  
                                                          ??_islower 0003  
                                                       __mediumconst 0000  
                                                          ??_isspace 0003  
                                                             otoa@fp 001C  
                                               ?i2_Timer0_StartTimer 0001  
                                                             tblptrh 000FF7  
                                                          ??_isupper 0003  
                                                             tblptrl 000FF6  
                                                             tblptru 000FF8  
                                                             stoa@cp 001A  
                                             __size_of_initialize_RX 0014  
                                             __size_of_initialize_TX 0014  
                                                             stoa@fp 000A  
                                                             putch@c 0001  
                                                   __end_of_vfprintf 343C  
                                                             utoa@fp 001C  
                                                          ??_sprintf 007A  
                                                             xtoa@fp 001C  
                                                          ??_strncmp 0007  
                                                          ??_toupper 0009  
                                                       ___xxtofl@arg 000B  
                                                   __end_of_write_op 35E0  
                                                       ___xxtofl@exp 000A  
                                                       ___xxtofl@val 0001  
                                                         __accesstop 0080  
                                            __end_of__initialization 376A  
                                                      ___rparam_used 000001  
                                                         ___fltol@f1 003E  
                                                     __pcstackCOMRAM 0001  
                                                       __pidataBANK0 39A4  
                                                      __end_of_fgetc 33DC  
                                                      __end_of_getch 3994  
                                                      __end_of_fputc 320E  
                                                      __end_of_fputs 373C  
                                                __end_of_Timer0_Init 391A  
                                                      __end_of_putch 39B2  
                                                         ??_ADC_Init 0001  
                                                         ??_ADC_Read 0003  
                                              ??i2_Timer0_StartTimer 0001  
                                                            ??_fgetc 0005  
                                                            ??_getch 0003  
                                                            ??_fputc 0005  
                                                            ??_fputs 000E  
                                                            ??_putch 0001  
                                                         __pbssBANK0 0080  
                                               __size_of_int_to_char 0048  
                                                      _initialize_RX 392E  
                                                      _initialize_TX 391A  
                                                            ?___wmul 0001  
                                                            ?_strlen 0001  
                                                 __size_of_timingISR 002C  
                                                          ?___xxtofl 0001  
                                                 __size_of_vfpfcnvrt 11A0  
                                                            _SSPCON1 000FC6  
                                                          ?_get_temp 0030  
                                                   ___lomod@dividend 0001  
                                                      ?_UARTSendChar 0001  
                                                            __Hparam 0000  
                                               __size_of_UARTNewLine 0014  
                                                        _Timer0_Init 38F4  
                                                     ?_initialize_RX 0001  
                                                     ?_initialize_TX 0001  
                                                            __Lparam 0000  
                                                            ___aodiv 2836  
                                                            ___fladd 1B6E  
                                                            ___aomod 2C32  
                                                            ___flmul 17EC  
                                                            ___flsub 35E0  
                                                            ___fltol 2E46  
                                                    __size_of___wmul 002A  
                                                            ___lodiv 2D6A  
                                                            ___lomod 30A6  
                                                          ?_vfprintf 0072  
                                                       __psmallconst 0600  
                                                     _UARTSendString 36B6  
                                                            __pcinit 373C  
                                                            __ramtop 0600  
                                                            __ptext0 32B8  
                                                            __ptext1 3592  
                                                            __ptext2 362A  
                                                            __ptext3 343C  
                                                            __ptext4 33DC  
                                                            __ptext5 064C  
                                                            __ptext6 211C  
                                                            __ptext7 3492  
                                                            __ptext8 37F0  
                                                            __ptext9 3828  
                                                          ?_write_op 0001  
                                                            _getchar 396A  
                                                          _T0CONbits 000FD5  
                                                    __size_of_strlen 0032  
                                                       __size_of_abs 003C  
                                                       __size_of_pad 00AA  
                                                            _isalpha 3778  
                                                            _isdigit 3860  
                                                         ??___xxtofl 0005  
                                                            _islower 37F0  
                                                            _isspace 3672  
                                                            _isupper 3828  
                                                            fgetc@fp 0003  
                                                            _time_ms 0085  
                                                            atoi@neg 000E  
                                                            _sprintf 343C  
                                                         ??_get_temp 0034  
                                                            _strncmp 2FE4  
                                                            _toupper 3492  
                                               end_of_initialization 376A  
                                                     ??_UARTSendChar 0001  
                                                            fputc@fp 0003  
                                                      __Lmediumconst 0000  
                                                            fputs@fp 000C  
                                                  __end_of_timingISR 0034  
                                                  __end_of_vfpfcnvrt 17EC  
                                                          _RCSTAbits 000FAB  
                                             __end_of_UARTSendString 36FA  
                                                            postdec1 000FE5  
                                                            postdec2 000FDD  
                                                            postinc0 000FEE  
                                                            postinc1 000FE6  
                                                            postinc2 000FDE  
                                                         ??_vfprintf 0078  
                                                            strlen@a 0003  
                                                            strlen@s 0001  
                                                          _PORTCbits 000F82  
                                                         ??_write_op 0002  
                                                        ___fladd@grs 0010  
                                                      ___xxtofl@sign 0009  
                                                          _TRISCbits 000F94  
                                                  _Timer0_StartTimer 3994  
                                                  __size_of_ADC_Init 000E  
                                                  __size_of_ADC_Read 0054  
                                                 ?_Timer0_StartTimer 0001  
                                                        ___flmul@grs 001C  
                                                          _TXSTAbits 000FAC  
                                                    ??_initialize_RX 0001  
                                                    ??_initialize_TX 0001  
                                                ??_Timer0_StartTimer 0001  
                                                       write_op@data 0001  
                                                    ?_UARTSendString 00D7  
                                                        vfpfcnvrt@ap 0047  
                                                        vfpfcnvrt@cp 0057  
                                                        vfpfcnvrt@fp 0043  
                                                        vfpfcnvrt@ll 005F  
                                                     __end_of___wmul 38F4  
                                                        vfpfcnvrt@vp 0067  
                                          __end_of_Timer0_StartTimer 399C  
                                                     __end_of_strlen 38CA  
                                                start_initialization 373C  
                                                    ___lodiv@divisor 0009  
                                                    ___lodiv@counter 0019  
                                                        __end_of_abs 37F0  
                                                        __end_of_pad 32B8  
                                                        vfprintf@fmt 0074  
                                                           ??___wmul 0005  
                                                        __pdataBANK0 00E1  
                                               __end_of_UARTSendChar 396A  
                                        __end_ofi2_Timer0_StartTimer 39A4  
                                                           ??_strlen 0003  
                                                          ___fladd@a 0005  
                                                          ___fladd@b 0001  
                                                          ___flmul@a 0013  
                                                          ___flmul@b 000F  
                                                        __pbssCOMRAM 007E  
                                                          ___flsub@a 002C  
                                                          ___flsub@b 0028  
                                                      __pcstackBANK0 00B7  
                                                   ___aodiv@dividend 0001  
                                                  __size_of___xxtofl 015C  
                                                      ??_int_to_char 007E  
                                                  __size_of_get_temp 00CA  
                                                          _atoi$1745 0010  
                                                          _atoi$1746 0014  
                                                          _atoi$1747 0012  
                                                       ?_Timer0_Init 0001  
                                                          _dtoa$1099 002E  
                                                      UARTSendChar@c 0001  
                                                          __pintcode 0008  
                                                           ?___aodiv 0001  
                                                           ?___fladd 0001  
                                                           ?___aomod 0001  
                                                   ___aodiv@quotient 0013  
                                                           ?___flmul 000F  
                                                           ?___flsub 0028  
                                                           ?___fltol 003E  
                                                           ?___lodiv 0001  
                                                           ?___lomod 0001  
                                                get_temp@adc_voltage 003C  
                                                  __size_of_vfprintf 0060  
                                                           ?_getchar 0001  
                                                    ___lomod@divisor 0009  
                                                        __smallconst 0600  
                                                    ___lomod@counter 0011  
                                         __size_of_Timer0_StartTimer 0008  
                                                           ?_isalpha 0001  
                                                           ?_isdigit 0001  
                                                           _ADC_Init 397C  
                                                           _ADC_Read 353E  
                                                  __size_of_write_op 004E  
                                                           ?_islower 0001  
                                                           ?_isspace 0001  
                                                           ?_isupper 0001  
                                                     __size_of_fgetc 008A  
                                                     __size_of_getch 000A  
                                                           ?_sprintf 00B7  
                                                     __size_of_fputc 00AC  
                                                     __size_of_fputs 0042  
                                                           ?_strncmp 0001  
                                                           ?_toupper 0007  
                                                     __size_of_putch 0006  
                                                      ??_UARTNewLine 0002  
                                                     ___wmul@product 0005  
                                                    UARTSendString@c 00D7  
                                                    UARTSendString@i 00D9  
                                                __end_of_int_to_char 3672  
                                                           _GO_nDONE 007E12  
                                                           _RCONbits 000FD0  
                                                          _timingISR 0008  
                                                          _vfpfcnvrt 064C  
                                                          _xtoa$1135 002F  
                                                          _xtoa$1136 0031  
                                                  ___wmul@multiplier 0001  
                                                       _isspace$1782 0007  
                                                         vfpfcnvrt@c 0069  
                                                        _INTCON2bits 000FF1  
                                                          copy_data0 3750  
                                                   ??_UARTSendString 007E  
                                                           __Hrparam 0000  
                                              __size_of_UARTSendChar 0014  
                                                         vfprintf@ap 0076  
                                                           __Lrparam 0000  
                                                         vfprintf@fp 0072  
                                                __end_of_UARTNewLine 3956  
                                                         ?_timingISR 0001  
                                                   __size_of___aodiv 015C  
                                                   __size_of___fladd 0344  
                                                   __size_of___aomod 0138  
                                                   __size_of___flmul 0382  
                                                   __size_of___flsub 004A  
                                                   __size_of___fltol 00D4  
                                                   __size_of___lodiv 00DC  
                                                   __size_of___lomod 00BC  
                                                         ?_vfpfcnvrt 0043  
                                                    ___aodiv@divisor 0009  
                                                    ___aodiv@counter 0011  
                                                   __size_of_getchar 0012  
                                                         sprintf@fmt 00B9  
                                                           ___xxtofl 2992  
                                                   __size_of_isalpha 003C  
                                                   __size_of_isdigit 0038  
                                                   __size_of_islower 0038  
                                                   __size_of_isspace 0044  
                                                           __ptext10 3778  
                                                           __ptext11 2374  
                                                           __ptext20 2836  
                                                           __ptext12 30A6  
                                                           __ptext21 34E8  
                                                           __ptext13 2D6A  
                                                           __ptext30 38CA  
                                                           __ptext22 320E  
                                                           __ptext14 2FE4  
                                                           __ptext31 396A  
                                                           __ptext23 3898  
                                                           __ptext15 2AEE  
                                                           __ptext40 17EC  
                                                           __ptext32 3352  
                                                           __ptext24 36FA  
                                                           __ptext16 2536  
                                                           __ptext41 353E  
                                                           __ptext33 398A  
                                                           __ptext25 3162  
                                                           __ptext17 1EB2  
                                                           __ptext50 399C  
                                                           __ptext42 397C  
                                                           __ptext34 391A  
                                                           __ptext26 39AC  
                                                           __ptext18 37B4  
                                                           __ptext43 2E46  
                                                           __ptext35 392E  
                                                           __ptext27 26D0  
                                                           __ptext19 2C32  
                                                           __ptext44 36B6  
                                                           __ptext36 2F1A  
                                                           __ptext28 3672  
                                                           __ptext45 3942  
                                                           __ptext37 2992  
                                                           __ptext29 3860  
                                                           __ptext46 3956  
                                                           __ptext38 35E0  
                                                           __ptext47 3994  
                                                           __ptext39 1B6E  
                                                           __ptext48 38F4  
                                                   __size_of_isupper 0038  
                                                           _get_temp 2F1A  
                                                   __size_of_sprintf 0056  
                                                   __size_of_strncmp 00C2  
                                                   __size_of_toupper 0056  
                                                    _interval_events 0093  
                                                       _UARTSendChar 3956  
                                                        _int_to_char 362A  
                                                      __size_of_atoi 0166  
                                                      __size_of_ctoa 0056  
                                                      __size_of_main 009A  
                                                      __size_of_dtoa 026A  
                                                      __size_of_otoa 019A  
                                                      __size_of_stoa 0144  
                                                      __size_of_utoa 01C2  
                                                      __size_of_xtoa 0258  
                                              __end_of_initialize_RX 3942  
                                              __end_of_initialize_TX 392E  
                                                          stoa@F1152 00E1  
                                               __size_of_Timer0_Init 0026  
                                                           int$flags 007F  
                                                           _ungetbuf 0095  
                                                           _ungetcnt 007E  
                                                           _vfprintf 33DC  
                                                           main@temp 00DF  
                                                   ___aomod@dividend 0001  
                                                           _write_op 3592  
                                                     _vfpfcnvrt$1150 005B  
                                                     _vfpfcnvrt$1151 005D  
                                                         _INTCONbits 000FF2  
                                                           isalpha@c 0001  
                                                           isdigit@c 0001  
                                                           intlevel2 39B2  
                                                          sprintf@ap 00C7  
                                                           islower@c 0001  
                                                           isspace@c 0001  
                                                        _UARTNewLine 3942  
                                                           isupper@c 0001  
                                                          strncmp@_l 0001  
                                                          strncmp@_r 0003  
                                                        ??_timingISR 0001  
                                                    ___aomod@divisor 0009  
                                                        ??_vfpfcnvrt 0049  
                                                           stoa@nuls 000F  
                                                    ___aomod@counter 0011  
                                                           sprintf@f 00C1  
                                               get_temp@real_voltage 0034  
                                                           sprintf@s 00B7  
                                                           strncmp@l 0008  
                                                           strncmp@n 0005  
                                                           strncmp@r 000A  
                                                           toupper@c 0007  
                                       __size_ofi2_Timer0_StartTimer 0008  
                                                      ___fladd@signs 000D  
                                                       ___aodiv@sign 0012  
                                                       ___fladd@aexp 000E  
                                                       ___fladd@bexp 000F  
                                                       ___aomod@sign 0012  
